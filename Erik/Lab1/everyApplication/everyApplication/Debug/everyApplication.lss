
everyApplication.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000007a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000072c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  000007a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000810  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ea2  00000000  00000000  00000888  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000928  00000000  00000000  0000172a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005c8  00000000  00000000  00002052  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  0000261c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ca  00000000  00000000  000027bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b8a  00000000  00000000  00002c86  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003810  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
   8:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
   c:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  10:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  14:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  18:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  1c:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  20:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  24:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  28:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  2c:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  30:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  34:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  38:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  3c:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  40:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  44:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  48:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  4c:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  50:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  54:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>
  58:	0c 94 40 00 	jmp	0x80	; 0x80 <__bad_interrupt>

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d4 e0       	ldi	r29, 0x04	; 4
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_clear_bss>:
  68:	21 e0       	ldi	r18, 0x01	; 1
  6a:	a0 e0       	ldi	r26, 0x00	; 0
  6c:	b1 e0       	ldi	r27, 0x01	; 1
  6e:	01 c0       	rjmp	.+2      	; 0x72 <.do_clear_bss_start>

00000070 <.do_clear_bss_loop>:
  70:	1d 92       	st	X+, r1

00000072 <.do_clear_bss_start>:
  72:	a2 30       	cpi	r26, 0x02	; 2
  74:	b2 07       	cpc	r27, r18
  76:	e1 f7       	brne	.-8      	; 0x70 <.do_clear_bss_loop>
  78:	0e 94 10 03 	call	0x620	; 0x620 <main>
  7c:	0c 94 94 03 	jmp	0x728	; 0x728 <_exit>

00000080 <__bad_interrupt>:
  80:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000084 <LCD_Init>:
	int buttonpressed = 0;
	
	while(1){
		/* If bit 7 in pinb is 1 */
		if (((1<< PINB) == 1) && (buttonpressed == 1)) {
			buttonpressed = 0;
  84:	e1 e6       	ldi	r30, 0x61	; 97
  86:	f0 e0       	ldi	r31, 0x00	; 0
  88:	80 e8       	ldi	r24, 0x80	; 128
  8a:	80 83       	st	Z, r24
  8c:	10 82       	st	Z, r1
  8e:	97 eb       	ldi	r25, 0xB7	; 183
  90:	90 93 e5 00 	sts	0x00E5, r25	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
  94:	97 e0       	ldi	r25, 0x07	; 7
  96:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
  9a:	9f e0       	ldi	r25, 0x0F	; 15
  9c:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
  a0:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
  a4:	94 e0       	ldi	r25, 0x04	; 4
  a6:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  aa:	85 b9       	out	0x05, r24	; 5
  ac:	08 95       	ret

000000ae <printChar>:
  ae:	0f 93       	push	r16
  b0:	1f 93       	push	r17
  b2:	83 30       	cpi	r24, 0x03	; 3
  b4:	91 05       	cpc	r25, r1
  b6:	09 f4       	brne	.+2      	; 0xba <printChar+0xc>
  b8:	5b c0       	rjmp	.+182    	; 0x170 <printChar+0xc2>
  ba:	34 f4       	brge	.+12     	; 0xc8 <printChar+0x1a>
  bc:	81 30       	cpi	r24, 0x01	; 1
  be:	91 05       	cpc	r25, r1
  c0:	69 f0       	breq	.+26     	; 0xdc <printChar+0x2e>
  c2:	02 97       	sbiw	r24, 0x02	; 2
  c4:	21 f1       	breq	.+72     	; 0x10e <printChar+0x60>
  c6:	e7 c0       	rjmp	.+462    	; 0x296 <printChar+0x1e8>
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	91 05       	cpc	r25, r1
  cc:	09 f4       	brne	.+2      	; 0xd0 <printChar+0x22>
  ce:	9a c0       	rjmp	.+308    	; 0x204 <printChar+0x156>
  d0:	0c f4       	brge	.+2      	; 0xd4 <printChar+0x26>
  d2:	67 c0       	rjmp	.+206    	; 0x1a2 <printChar+0xf4>
  d4:	06 97       	sbiw	r24, 0x06	; 6
  d6:	09 f4       	brne	.+2      	; 0xda <printChar+0x2c>
  d8:	ae c0       	rjmp	.+348    	; 0x236 <printChar+0x188>
  da:	dd c0       	rjmp	.+442    	; 0x296 <printChar+0x1e8>
  dc:	ec ee       	ldi	r30, 0xEC	; 236
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	80 7f       	andi	r24, 0xF0	; 240
  e4:	68 2b       	or	r22, r24
  e6:	60 83       	st	Z, r22
  e8:	e1 ef       	ldi	r30, 0xF1	; 241
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	80 7f       	andi	r24, 0xF0	; 240
  f0:	48 2b       	or	r20, r24
  f2:	40 83       	st	Z, r20
  f4:	e6 ef       	ldi	r30, 0xF6	; 246
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	80 7f       	andi	r24, 0xF0	; 240
  fc:	28 2b       	or	r18, r24
  fe:	20 83       	st	Z, r18
 100:	eb ef       	ldi	r30, 0xFB	; 251
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	80 7f       	andi	r24, 0xF0	; 240
 108:	08 2b       	or	r16, r24
 10a:	00 83       	st	Z, r16
 10c:	c4 c0       	rjmp	.+392    	; 0x296 <printChar+0x1e8>
 10e:	ec ee       	ldi	r30, 0xEC	; 236
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	62 95       	swap	r22
 116:	72 95       	swap	r23
 118:	70 7f       	andi	r23, 0xF0	; 240
 11a:	76 27       	eor	r23, r22
 11c:	60 7f       	andi	r22, 0xF0	; 240
 11e:	76 27       	eor	r23, r22
 120:	8f 70       	andi	r24, 0x0F	; 15
 122:	68 2b       	or	r22, r24
 124:	60 83       	st	Z, r22
 126:	e1 ef       	ldi	r30, 0xF1	; 241
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	42 95       	swap	r20
 12e:	52 95       	swap	r21
 130:	50 7f       	andi	r21, 0xF0	; 240
 132:	54 27       	eor	r21, r20
 134:	40 7f       	andi	r20, 0xF0	; 240
 136:	54 27       	eor	r21, r20
 138:	8f 70       	andi	r24, 0x0F	; 15
 13a:	48 2b       	or	r20, r24
 13c:	40 83       	st	Z, r20
 13e:	e6 ef       	ldi	r30, 0xF6	; 246
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	22 95       	swap	r18
 146:	32 95       	swap	r19
 148:	30 7f       	andi	r19, 0xF0	; 240
 14a:	32 27       	eor	r19, r18
 14c:	20 7f       	andi	r18, 0xF0	; 240
 14e:	32 27       	eor	r19, r18
 150:	8f 70       	andi	r24, 0x0F	; 15
 152:	28 2b       	or	r18, r24
 154:	20 83       	st	Z, r18
 156:	eb ef       	ldi	r30, 0xFB	; 251
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	02 95       	swap	r16
 15e:	12 95       	swap	r17
 160:	10 7f       	andi	r17, 0xF0	; 240
 162:	10 27       	eor	r17, r16
 164:	00 7f       	andi	r16, 0xF0	; 240
 166:	10 27       	eor	r17, r16
 168:	8f 70       	andi	r24, 0x0F	; 15
 16a:	08 2b       	or	r16, r24
 16c:	00 83       	st	Z, r16
 16e:	93 c0       	rjmp	.+294    	; 0x296 <printChar+0x1e8>
 170:	ed ee       	ldi	r30, 0xED	; 237
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	80 7f       	andi	r24, 0xF0	; 240
 178:	68 2b       	or	r22, r24
 17a:	60 83       	st	Z, r22
 17c:	e2 ef       	ldi	r30, 0xF2	; 242
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	80 81       	ld	r24, Z
 182:	80 7f       	andi	r24, 0xF0	; 240
 184:	48 2b       	or	r20, r24
 186:	40 83       	st	Z, r20
 188:	e7 ef       	ldi	r30, 0xF7	; 247
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	80 81       	ld	r24, Z
 18e:	80 7f       	andi	r24, 0xF0	; 240
 190:	28 2b       	or	r18, r24
 192:	20 83       	st	Z, r18
 194:	ec ef       	ldi	r30, 0xFC	; 252
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	80 7f       	andi	r24, 0xF0	; 240
 19c:	08 2b       	or	r16, r24
 19e:	00 83       	st	Z, r16
 1a0:	7a c0       	rjmp	.+244    	; 0x296 <printChar+0x1e8>
 1a2:	ed ee       	ldi	r30, 0xED	; 237
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	80 81       	ld	r24, Z
 1a8:	62 95       	swap	r22
 1aa:	72 95       	swap	r23
 1ac:	70 7f       	andi	r23, 0xF0	; 240
 1ae:	76 27       	eor	r23, r22
 1b0:	60 7f       	andi	r22, 0xF0	; 240
 1b2:	76 27       	eor	r23, r22
 1b4:	8f 70       	andi	r24, 0x0F	; 15
 1b6:	68 2b       	or	r22, r24
 1b8:	60 83       	st	Z, r22
 1ba:	e2 ef       	ldi	r30, 0xF2	; 242
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	42 95       	swap	r20
 1c2:	52 95       	swap	r21
 1c4:	50 7f       	andi	r21, 0xF0	; 240
 1c6:	54 27       	eor	r21, r20
 1c8:	40 7f       	andi	r20, 0xF0	; 240
 1ca:	54 27       	eor	r21, r20
 1cc:	8f 70       	andi	r24, 0x0F	; 15
 1ce:	48 2b       	or	r20, r24
 1d0:	40 83       	st	Z, r20
 1d2:	e7 ef       	ldi	r30, 0xF7	; 247
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	80 81       	ld	r24, Z
 1d8:	22 95       	swap	r18
 1da:	32 95       	swap	r19
 1dc:	30 7f       	andi	r19, 0xF0	; 240
 1de:	32 27       	eor	r19, r18
 1e0:	20 7f       	andi	r18, 0xF0	; 240
 1e2:	32 27       	eor	r19, r18
 1e4:	8f 70       	andi	r24, 0x0F	; 15
 1e6:	28 2b       	or	r18, r24
 1e8:	20 83       	st	Z, r18
 1ea:	ec ef       	ldi	r30, 0xFC	; 252
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	80 81       	ld	r24, Z
 1f0:	02 95       	swap	r16
 1f2:	12 95       	swap	r17
 1f4:	10 7f       	andi	r17, 0xF0	; 240
 1f6:	10 27       	eor	r17, r16
 1f8:	00 7f       	andi	r16, 0xF0	; 240
 1fa:	10 27       	eor	r17, r16
 1fc:	8f 70       	andi	r24, 0x0F	; 15
 1fe:	08 2b       	or	r16, r24
 200:	00 83       	st	Z, r16
 202:	49 c0       	rjmp	.+146    	; 0x296 <printChar+0x1e8>
 204:	ee ee       	ldi	r30, 0xEE	; 238
 206:	f0 e0       	ldi	r31, 0x00	; 0
 208:	80 81       	ld	r24, Z
 20a:	80 7f       	andi	r24, 0xF0	; 240
 20c:	68 2b       	or	r22, r24
 20e:	60 83       	st	Z, r22
 210:	e3 ef       	ldi	r30, 0xF3	; 243
 212:	f0 e0       	ldi	r31, 0x00	; 0
 214:	80 81       	ld	r24, Z
 216:	80 7f       	andi	r24, 0xF0	; 240
 218:	48 2b       	or	r20, r24
 21a:	40 83       	st	Z, r20
 21c:	e8 ef       	ldi	r30, 0xF8	; 248
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	80 81       	ld	r24, Z
 222:	80 7f       	andi	r24, 0xF0	; 240
 224:	28 2b       	or	r18, r24
 226:	20 83       	st	Z, r18
 228:	ed ef       	ldi	r30, 0xFD	; 253
 22a:	f0 e0       	ldi	r31, 0x00	; 0
 22c:	80 81       	ld	r24, Z
 22e:	80 7f       	andi	r24, 0xF0	; 240
 230:	08 2b       	or	r16, r24
 232:	00 83       	st	Z, r16
 234:	30 c0       	rjmp	.+96     	; 0x296 <printChar+0x1e8>
 236:	ee ee       	ldi	r30, 0xEE	; 238
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	80 81       	ld	r24, Z
 23c:	62 95       	swap	r22
 23e:	72 95       	swap	r23
 240:	70 7f       	andi	r23, 0xF0	; 240
 242:	76 27       	eor	r23, r22
 244:	60 7f       	andi	r22, 0xF0	; 240
 246:	76 27       	eor	r23, r22
 248:	8f 70       	andi	r24, 0x0F	; 15
 24a:	68 2b       	or	r22, r24
 24c:	60 83       	st	Z, r22
 24e:	e3 ef       	ldi	r30, 0xF3	; 243
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	80 81       	ld	r24, Z
 254:	42 95       	swap	r20
 256:	52 95       	swap	r21
 258:	50 7f       	andi	r21, 0xF0	; 240
 25a:	54 27       	eor	r21, r20
 25c:	40 7f       	andi	r20, 0xF0	; 240
 25e:	54 27       	eor	r21, r20
 260:	8f 70       	andi	r24, 0x0F	; 15
 262:	48 2b       	or	r20, r24
 264:	40 83       	st	Z, r20
 266:	e8 ef       	ldi	r30, 0xF8	; 248
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	80 81       	ld	r24, Z
 26c:	22 95       	swap	r18
 26e:	32 95       	swap	r19
 270:	30 7f       	andi	r19, 0xF0	; 240
 272:	32 27       	eor	r19, r18
 274:	20 7f       	andi	r18, 0xF0	; 240
 276:	32 27       	eor	r19, r18
 278:	8f 70       	andi	r24, 0x0F	; 15
 27a:	28 2b       	or	r18, r24
 27c:	20 83       	st	Z, r18
 27e:	ed ef       	ldi	r30, 0xFD	; 253
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	80 81       	ld	r24, Z
 284:	02 95       	swap	r16
 286:	12 95       	swap	r17
 288:	10 7f       	andi	r17, 0xF0	; 240
 28a:	10 27       	eor	r17, r16
 28c:	00 7f       	andi	r16, 0xF0	; 240
 28e:	10 27       	eor	r17, r16
 290:	8f 70       	andi	r24, 0x0F	; 15
 292:	08 2b       	or	r16, r24
 294:	00 83       	st	Z, r16
 296:	1f 91       	pop	r17
 298:	0f 91       	pop	r16
 29a:	08 95       	ret

0000029c <writeChar>:
 29c:	ef 92       	push	r14
 29e:	ff 92       	push	r15
 2a0:	0f 93       	push	r16
 2a2:	1f 93       	push	r17
 2a4:	cf 93       	push	r28
 2a6:	df 93       	push	r29
 2a8:	67 30       	cpi	r22, 0x07	; 7
 2aa:	71 05       	cpc	r23, r1
 2ac:	0c f0       	brlt	.+2      	; 0x2b0 <writeChar+0x14>
 2ae:	a5 c0       	rjmp	.+330    	; 0x3fa <writeChar+0x15e>
 2b0:	7b 01       	movw	r14, r22
 2b2:	c8 2f       	mov	r28, r24
 2b4:	d0 e0       	ldi	r29, 0x00	; 0
 2b6:	ca 30       	cpi	r28, 0x0A	; 10
 2b8:	d1 05       	cpc	r29, r1
 2ba:	64 f0       	brlt	.+24     	; 0x2d4 <writeChar+0x38>
 2bc:	0c e0       	ldi	r16, 0x0C	; 12
 2be:	10 e0       	ldi	r17, 0x00	; 0
 2c0:	20 e0       	ldi	r18, 0x00	; 0
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	42 e0       	ldi	r20, 0x02	; 2
 2c6:	50 e0       	ldi	r21, 0x00	; 0
 2c8:	68 e0       	ldi	r22, 0x08	; 8
 2ca:	70 e0       	ldi	r23, 0x00	; 0
 2cc:	c7 01       	movw	r24, r14
 2ce:	0e 94 57 00 	call	0xae	; 0xae <printChar>
 2d2:	93 c0       	rjmp	.+294    	; 0x3fa <writeChar+0x15e>
 2d4:	20 97       	sbiw	r28, 0x00	; 0
 2d6:	61 f4       	brne	.+24     	; 0x2f0 <writeChar+0x54>
 2d8:	01 e0       	ldi	r16, 0x01	; 1
 2da:	10 e0       	ldi	r17, 0x00	; 0
 2dc:	25 e0       	ldi	r18, 0x05	; 5
 2de:	30 e0       	ldi	r19, 0x00	; 0
 2e0:	45 e0       	ldi	r20, 0x05	; 5
 2e2:	50 e0       	ldi	r21, 0x00	; 0
 2e4:	61 e0       	ldi	r22, 0x01	; 1
 2e6:	70 e0       	ldi	r23, 0x00	; 0
 2e8:	c7 01       	movw	r24, r14
 2ea:	0e 94 57 00 	call	0xae	; 0xae <printChar>
 2ee:	1e c0       	rjmp	.+60     	; 0x32c <writeChar+0x90>
 2f0:	c1 30       	cpi	r28, 0x01	; 1
 2f2:	d1 05       	cpc	r29, r1
 2f4:	61 f4       	brne	.+24     	; 0x30e <writeChar+0x72>
 2f6:	00 e0       	ldi	r16, 0x00	; 0
 2f8:	10 e0       	ldi	r17, 0x00	; 0
 2fa:	21 e0       	ldi	r18, 0x01	; 1
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	41 e0       	ldi	r20, 0x01	; 1
 300:	50 e0       	ldi	r21, 0x00	; 0
 302:	60 e0       	ldi	r22, 0x00	; 0
 304:	70 e0       	ldi	r23, 0x00	; 0
 306:	c7 01       	movw	r24, r14
 308:	0e 94 57 00 	call	0xae	; 0xae <printChar>
 30c:	1e c0       	rjmp	.+60     	; 0x34a <writeChar+0xae>
 30e:	c2 30       	cpi	r28, 0x02	; 2
 310:	d1 05       	cpc	r29, r1
 312:	61 f4       	brne	.+24     	; 0x32c <writeChar+0x90>
 314:	01 e0       	ldi	r16, 0x01	; 1
 316:	10 e0       	ldi	r17, 0x00	; 0
 318:	2e e0       	ldi	r18, 0x0E	; 14
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	41 e0       	ldi	r20, 0x01	; 1
 31e:	50 e0       	ldi	r21, 0x00	; 0
 320:	61 e0       	ldi	r22, 0x01	; 1
 322:	70 e0       	ldi	r23, 0x00	; 0
 324:	c7 01       	movw	r24, r14
 326:	0e 94 57 00 	call	0xae	; 0xae <printChar>
 32a:	1e c0       	rjmp	.+60     	; 0x368 <writeChar+0xcc>
 32c:	c3 30       	cpi	r28, 0x03	; 3
 32e:	d1 05       	cpc	r29, r1
 330:	61 f4       	brne	.+24     	; 0x34a <writeChar+0xae>
 332:	01 e0       	ldi	r16, 0x01	; 1
 334:	10 e0       	ldi	r17, 0x00	; 0
 336:	2b e0       	ldi	r18, 0x0B	; 11
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	41 e0       	ldi	r20, 0x01	; 1
 33c:	50 e0       	ldi	r21, 0x00	; 0
 33e:	61 e0       	ldi	r22, 0x01	; 1
 340:	70 e0       	ldi	r23, 0x00	; 0
 342:	c7 01       	movw	r24, r14
 344:	0e 94 57 00 	call	0xae	; 0xae <printChar>
 348:	1e c0       	rjmp	.+60     	; 0x386 <writeChar+0xea>
 34a:	c4 30       	cpi	r28, 0x04	; 4
 34c:	d1 05       	cpc	r29, r1
 34e:	61 f4       	brne	.+24     	; 0x368 <writeChar+0xcc>
 350:	00 e0       	ldi	r16, 0x00	; 0
 352:	10 e0       	ldi	r17, 0x00	; 0
 354:	2b e0       	ldi	r18, 0x0B	; 11
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	45 e0       	ldi	r20, 0x05	; 5
 35a:	50 e0       	ldi	r21, 0x00	; 0
 35c:	60 e0       	ldi	r22, 0x00	; 0
 35e:	70 e0       	ldi	r23, 0x00	; 0
 360:	c7 01       	movw	r24, r14
 362:	0e 94 57 00 	call	0xae	; 0xae <printChar>
 366:	1e c0       	rjmp	.+60     	; 0x3a4 <writeChar+0x108>
 368:	c5 30       	cpi	r28, 0x05	; 5
 36a:	d1 05       	cpc	r29, r1
 36c:	61 f4       	brne	.+24     	; 0x386 <writeChar+0xea>
 36e:	01 e0       	ldi	r16, 0x01	; 1
 370:	10 e0       	ldi	r17, 0x00	; 0
 372:	2b e0       	ldi	r18, 0x0B	; 11
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	44 e0       	ldi	r20, 0x04	; 4
 378:	50 e0       	ldi	r21, 0x00	; 0
 37a:	61 e0       	ldi	r22, 0x01	; 1
 37c:	70 e0       	ldi	r23, 0x00	; 0
 37e:	c7 01       	movw	r24, r14
 380:	0e 94 57 00 	call	0xae	; 0xae <printChar>
 384:	1e c0       	rjmp	.+60     	; 0x3c2 <writeChar+0x126>
 386:	c6 30       	cpi	r28, 0x06	; 6
 388:	d1 05       	cpc	r29, r1
 38a:	61 f4       	brne	.+24     	; 0x3a4 <writeChar+0x108>
 38c:	01 e0       	ldi	r16, 0x01	; 1
 38e:	10 e0       	ldi	r17, 0x00	; 0
 390:	2f e0       	ldi	r18, 0x0F	; 15
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	44 e0       	ldi	r20, 0x04	; 4
 396:	50 e0       	ldi	r21, 0x00	; 0
 398:	61 e0       	ldi	r22, 0x01	; 1
 39a:	70 e0       	ldi	r23, 0x00	; 0
 39c:	c7 01       	movw	r24, r14
 39e:	0e 94 57 00 	call	0xae	; 0xae <printChar>
 3a2:	1e c0       	rjmp	.+60     	; 0x3e0 <writeChar+0x144>
 3a4:	c7 30       	cpi	r28, 0x07	; 7
 3a6:	d1 05       	cpc	r29, r1
 3a8:	61 f4       	brne	.+24     	; 0x3c2 <writeChar+0x126>
 3aa:	00 e0       	ldi	r16, 0x00	; 0
 3ac:	10 e0       	ldi	r17, 0x00	; 0
 3ae:	21 e0       	ldi	r18, 0x01	; 1
 3b0:	30 e0       	ldi	r19, 0x00	; 0
 3b2:	41 e0       	ldi	r20, 0x01	; 1
 3b4:	50 e0       	ldi	r21, 0x00	; 0
 3b6:	61 e0       	ldi	r22, 0x01	; 1
 3b8:	70 e0       	ldi	r23, 0x00	; 0
 3ba:	c7 01       	movw	r24, r14
 3bc:	0e 94 57 00 	call	0xae	; 0xae <printChar>
 3c0:	1c c0       	rjmp	.+56     	; 0x3fa <writeChar+0x15e>
 3c2:	c8 30       	cpi	r28, 0x08	; 8
 3c4:	d1 05       	cpc	r29, r1
 3c6:	61 f4       	brne	.+24     	; 0x3e0 <writeChar+0x144>
 3c8:	01 e0       	ldi	r16, 0x01	; 1
 3ca:	10 e0       	ldi	r17, 0x00	; 0
 3cc:	2f e0       	ldi	r18, 0x0F	; 15
 3ce:	30 e0       	ldi	r19, 0x00	; 0
 3d0:	45 e0       	ldi	r20, 0x05	; 5
 3d2:	50 e0       	ldi	r21, 0x00	; 0
 3d4:	61 e0       	ldi	r22, 0x01	; 1
 3d6:	70 e0       	ldi	r23, 0x00	; 0
 3d8:	c7 01       	movw	r24, r14
 3da:	0e 94 57 00 	call	0xae	; 0xae <printChar>
 3de:	0d c0       	rjmp	.+26     	; 0x3fa <writeChar+0x15e>
 3e0:	29 97       	sbiw	r28, 0x09	; 9
 3e2:	59 f4       	brne	.+22     	; 0x3fa <writeChar+0x15e>
 3e4:	00 e0       	ldi	r16, 0x00	; 0
 3e6:	10 e0       	ldi	r17, 0x00	; 0
 3e8:	2b e0       	ldi	r18, 0x0B	; 11
 3ea:	30 e0       	ldi	r19, 0x00	; 0
 3ec:	45 e0       	ldi	r20, 0x05	; 5
 3ee:	50 e0       	ldi	r21, 0x00	; 0
 3f0:	61 e0       	ldi	r22, 0x01	; 1
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	c7 01       	movw	r24, r14
 3f6:	0e 94 57 00 	call	0xae	; 0xae <printChar>
 3fa:	df 91       	pop	r29
 3fc:	cf 91       	pop	r28
 3fe:	1f 91       	pop	r17
 400:	0f 91       	pop	r16
 402:	ff 90       	pop	r15
 404:	ef 90       	pop	r14
 406:	08 95       	ret

00000408 <writeLong>:
 408:	8f 92       	push	r8
 40a:	9f 92       	push	r9
 40c:	af 92       	push	r10
 40e:	bf 92       	push	r11
 410:	ef 92       	push	r14
 412:	ff 92       	push	r15
 414:	0f 93       	push	r16
 416:	1f 93       	push	r17
 418:	cf 93       	push	r28
 41a:	df 93       	push	r29
 41c:	c6 e0       	ldi	r28, 0x06	; 6
 41e:	d0 e0       	ldi	r29, 0x00	; 0
 420:	0f 2e       	mov	r0, r31
 422:	fa e0       	ldi	r31, 0x0A	; 10
 424:	8f 2e       	mov	r8, r31
 426:	91 2c       	mov	r9, r1
 428:	a1 2c       	mov	r10, r1
 42a:	b1 2c       	mov	r11, r1
 42c:	f0 2d       	mov	r31, r0
 42e:	61 15       	cp	r22, r1
 430:	71 05       	cpc	r23, r1
 432:	81 05       	cpc	r24, r1
 434:	91 05       	cpc	r25, r1
 436:	91 f0       	breq	.+36     	; 0x45c <writeLong+0x54>
 438:	a5 01       	movw	r20, r10
 43a:	94 01       	movw	r18, r8
 43c:	0e 94 39 03 	call	0x672	; 0x672 <__divmodsi4>
 440:	e2 2e       	mov	r14, r18
 442:	f3 2e       	mov	r15, r19
 444:	04 2f       	mov	r16, r20
 446:	15 2f       	mov	r17, r21
 448:	86 2f       	mov	r24, r22
 44a:	be 01       	movw	r22, r28
 44c:	0e 94 4e 01 	call	0x29c	; 0x29c <writeChar>
 450:	6e 2d       	mov	r22, r14
 452:	7f 2d       	mov	r23, r15
 454:	80 2f       	mov	r24, r16
 456:	91 2f       	mov	r25, r17
 458:	21 97       	sbiw	r28, 0x01	; 1
 45a:	49 f7       	brne	.-46     	; 0x42e <writeLong+0x26>
 45c:	df 91       	pop	r29
 45e:	cf 91       	pop	r28
 460:	1f 91       	pop	r17
 462:	0f 91       	pop	r16
 464:	ff 90       	pop	r15
 466:	ef 90       	pop	r14
 468:	bf 90       	pop	r11
 46a:	af 90       	pop	r10
 46c:	9f 90       	pop	r9
 46e:	8f 90       	pop	r8
 470:	08 95       	ret

00000472 <is_Primes>:
 472:	8f 92       	push	r8
 474:	9f 92       	push	r9
 476:	af 92       	push	r10
 478:	bf 92       	push	r11
 47a:	cf 92       	push	r12
 47c:	df 92       	push	r13
 47e:	ef 92       	push	r14
 480:	ff 92       	push	r15
 482:	4b 01       	movw	r8, r22
 484:	5c 01       	movw	r10, r24
 486:	85 e0       	ldi	r24, 0x05	; 5
 488:	88 16       	cp	r8, r24
 48a:	91 04       	cpc	r9, r1
 48c:	a1 04       	cpc	r10, r1
 48e:	b1 04       	cpc	r11, r1
 490:	dc f1       	brlt	.+118    	; 0x508 <__stack+0x9>
 492:	d5 01       	movw	r26, r10
 494:	c4 01       	movw	r24, r8
 496:	81 70       	andi	r24, 0x01	; 1
 498:	99 27       	eor	r25, r25
 49a:	aa 27       	eor	r26, r26
 49c:	b0 78       	andi	r27, 0x80	; 128
 49e:	bb 23       	and	r27, r27
 4a0:	54 f4       	brge	.+20     	; 0x4b6 <is_Primes+0x44>
 4a2:	01 97       	sbiw	r24, 0x01	; 1
 4a4:	a1 09       	sbc	r26, r1
 4a6:	b1 09       	sbc	r27, r1
 4a8:	8e 6f       	ori	r24, 0xFE	; 254
 4aa:	9f 6f       	ori	r25, 0xFF	; 255
 4ac:	af 6f       	ori	r26, 0xFF	; 255
 4ae:	bf 6f       	ori	r27, 0xFF	; 255
 4b0:	01 96       	adiw	r24, 0x01	; 1
 4b2:	a1 1d       	adc	r26, r1
 4b4:	b1 1d       	adc	r27, r1
 4b6:	89 2b       	or	r24, r25
 4b8:	8a 2b       	or	r24, r26
 4ba:	8b 2b       	or	r24, r27
 4bc:	51 f1       	breq	.+84     	; 0x512 <__stack+0x13>
 4be:	c1 2c       	mov	r12, r1
 4c0:	d1 2c       	mov	r13, r1
 4c2:	76 01       	movw	r14, r12
 4c4:	68 94       	set
 4c6:	c1 f8       	bld	r12, 1
 4c8:	0a c0       	rjmp	.+20     	; 0x4de <is_Primes+0x6c>
 4ca:	c5 01       	movw	r24, r10
 4cc:	b4 01       	movw	r22, r8
 4ce:	a7 01       	movw	r20, r14
 4d0:	96 01       	movw	r18, r12
 4d2:	0e 94 39 03 	call	0x672	; 0x672 <__divmodsi4>
 4d6:	67 2b       	or	r22, r23
 4d8:	68 2b       	or	r22, r24
 4da:	69 2b       	or	r22, r25
 4dc:	f1 f0       	breq	.+60     	; 0x51a <__stack+0x1b>
 4de:	8f ef       	ldi	r24, 0xFF	; 255
 4e0:	c8 1a       	sub	r12, r24
 4e2:	d8 0a       	sbc	r13, r24
 4e4:	e8 0a       	sbc	r14, r24
 4e6:	f8 0a       	sbc	r15, r24
 4e8:	a7 01       	movw	r20, r14
 4ea:	96 01       	movw	r18, r12
 4ec:	c7 01       	movw	r24, r14
 4ee:	b6 01       	movw	r22, r12
 4f0:	0e 94 29 03 	call	0x652	; 0x652 <__mulsi3>
 4f4:	68 15       	cp	r22, r8
 4f6:	79 05       	cpc	r23, r9
 4f8:	8a 05       	cpc	r24, r10
 4fa:	9b 05       	cpc	r25, r11
 4fc:	34 f3       	brlt	.-52     	; 0x4ca <is_Primes+0x58>
 4fe:	61 e0       	ldi	r22, 0x01	; 1
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	80 e0       	ldi	r24, 0x00	; 0
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	0c c0       	rjmp	.+24     	; 0x520 <__stack+0x21>
 508:	61 e0       	ldi	r22, 0x01	; 1
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	80 e0       	ldi	r24, 0x00	; 0
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	07 c0       	rjmp	.+14     	; 0x520 <__stack+0x21>
 512:	60 e0       	ldi	r22, 0x00	; 0
 514:	70 e0       	ldi	r23, 0x00	; 0
 516:	cb 01       	movw	r24, r22
 518:	03 c0       	rjmp	.+6      	; 0x520 <__stack+0x21>
 51a:	60 e0       	ldi	r22, 0x00	; 0
 51c:	70 e0       	ldi	r23, 0x00	; 0
 51e:	cb 01       	movw	r24, r22
 520:	ff 90       	pop	r15
 522:	ef 90       	pop	r14
 524:	df 90       	pop	r13
 526:	cf 90       	pop	r12
 528:	bf 90       	pop	r11
 52a:	af 90       	pop	r10
 52c:	9f 90       	pop	r9
 52e:	8f 90       	pop	r8
 530:	08 95       	ret

00000532 <primes2>:
			buttonpressed = 1;
		}
	}
}

void primes2(unsigned long *l){
 532:	cf 92       	push	r12
 534:	df 92       	push	r13
 536:	ef 92       	push	r14
 538:	ff 92       	push	r15
 53a:	cf 93       	push	r28
 53c:	df 93       	push	r29
 53e:	ec 01       	movw	r28, r24
	if (is_Primes(*l) == 1){
 540:	c8 80       	ld	r12, Y
 542:	d9 80       	ldd	r13, Y+1	; 0x01
 544:	ea 80       	ldd	r14, Y+2	; 0x02
 546:	fb 80       	ldd	r15, Y+3	; 0x03
 548:	c7 01       	movw	r24, r14
 54a:	b6 01       	movw	r22, r12
 54c:	0e 94 39 02 	call	0x472	; 0x472 <is_Primes>
 550:	61 30       	cpi	r22, 0x01	; 1
 552:	71 05       	cpc	r23, r1
 554:	81 05       	cpc	r24, r1
 556:	91 05       	cpc	r25, r1
 558:	21 f4       	brne	.+8      	; 0x562 <primes2+0x30>
		writeLong(*l);
 55a:	c7 01       	movw	r24, r14
 55c:	b6 01       	movw	r22, r12
 55e:	0e 94 04 02 	call	0x408	; 0x408 <writeLong>
	}
	*l+=1;
 562:	88 81       	ld	r24, Y
 564:	99 81       	ldd	r25, Y+1	; 0x01
 566:	aa 81       	ldd	r26, Y+2	; 0x02
 568:	bb 81       	ldd	r27, Y+3	; 0x03
 56a:	01 96       	adiw	r24, 0x01	; 1
 56c:	a1 1d       	adc	r26, r1
 56e:	b1 1d       	adc	r27, r1
 570:	88 83       	st	Y, r24
 572:	99 83       	std	Y+1, r25	; 0x01
 574:	aa 83       	std	Y+2, r26	; 0x02
 576:	bb 83       	std	Y+3, r27	; 0x03
}
 578:	df 91       	pop	r29
 57a:	cf 91       	pop	r28
 57c:	ff 90       	pop	r15
 57e:	ef 90       	pop	r14
 580:	df 90       	pop	r13
 582:	cf 90       	pop	r12
 584:	08 95       	ret

00000586 <blink2>:
void blink2(){
	// representing the next timer value to wait for
	unsigned int timer;
	
	// check value of TCNT1, should reset to 0 when reaching max value 65535,
	timer = TCNT1;
 586:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 58a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
	
	//Turn special symbol on LCD OFF, when timer is bigger then 32768
	if (timer >= 32768){
 58e:	99 23       	and	r25, r25
 590:	1c f4       	brge	.+6      	; 0x598 <blink2+0x12>
		LCDDR13 = 0x0;
 592:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7e00f9>
 596:	08 95       	ret
	}
	// Turn special symbol on LCD ON, when timer is smaller then 32768
	else {
		LCDDR13 = 0x01;
 598:	81 e0       	ldi	r24, 0x01	; 1
 59a:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7e00f9>
 59e:	08 95       	ret

000005a0 <button2>:
	}	
}

void button2(){
	/* If bit 7 in pinb is 1 */
	if (((1<< PINB) == 1) && (buttonpressed == 1)) {
 5a0:	23 b1       	in	r18, 0x03	; 3
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	02 c0       	rjmp	.+4      	; 0x5ac <button2+0xc>
 5a8:	88 0f       	add	r24, r24
 5aa:	99 1f       	adc	r25, r25
 5ac:	2a 95       	dec	r18
 5ae:	e2 f7       	brpl	.-8      	; 0x5a8 <button2+0x8>
 5b0:	01 97       	sbiw	r24, 0x01	; 1
 5b2:	a9 f4       	brne	.+42     	; 0x5de <button2+0x3e>
 5b4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 5b8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 5bc:	01 97       	sbiw	r24, 0x01	; 1
 5be:	79 f4       	brne	.+30     	; 0x5de <button2+0x3e>
		buttonpressed = 0;
 5c0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 5c4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	}
	/* If bit 7 in pinb is 0 */
	if (((1<<PINB) == 0) && (buttonpressed == 0)) {
 5c8:	23 b1       	in	r18, 0x03	; 3
 5ca:	81 e0       	ldi	r24, 0x01	; 1
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <button2+0x34>
 5d0:	88 0f       	add	r24, r24
 5d2:	99 1f       	adc	r25, r25
 5d4:	2a 95       	dec	r18
 5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <button2+0x30>
 5d8:	89 2b       	or	r24, r25
 5da:	89 f0       	breq	.+34     	; 0x5fe <button2+0x5e>
 5dc:	08 95       	ret
 5de:	23 b1       	in	r18, 0x03	; 3
 5e0:	81 e0       	ldi	r24, 0x01	; 1
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <button2+0x4a>
 5e6:	88 0f       	add	r24, r24
 5e8:	99 1f       	adc	r25, r25
 5ea:	2a 95       	dec	r18
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <button2+0x46>
 5ee:	89 2b       	or	r24, r25
 5f0:	b1 f4       	brne	.+44     	; 0x61e <button2+0x7e>
 5f2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 5f6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 5fa:	89 2b       	or	r24, r25
 5fc:	81 f4       	brne	.+32     	; 0x61e <button2+0x7e>
		if ((LCDDR18 == 0x01) && (buttonpressed == 0)) {
 5fe:	80 91 fe 00 	lds	r24, 0x00FE	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
 602:	81 30       	cpi	r24, 0x01	; 1
 604:	19 f4       	brne	.+6      	; 0x60c <button2+0x6c>
			LCDDR18 = 0x00;
 606:	10 92 fe 00 	sts	0x00FE, r1	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
 60a:	03 c0       	rjmp	.+6      	; 0x612 <button2+0x72>
		}
		else{
			LCDDR18 = 0x01;
 60c:	81 e0       	ldi	r24, 0x01	; 1
 60e:	80 93 fe 00 	sts	0x00FE, r24	; 0x8000fe <__TEXT_REGION_LENGTH__+0x7e00fe>
		}
		buttonpressed = 1;
 612:	81 e0       	ldi	r24, 0x01	; 1
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 61a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 61e:	08 95       	ret

00000620 <main>:
	}
}

int main(void){
 620:	cf 93       	push	r28
 622:	df 93       	push	r29
 624:	00 d0       	rcall	.+0      	; 0x626 <main+0x6>
 626:	00 d0       	rcall	.+0      	; 0x628 <main+0x8>
 628:	cd b7       	in	r28, 0x3d	; 61
 62a:	de b7       	in	r29, 0x3e	; 62
	// LCD settings
	LCD_Init();
 62c:	0e 94 42 00 	call	0x84	; 0x84 <LCD_Init>
	
	// Lab1 part3
	//button();
	
	// Lab1 part4
	unsigned long startPrime = 25000;
 630:	88 ea       	ldi	r24, 0xA8	; 168
 632:	91 e6       	ldi	r25, 0x61	; 97
 634:	a0 e0       	ldi	r26, 0x00	; 0
 636:	b0 e0       	ldi	r27, 0x00	; 0
 638:	89 83       	std	Y+1, r24	; 0x01
 63a:	9a 83       	std	Y+2, r25	; 0x02
 63c:	ab 83       	std	Y+3, r26	; 0x03
 63e:	bc 83       	std	Y+4, r27	; 0x04
	while(1){
		blink2();
 640:	0e 94 c3 02 	call	0x586	; 0x586 <blink2>
		primes2(&startPrime);
 644:	ce 01       	movw	r24, r28
 646:	01 96       	adiw	r24, 0x01	; 1
 648:	0e 94 99 02 	call	0x532	; 0x532 <primes2>
		button2();
 64c:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <button2>
	}
 650:	f7 cf       	rjmp	.-18     	; 0x640 <main+0x20>

00000652 <__mulsi3>:
 652:	db 01       	movw	r26, r22
 654:	8f 93       	push	r24
 656:	9f 93       	push	r25
 658:	0e 94 58 03 	call	0x6b0	; 0x6b0 <__muluhisi3>
 65c:	bf 91       	pop	r27
 65e:	af 91       	pop	r26
 660:	a2 9f       	mul	r26, r18
 662:	80 0d       	add	r24, r0
 664:	91 1d       	adc	r25, r1
 666:	a3 9f       	mul	r26, r19
 668:	90 0d       	add	r25, r0
 66a:	b2 9f       	mul	r27, r18
 66c:	90 0d       	add	r25, r0
 66e:	11 24       	eor	r1, r1
 670:	08 95       	ret

00000672 <__divmodsi4>:
 672:	05 2e       	mov	r0, r21
 674:	97 fb       	bst	r25, 7
 676:	1e f4       	brtc	.+6      	; 0x67e <__divmodsi4+0xc>
 678:	00 94       	com	r0
 67a:	0e 94 50 03 	call	0x6a0	; 0x6a0 <__negsi2>
 67e:	57 fd       	sbrc	r21, 7
 680:	07 d0       	rcall	.+14     	; 0x690 <__divmodsi4_neg2>
 682:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__udivmodsi4>
 686:	07 fc       	sbrc	r0, 7
 688:	03 d0       	rcall	.+6      	; 0x690 <__divmodsi4_neg2>
 68a:	4e f4       	brtc	.+18     	; 0x69e <__divmodsi4_exit>
 68c:	0c 94 50 03 	jmp	0x6a0	; 0x6a0 <__negsi2>

00000690 <__divmodsi4_neg2>:
 690:	50 95       	com	r21
 692:	40 95       	com	r20
 694:	30 95       	com	r19
 696:	21 95       	neg	r18
 698:	3f 4f       	sbci	r19, 0xFF	; 255
 69a:	4f 4f       	sbci	r20, 0xFF	; 255
 69c:	5f 4f       	sbci	r21, 0xFF	; 255

0000069e <__divmodsi4_exit>:
 69e:	08 95       	ret

000006a0 <__negsi2>:
 6a0:	90 95       	com	r25
 6a2:	80 95       	com	r24
 6a4:	70 95       	com	r23
 6a6:	61 95       	neg	r22
 6a8:	7f 4f       	sbci	r23, 0xFF	; 255
 6aa:	8f 4f       	sbci	r24, 0xFF	; 255
 6ac:	9f 4f       	sbci	r25, 0xFF	; 255
 6ae:	08 95       	ret

000006b0 <__muluhisi3>:
 6b0:	0e 94 85 03 	call	0x70a	; 0x70a <__umulhisi3>
 6b4:	a5 9f       	mul	r26, r21
 6b6:	90 0d       	add	r25, r0
 6b8:	b4 9f       	mul	r27, r20
 6ba:	90 0d       	add	r25, r0
 6bc:	a4 9f       	mul	r26, r20
 6be:	80 0d       	add	r24, r0
 6c0:	91 1d       	adc	r25, r1
 6c2:	11 24       	eor	r1, r1
 6c4:	08 95       	ret

000006c6 <__udivmodsi4>:
 6c6:	a1 e2       	ldi	r26, 0x21	; 33
 6c8:	1a 2e       	mov	r1, r26
 6ca:	aa 1b       	sub	r26, r26
 6cc:	bb 1b       	sub	r27, r27
 6ce:	fd 01       	movw	r30, r26
 6d0:	0d c0       	rjmp	.+26     	; 0x6ec <__udivmodsi4_ep>

000006d2 <__udivmodsi4_loop>:
 6d2:	aa 1f       	adc	r26, r26
 6d4:	bb 1f       	adc	r27, r27
 6d6:	ee 1f       	adc	r30, r30
 6d8:	ff 1f       	adc	r31, r31
 6da:	a2 17       	cp	r26, r18
 6dc:	b3 07       	cpc	r27, r19
 6de:	e4 07       	cpc	r30, r20
 6e0:	f5 07       	cpc	r31, r21
 6e2:	20 f0       	brcs	.+8      	; 0x6ec <__udivmodsi4_ep>
 6e4:	a2 1b       	sub	r26, r18
 6e6:	b3 0b       	sbc	r27, r19
 6e8:	e4 0b       	sbc	r30, r20
 6ea:	f5 0b       	sbc	r31, r21

000006ec <__udivmodsi4_ep>:
 6ec:	66 1f       	adc	r22, r22
 6ee:	77 1f       	adc	r23, r23
 6f0:	88 1f       	adc	r24, r24
 6f2:	99 1f       	adc	r25, r25
 6f4:	1a 94       	dec	r1
 6f6:	69 f7       	brne	.-38     	; 0x6d2 <__udivmodsi4_loop>
 6f8:	60 95       	com	r22
 6fa:	70 95       	com	r23
 6fc:	80 95       	com	r24
 6fe:	90 95       	com	r25
 700:	9b 01       	movw	r18, r22
 702:	ac 01       	movw	r20, r24
 704:	bd 01       	movw	r22, r26
 706:	cf 01       	movw	r24, r30
 708:	08 95       	ret

0000070a <__umulhisi3>:
 70a:	a2 9f       	mul	r26, r18
 70c:	b0 01       	movw	r22, r0
 70e:	b3 9f       	mul	r27, r19
 710:	c0 01       	movw	r24, r0
 712:	a3 9f       	mul	r26, r19
 714:	70 0d       	add	r23, r0
 716:	81 1d       	adc	r24, r1
 718:	11 24       	eor	r1, r1
 71a:	91 1d       	adc	r25, r1
 71c:	b2 9f       	mul	r27, r18
 71e:	70 0d       	add	r23, r0
 720:	81 1d       	adc	r24, r1
 722:	11 24       	eor	r1, r1
 724:	91 1d       	adc	r25, r1
 726:	08 95       	ret

00000728 <_exit>:
 728:	f8 94       	cli

0000072a <__stop_program>:
 72a:	ff cf       	rjmp	.-2      	; 0x72a <__stop_program>
