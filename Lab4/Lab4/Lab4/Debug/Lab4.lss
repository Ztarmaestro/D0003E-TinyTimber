
Lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  00002090  00002124  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002090  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035b  0080012e  0080012e  00002152  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002152  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002184  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  000021c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002721  00000000  00000000  000023ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001052  00000000  00000000  00004b0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014bf  00000000  00000000  00005b5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b38  00000000  00000000  00007020  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008f6  00000000  00000000  00007b58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002727  00000000  00000000  0000844e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  0000ab75  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 1b 04 	jmp	0x836	; 0x836 <__vector_1>
       8:	0c 94 87 04 	jmp	0x90e	; 0x90e <__vector_2>
       c:	0c 94 f3 04 	jmp	0x9e6	; 0x9e6 <__vector_3>
      10:	0c 94 5f 05 	jmp	0xabe	; 0xabe <__vector_4>
      14:	0c 94 cb 05 	jmp	0xb96	; 0xb96 <__vector_5>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 a2 0c 	jmp	0x1944	; 0x1944 <__vector_7>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 50 0c 	jmp	0x18a0	; 0x18a0 <__vector_9>
      28:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__vector_10>
      2c:	0c 94 a3 06 	jmp	0xd46	; 0xd46 <__vector_11>
      30:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__vector_12>
      34:	0c 94 7b 07 	jmp	0xef6	; 0xef6 <__vector_13>
      38:	0c 94 e7 07 	jmp	0xfce	; 0xfce <__vector_14>
      3c:	0c 94 53 08 	jmp	0x10a6	; 0x10a6 <__vector_15>
      40:	0c 94 bf 08 	jmp	0x117e	; 0x117e <__vector_16>
      44:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <__vector_17>
      48:	0c 94 97 09 	jmp	0x132e	; 0x132e <__vector_18>
      4c:	0c 94 03 0a 	jmp	0x1406	; 0x1406 <__vector_19>
      50:	0c 94 6f 0a 	jmp	0x14de	; 0x14de <__vector_20>
      54:	0c 94 db 0a 	jmp	0x15b6	; 0x15b6 <__vector_21>
      58:	0c 94 47 0b 	jmp	0x168e	; 0x168e <__vector_22>
      5c:	62 00       	.word	0x0062	; ????
      5e:	67 00       	.word	0x0067	; ????
      60:	6c 00       	.word	0x006c	; ????
      62:	71 00       	.word	0x0071	; ????
      64:	76 00       	.word	0x0076	; ????
      66:	7b 00       	.word	0x007b	; ????
      68:	80 00       	.word	0x0080	; ????
      6a:	85 00       	.word	0x0085	; ????
      6c:	8a 00       	.word	0x008a	; ????
      6e:	8f 00       	.word	0x008f	; ????

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e0 e9       	ldi	r30, 0x90	; 144
      84:	f0 e2       	ldi	r31, 0x20	; 32
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	ae 32       	cpi	r26, 0x2E	; 46
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	24 e0       	ldi	r18, 0x04	; 4
      94:	ae e2       	ldi	r26, 0x2E	; 46
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a9 38       	cpi	r26, 0x89	; 137
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 0c 03 	call	0x618	; 0x618 <main>
      a6:	0c 94 46 10 	jmp	0x208c	; 0x208c <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <writeChar>:
	 }
 }*/

 //function to write a char at a position
 void writeChar(char ch, int pos)
 {
      ae:	cf 93       	push	r28
	 char reg1;
	 char reg2;
	 char reg3;
	 char reg4;

	 	 switch (ch)
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	fc 01       	movw	r30, r24
      b4:	f0 97       	sbiw	r30, 0x30	; 48
      b6:	ea 30       	cpi	r30, 0x0A	; 10
      b8:	f1 05       	cpc	r31, r1
      ba:	a8 f5       	brcc	.+106    	; 0x126 <writeChar+0x78>
      bc:	e2 5d       	subi	r30, 0xD2	; 210
      be:	ff 4f       	sbci	r31, 0xFF	; 255
      c0:	0c 94 c7 0f 	jmp	0x1f8e	; 0x1f8e <__tablejump2__>
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x05;
		 	 reg4 = 0x01;
      c4:	21 e0       	ldi	r18, 0x01	; 1
	 	 switch (ch)
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x05;
      c6:	35 e0       	ldi	r19, 0x05	; 5

	 	 switch (ch)
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
      c8:	45 e0       	ldi	r20, 0x05	; 5
	 char reg4;

	 	 switch (ch)
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
      ca:	c1 e0       	ldi	r28, 0x01	; 1
      cc:	2c c0       	rjmp	.+88     	; 0x126 <writeChar+0x78>
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
      ce:	20 e0       	ldi	r18, 0x00	; 0
		 	 reg4 = 0x01;
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
      d0:	31 e0       	ldi	r19, 0x01	; 1
		 	 reg3 = 0x05;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x01;
      d2:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x05;
		 	 reg3 = 0x05;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
      d4:	c0 e0       	ldi	r28, 0x00	; 0
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
      d6:	27 c0       	rjmp	.+78     	; 0x126 <writeChar+0x78>
		 	 case '2' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
      d8:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x00;
		 	 break;
		 	 case '2' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
      da:	3e e0       	ldi	r19, 0x0E	; 14
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '2' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
      dc:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '2' :
		 	 reg1 = 0x01;
      de:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
		 	 break;
      e0:	22 c0       	rjmp	.+68     	; 0x126 <writeChar+0x78>
		 	 case '3' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
      e2:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x01;
		 	 break;
		 	 case '3' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
      e4:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '3' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
      e6:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '3' :
		 	 reg1 = 0x01;
      e8:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
      ea:	1d c0       	rjmp	.+58     	; 0x126 <writeChar+0x78>
		 	 case '4' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
      ec:	20 e0       	ldi	r18, 0x00	; 0
		 	 reg4 = 0x01;
		 	 break;
		 	 case '4' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
      ee:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '4' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x05;
      f0:	45 e0       	ldi	r20, 0x05	; 5
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '4' :
		 	 reg1 = 0x00;
      f2:	c0 e0       	ldi	r28, 0x00	; 0
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
		 	 break;
      f4:	18 c0       	rjmp	.+48     	; 0x126 <writeChar+0x78>
		 	 case '5':
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
      f6:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x00;
		 	 break;
		 	 case '5':
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
      f8:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '5':
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
      fa:	44 e0       	ldi	r20, 0x04	; 4
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '5':
		 	 reg1 = 0x01;
      fc:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
      fe:	13 c0       	rjmp	.+38     	; 0x126 <writeChar+0x78>
		 	 case '6' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
     100:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x01;
		 	 break;
		 	 case '6' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
     102:	3f e0       	ldi	r19, 0x0F	; 15
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '6' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
     104:	44 e0       	ldi	r20, 0x04	; 4
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '6' :
		 	 reg1 = 0x01;
     106:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
     108:	0e c0       	rjmp	.+28     	; 0x126 <writeChar+0x78>
		 	 case '7' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
     10a:	20 e0       	ldi	r18, 0x00	; 0
		 	 reg4 = 0x01;
		 	 break;
		 	 case '7' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
     10c:	31 e0       	ldi	r19, 0x01	; 1
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '7' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
     10e:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '7' :
		 	 reg1 = 0x01;
     110:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
     112:	09 c0       	rjmp	.+18     	; 0x126 <writeChar+0x78>
		 	 case '8' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
     114:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x00;
		 	 break;
		 	 case '8' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
     116:	3f e0       	ldi	r19, 0x0F	; 15
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '8' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
     118:	45 e0       	ldi	r20, 0x05	; 5
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '8' :
		 	 reg1 = 0x01;
     11a:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
     11c:	04 c0       	rjmp	.+8      	; 0x126 <writeChar+0x78>
		 	 case '9' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
     11e:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x01;
		 	 break;
		 	 case '9' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
     120:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '9' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
     122:	45 e0       	ldi	r20, 0x05	; 5
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '9' :
		 	 reg1 = 0x01;
     124:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
	 	 }
		 	 switch (pos)
     126:	62 30       	cpi	r22, 0x02	; 2
     128:	71 05       	cpc	r23, r1
     12a:	09 f4       	brne	.+2      	; 0x12e <writeChar+0x80>
     12c:	5a c0       	rjmp	.+180    	; 0x1e2 <writeChar+0x134>
     12e:	3c f4       	brge	.+14     	; 0x13e <writeChar+0x90>
     130:	61 15       	cp	r22, r1
     132:	71 05       	cpc	r23, r1
     134:	79 f0       	breq	.+30     	; 0x154 <writeChar+0xa6>
     136:	61 30       	cpi	r22, 0x01	; 1
     138:	71 05       	cpc	r23, r1
     13a:	31 f1       	breq	.+76     	; 0x188 <writeChar+0xda>
     13c:	df c0       	rjmp	.+446    	; 0x2fc <writeChar+0x24e>
     13e:	64 30       	cpi	r22, 0x04	; 4
     140:	71 05       	cpc	r23, r1
     142:	09 f4       	brne	.+2      	; 0x146 <writeChar+0x98>
     144:	95 c0       	rjmp	.+298    	; 0x270 <writeChar+0x1c2>
     146:	0c f4       	brge	.+2      	; 0x14a <writeChar+0x9c>
     148:	66 c0       	rjmp	.+204    	; 0x216 <writeChar+0x168>
     14a:	65 30       	cpi	r22, 0x05	; 5
     14c:	71 05       	cpc	r23, r1
     14e:	09 f4       	brne	.+2      	; 0x152 <writeChar+0xa4>
     150:	a9 c0       	rjmp	.+338    	; 0x2a4 <writeChar+0x1f6>
     152:	d4 c0       	rjmp	.+424    	; 0x2fc <writeChar+0x24e>
	 {
		 case 0:
		 LCDDR0  = (LCDDR0 & 0xF0) | reg1;
     154:	ec ee       	ldi	r30, 0xEC	; 236
     156:	f0 e0       	ldi	r31, 0x00	; 0
     158:	90 81       	ld	r25, Z
     15a:	90 7f       	andi	r25, 0xF0	; 240
     15c:	8c 2f       	mov	r24, r28
     15e:	89 2b       	or	r24, r25
     160:	80 83       	st	Z, r24
		 LCDDR5  = (LCDDR5 & 0xF0) | reg2;
     162:	e1 ef       	ldi	r30, 0xF1	; 241
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	80 81       	ld	r24, Z
     168:	80 7f       	andi	r24, 0xF0	; 240
     16a:	84 2b       	or	r24, r20
     16c:	80 83       	st	Z, r24
		 LCDDR10 = (LCDDR10 & 0xF0) | reg3;
     16e:	e6 ef       	ldi	r30, 0xF6	; 246
     170:	f0 e0       	ldi	r31, 0x00	; 0
     172:	80 81       	ld	r24, Z
     174:	80 7f       	andi	r24, 0xF0	; 240
     176:	83 2b       	or	r24, r19
     178:	80 83       	st	Z, r24
		 LCDDR15 = (LCDDR15 & 0xF0) | reg4;
     17a:	eb ef       	ldi	r30, 0xFB	; 251
     17c:	f0 e0       	ldi	r31, 0x00	; 0
     17e:	80 81       	ld	r24, Z
     180:	80 7f       	andi	r24, 0xF0	; 240
     182:	82 2b       	or	r24, r18
     184:	80 83       	st	Z, r24
		 
		 break;
     186:	ba c0       	rjmp	.+372    	; 0x2fc <writeChar+0x24e>
		 case 1:
		 LCDDR0  = (LCDDR0 & 0x0F) | reg1 << 4;
     188:	ec ee       	ldi	r30, 0xEC	; 236
     18a:	f0 e0       	ldi	r31, 0x00	; 0
     18c:	50 81       	ld	r21, Z
     18e:	60 e1       	ldi	r22, 0x10	; 16
     190:	c6 9f       	mul	r28, r22
     192:	c0 01       	movw	r24, r0
     194:	11 24       	eor	r1, r1
     196:	95 2f       	mov	r25, r21
     198:	9f 70       	andi	r25, 0x0F	; 15
     19a:	89 2b       	or	r24, r25
     19c:	80 83       	st	Z, r24
		 LCDDR5  = (LCDDR5 & 0x0F) | reg2 << 4;
     19e:	e1 ef       	ldi	r30, 0xF1	; 241
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	50 81       	ld	r21, Z
     1a4:	60 e1       	ldi	r22, 0x10	; 16
     1a6:	46 9f       	mul	r20, r22
     1a8:	c0 01       	movw	r24, r0
     1aa:	11 24       	eor	r1, r1
     1ac:	45 2f       	mov	r20, r21
     1ae:	4f 70       	andi	r20, 0x0F	; 15
     1b0:	84 2b       	or	r24, r20
     1b2:	80 83       	st	Z, r24
		 LCDDR10 = (LCDDR10 & 0x0F) | reg3 << 4;
     1b4:	e6 ef       	ldi	r30, 0xF6	; 246
     1b6:	f0 e0       	ldi	r31, 0x00	; 0
     1b8:	40 81       	ld	r20, Z
     1ba:	50 e1       	ldi	r21, 0x10	; 16
     1bc:	35 9f       	mul	r19, r21
     1be:	c0 01       	movw	r24, r0
     1c0:	11 24       	eor	r1, r1
     1c2:	34 2f       	mov	r19, r20
     1c4:	3f 70       	andi	r19, 0x0F	; 15
     1c6:	83 2b       	or	r24, r19
     1c8:	80 83       	st	Z, r24
		 LCDDR15 = (LCDDR15 & 0x0F) | reg4 << 4;
     1ca:	eb ef       	ldi	r30, 0xFB	; 251
     1cc:	f0 e0       	ldi	r31, 0x00	; 0
     1ce:	30 81       	ld	r19, Z
     1d0:	60 e1       	ldi	r22, 0x10	; 16
     1d2:	26 9f       	mul	r18, r22
     1d4:	c0 01       	movw	r24, r0
     1d6:	11 24       	eor	r1, r1
     1d8:	23 2f       	mov	r18, r19
     1da:	2f 70       	andi	r18, 0x0F	; 15
     1dc:	82 2b       	or	r24, r18
     1de:	80 83       	st	Z, r24
		 break;
     1e0:	8d c0       	rjmp	.+282    	; 0x2fc <writeChar+0x24e>
		 case 2:
		 LCDDR1  = (LCDDR1 & 0xF0) | reg1;
     1e2:	ed ee       	ldi	r30, 0xED	; 237
     1e4:	f0 e0       	ldi	r31, 0x00	; 0
     1e6:	90 81       	ld	r25, Z
     1e8:	90 7f       	andi	r25, 0xF0	; 240
     1ea:	8c 2f       	mov	r24, r28
     1ec:	89 2b       	or	r24, r25
     1ee:	80 83       	st	Z, r24
		 LCDDR6  = (LCDDR6 & 0xF0) |reg2;
     1f0:	e2 ef       	ldi	r30, 0xF2	; 242
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	80 81       	ld	r24, Z
     1f6:	80 7f       	andi	r24, 0xF0	; 240
     1f8:	84 2b       	or	r24, r20
     1fa:	80 83       	st	Z, r24
		 LCDDR11 = (LCDDR11 & 0xF0) |reg3;
     1fc:	e7 ef       	ldi	r30, 0xF7	; 247
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	80 81       	ld	r24, Z
     202:	80 7f       	andi	r24, 0xF0	; 240
     204:	83 2b       	or	r24, r19
     206:	80 83       	st	Z, r24
		 LCDDR16 = (LCDDR16 & 0xF0) |reg4;
     208:	ec ef       	ldi	r30, 0xFC	; 252
     20a:	f0 e0       	ldi	r31, 0x00	; 0
     20c:	80 81       	ld	r24, Z
     20e:	80 7f       	andi	r24, 0xF0	; 240
     210:	82 2b       	or	r24, r18
     212:	80 83       	st	Z, r24
		 break;
     214:	73 c0       	rjmp	.+230    	; 0x2fc <writeChar+0x24e>
		 
		 case 3:
		 LCDDR1  = (LCDDR1 & 0x0F) | reg1 << 4;
     216:	ed ee       	ldi	r30, 0xED	; 237
     218:	f0 e0       	ldi	r31, 0x00	; 0
     21a:	50 81       	ld	r21, Z
     21c:	60 e1       	ldi	r22, 0x10	; 16
     21e:	c6 9f       	mul	r28, r22
     220:	c0 01       	movw	r24, r0
     222:	11 24       	eor	r1, r1
     224:	95 2f       	mov	r25, r21
     226:	9f 70       	andi	r25, 0x0F	; 15
     228:	89 2b       	or	r24, r25
     22a:	80 83       	st	Z, r24
		 LCDDR6  = (LCDDR6 & 0x0F) | reg2 << 4;
     22c:	e2 ef       	ldi	r30, 0xF2	; 242
     22e:	f0 e0       	ldi	r31, 0x00	; 0
     230:	50 81       	ld	r21, Z
     232:	60 e1       	ldi	r22, 0x10	; 16
     234:	46 9f       	mul	r20, r22
     236:	c0 01       	movw	r24, r0
     238:	11 24       	eor	r1, r1
     23a:	45 2f       	mov	r20, r21
     23c:	4f 70       	andi	r20, 0x0F	; 15
     23e:	84 2b       	or	r24, r20
     240:	80 83       	st	Z, r24
		 LCDDR11 = (LCDDR11 & 0x0F) | reg3 << 4;
     242:	e7 ef       	ldi	r30, 0xF7	; 247
     244:	f0 e0       	ldi	r31, 0x00	; 0
     246:	40 81       	ld	r20, Z
     248:	50 e1       	ldi	r21, 0x10	; 16
     24a:	35 9f       	mul	r19, r21
     24c:	c0 01       	movw	r24, r0
     24e:	11 24       	eor	r1, r1
     250:	34 2f       	mov	r19, r20
     252:	3f 70       	andi	r19, 0x0F	; 15
     254:	83 2b       	or	r24, r19
     256:	80 83       	st	Z, r24
		 LCDDR16 = (LCDDR16 & 0x0F) | reg4 << 4;
     258:	ec ef       	ldi	r30, 0xFC	; 252
     25a:	f0 e0       	ldi	r31, 0x00	; 0
     25c:	30 81       	ld	r19, Z
     25e:	60 e1       	ldi	r22, 0x10	; 16
     260:	26 9f       	mul	r18, r22
     262:	c0 01       	movw	r24, r0
     264:	11 24       	eor	r1, r1
     266:	23 2f       	mov	r18, r19
     268:	2f 70       	andi	r18, 0x0F	; 15
     26a:	82 2b       	or	r24, r18
     26c:	80 83       	st	Z, r24
		 break;
     26e:	46 c0       	rjmp	.+140    	; 0x2fc <writeChar+0x24e>

		 case 4:
		 LCDDR2  = (LCDDR2 & 0xF0) |reg1;
     270:	ee ee       	ldi	r30, 0xEE	; 238
     272:	f0 e0       	ldi	r31, 0x00	; 0
     274:	90 81       	ld	r25, Z
     276:	90 7f       	andi	r25, 0xF0	; 240
     278:	8c 2f       	mov	r24, r28
     27a:	89 2b       	or	r24, r25
     27c:	80 83       	st	Z, r24
		 LCDDR7  = (LCDDR7 & 0xF0) |reg2;
     27e:	e3 ef       	ldi	r30, 0xF3	; 243
     280:	f0 e0       	ldi	r31, 0x00	; 0
     282:	80 81       	ld	r24, Z
     284:	80 7f       	andi	r24, 0xF0	; 240
     286:	84 2b       	or	r24, r20
     288:	80 83       	st	Z, r24
		 LCDDR12 = (LCDDR12 & 0xF0) |reg3;
     28a:	e8 ef       	ldi	r30, 0xF8	; 248
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	80 81       	ld	r24, Z
     290:	80 7f       	andi	r24, 0xF0	; 240
     292:	83 2b       	or	r24, r19
     294:	80 83       	st	Z, r24
		 LCDDR17 = (LCDDR17 & 0xF0) |reg4;
     296:	ed ef       	ldi	r30, 0xFD	; 253
     298:	f0 e0       	ldi	r31, 0x00	; 0
     29a:	80 81       	ld	r24, Z
     29c:	80 7f       	andi	r24, 0xF0	; 240
     29e:	82 2b       	or	r24, r18
     2a0:	80 83       	st	Z, r24
		 break;
     2a2:	2c c0       	rjmp	.+88     	; 0x2fc <writeChar+0x24e>

		 case 5:
		 LCDDR2  = (LCDDR2 & 0x0F) | reg1 << 4;
     2a4:	ee ee       	ldi	r30, 0xEE	; 238
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	50 81       	ld	r21, Z
     2aa:	60 e1       	ldi	r22, 0x10	; 16
     2ac:	c6 9f       	mul	r28, r22
     2ae:	c0 01       	movw	r24, r0
     2b0:	11 24       	eor	r1, r1
     2b2:	95 2f       	mov	r25, r21
     2b4:	9f 70       	andi	r25, 0x0F	; 15
     2b6:	89 2b       	or	r24, r25
     2b8:	80 83       	st	Z, r24
		 LCDDR7  = (LCDDR7 & 0x0F) | reg2 << 4;
     2ba:	e3 ef       	ldi	r30, 0xF3	; 243
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	50 81       	ld	r21, Z
     2c0:	60 e1       	ldi	r22, 0x10	; 16
     2c2:	46 9f       	mul	r20, r22
     2c4:	c0 01       	movw	r24, r0
     2c6:	11 24       	eor	r1, r1
     2c8:	95 2f       	mov	r25, r21
     2ca:	9f 70       	andi	r25, 0x0F	; 15
     2cc:	89 2b       	or	r24, r25
     2ce:	80 83       	st	Z, r24
		 LCDDR12 = (LCDDR12 & 0x0F) | reg3 << 4;
     2d0:	e8 ef       	ldi	r30, 0xF8	; 248
     2d2:	f0 e0       	ldi	r31, 0x00	; 0
     2d4:	40 81       	ld	r20, Z
     2d6:	50 e1       	ldi	r21, 0x10	; 16
     2d8:	35 9f       	mul	r19, r21
     2da:	c0 01       	movw	r24, r0
     2dc:	11 24       	eor	r1, r1
     2de:	94 2f       	mov	r25, r20
     2e0:	9f 70       	andi	r25, 0x0F	; 15
     2e2:	89 2b       	or	r24, r25
     2e4:	80 83       	st	Z, r24
		 LCDDR17 = (LCDDR17 & 0x0F) | reg4 << 4;
     2e6:	ed ef       	ldi	r30, 0xFD	; 253
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	30 81       	ld	r19, Z
     2ec:	60 e1       	ldi	r22, 0x10	; 16
     2ee:	26 9f       	mul	r18, r22
     2f0:	c0 01       	movw	r24, r0
     2f2:	11 24       	eor	r1, r1
     2f4:	93 2f       	mov	r25, r19
     2f6:	9f 70       	andi	r25, 0x0F	; 15
     2f8:	89 2b       	or	r24, r25
     2fa:	80 83       	st	Z, r24
		 break;
	 }
	 
 }
     2fc:	cf 91       	pop	r28
     2fe:	08 95       	ret

00000300 <printAt>:

 void printAt(long num, int pos) 
 {
     300:	8f 92       	push	r8
     302:	9f 92       	push	r9
     304:	af 92       	push	r10
     306:	bf 92       	push	r11
     308:	cf 92       	push	r12
     30a:	df 92       	push	r13
     30c:	ef 92       	push	r14
     30e:	ff 92       	push	r15
     310:	cf 93       	push	r28
     312:	df 93       	push	r29
     314:	4b 01       	movw	r8, r22
     316:	5c 01       	movw	r10, r24
     318:	ea 01       	movw	r28, r20
	
	 int pp = pos;
	 writeChar( (num % 100) / 10 + '0', pp);
     31a:	24 e6       	ldi	r18, 0x64	; 100
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	40 e0       	ldi	r20, 0x00	; 0
     320:	50 e0       	ldi	r21, 0x00	; 0
     322:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <__divmodsi4>
     326:	0f 2e       	mov	r0, r31
     328:	fa e0       	ldi	r31, 0x0A	; 10
     32a:	cf 2e       	mov	r12, r31
     32c:	d1 2c       	mov	r13, r1
     32e:	e1 2c       	mov	r14, r1
     330:	f1 2c       	mov	r15, r1
     332:	f0 2d       	mov	r31, r0
     334:	a7 01       	movw	r20, r14
     336:	96 01       	movw	r18, r12
     338:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <__divmodsi4>
     33c:	be 01       	movw	r22, r28
     33e:	80 e3       	ldi	r24, 0x30	; 48
     340:	82 0f       	add	r24, r18
     342:	0e 94 57 00 	call	0xae	; 0xae <writeChar>
	 pp++;
     346:	21 96       	adiw	r28, 0x01	; 1
	 writeChar( num % 10 + '0', pp);
     348:	c5 01       	movw	r24, r10
     34a:	b4 01       	movw	r22, r8
     34c:	a7 01       	movw	r20, r14
     34e:	96 01       	movw	r18, r12
     350:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <__divmodsi4>
     354:	86 2f       	mov	r24, r22
     356:	be 01       	movw	r22, r28
     358:	80 5d       	subi	r24, 0xD0	; 208
     35a:	0e 94 57 00 	call	0xae	; 0xae <writeChar>

 }
     35e:	df 91       	pop	r29
     360:	cf 91       	pop	r28
     362:	ff 90       	pop	r15
     364:	ef 90       	pop	r14
     366:	df 90       	pop	r13
     368:	cf 90       	pop	r12
     36a:	bf 90       	pop	r11
     36c:	af 90       	pop	r10
     36e:	9f 90       	pop	r9
     370:	8f 90       	pop	r8
     372:	08 95       	ret

00000374 <LCD_Init>:
#include <avr/io.h>

 void LCD_Init(void)
 {
	 //setting for the AVR//
	 CLKPR = 0x80;
     374:	e1 e6       	ldi	r30, 0x61	; 97
     376:	f0 e0       	ldi	r31, 0x00	; 0
     378:	80 e8       	ldi	r24, 0x80	; 128
     37a:	80 83       	st	Z, r24
	 CLKPR = 0x00;
     37c:	10 82       	st	Z, r1
	 //external async clock, 1/3 bias, 1/4 duty cycle, 25 segments
	 LCDCRB = (1 << LCDCS) | (1 << LCDMUX0) | (1 << LCDMUX1) | (1 << LCDPM0) | (1 << LCDPM1) | (1 << LCDPM2);
     37e:	87 eb       	ldi	r24, 0xB7	; 183
     380:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	 //clock divider N=8
	 LCDFRR = (1 << LCDCD0) | (1 << LCDCD1) | (1 << LCDCD2);
     384:	87 e0       	ldi	r24, 0x07	; 7
     386:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	 //LCD low power, no frame interrupt no blanking
	 LCDCRA = (1 << LCDEN) | (1 << LCDAB);
     38a:	80 ec       	ldi	r24, 0xC0	; 192
     38c:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
	 //Drive time 300ms, control voltage 3,35V
	 LCDCCR = (1 << LCDCC0) | (1 << LCDCC1) | (1 << LCDCC2) | (1 << LCDCC3);
     390:	9f e0       	ldi	r25, 0x0F	; 15
     392:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
	 //timer with prescaler 256
	// TCCR1B = (1<<CS12);


	 //External input
	 EIMSK = (1 << PCIE1) | (1 << PCIE0);
     396:	8d bb       	out	0x1d, r24	; 29
	 PCMSK1 = (1 << PCINT15) | (1 << PCINT14) | (1 << PCINT12);
     398:	80 ed       	ldi	r24, 0xD0	; 208
     39a:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
	 PCMSK0 = (1 << PCINT2) | (1 << PCINT3);
     39e:	9c e0       	ldi	r25, 0x0C	; 12
     3a0:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
	// EIFR = 0xC0;
	 //activate the button
	 PORTB = (1 << PINB7) | (1 << PINB6) | (1 << PINB4);
     3a4:	85 b9       	out	0x05, r24	; 5
	 PORTE = (1 << PINE2) | (1 << PINE3) | (1 << PINE4) | (1 << PINE6);
     3a6:	8c e5       	ldi	r24, 0x5C	; 92
     3a8:	8e b9       	out	0x0e, r24	; 14
     3aa:	08 95       	ret

000003ac <scroll>:
#include <avr/io.h>
#include "GUI.h"
#include "main.h"


void scroll(Joystick *self, int arg){
     3ac:	af 92       	push	r10
     3ae:	bf 92       	push	r11
     3b0:	cf 92       	push	r12
     3b2:	df 92       	push	r13
     3b4:	ef 92       	push	r14
     3b6:	ff 92       	push	r15
     3b8:	0f 93       	push	r16
     3ba:	1f 93       	push	r17
     3bc:	cf 93       	push	r28
     3be:	df 93       	push	r29
     3c0:	ec 01       	movw	r28, r24
     3c2:	5b 01       	movw	r10, r22
	if(!(PINB &(1<<PINB6))){
     3c4:	1e 99       	sbic	0x03, 6	; 3
     3c6:	39 c0       	rjmp	.+114    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
		ASYNC(self->current, increaseFreq, 0);
     3c8:	08 85       	ldd	r16, Y+8	; 0x08
     3ca:	19 85       	ldd	r17, Y+9	; 0x09
     3cc:	c1 2c       	mov	r12, r1
     3ce:	d1 2c       	mov	r13, r1
     3d0:	0f 2e       	mov	r0, r31
     3d2:	f6 e2       	ldi	r31, 0x26	; 38
     3d4:	ef 2e       	mov	r14, r31
     3d6:	f3 e0       	ldi	r31, 0x03	; 3
     3d8:	ff 2e       	mov	r15, r31
     3da:	f0 2d       	mov	r31, r0
     3dc:	20 e0       	ldi	r18, 0x00	; 0
     3de:	30 e0       	ldi	r19, 0x00	; 0
     3e0:	a9 01       	movw	r20, r18
     3e2:	60 e0       	ldi	r22, 0x00	; 0
     3e4:	70 e0       	ldi	r23, 0x00	; 0
     3e6:	cb 01       	movw	r24, r22
     3e8:	0e 94 57 0d 	call	0x1aae	; 0x1aae <async>
		AFTER(MSEC(arg), self, scroll, arg+200);
     3ec:	65 01       	movw	r12, r10
     3ee:	88 ec       	ldi	r24, 0xC8	; 200
     3f0:	c8 0e       	add	r12, r24
     3f2:	d1 1c       	adc	r13, r1
     3f4:	2d e7       	ldi	r18, 0x7D	; 125
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	d5 01       	movw	r26, r10
     3fa:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__usmulhisi3>
     3fe:	8b 01       	movw	r16, r22
     400:	9c 01       	movw	r18, r24
     402:	99 23       	and	r25, r25
     404:	24 f4       	brge	.+8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     406:	0d 5f       	subi	r16, 0xFD	; 253
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	2f 4f       	sbci	r18, 0xFF	; 255
     40c:	3f 4f       	sbci	r19, 0xFF	; 255
     40e:	c9 01       	movw	r24, r18
     410:	b8 01       	movw	r22, r16
     412:	95 95       	asr	r25
     414:	87 95       	ror	r24
     416:	77 95       	ror	r23
     418:	67 95       	ror	r22
     41a:	95 95       	asr	r25
     41c:	87 95       	ror	r24
     41e:	77 95       	ror	r23
     420:	67 95       	ror	r22
     422:	0f 2e       	mov	r0, r31
     424:	f6 ed       	ldi	r31, 0xD6	; 214
     426:	ef 2e       	mov	r14, r31
     428:	f1 e0       	ldi	r31, 0x01	; 1
     42a:	ff 2e       	mov	r15, r31
     42c:	f0 2d       	mov	r31, r0
     42e:	8e 01       	movw	r16, r28
     430:	20 e0       	ldi	r18, 0x00	; 0
     432:	30 e0       	ldi	r19, 0x00	; 0
     434:	a9 01       	movw	r20, r18
     436:	0e 94 57 0d 	call	0x1aae	; 0x1aae <async>

	}
		if(!(PINB &(1<<PINB7))){
     43a:	1f 99       	sbic	0x03, 7	; 3
     43c:	39 c0       	rjmp	.+114    	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
			ASYNC(self->current, decreaseFreq, 0);
     43e:	08 85       	ldd	r16, Y+8	; 0x08
     440:	19 85       	ldd	r17, Y+9	; 0x09
     442:	c1 2c       	mov	r12, r1
     444:	d1 2c       	mov	r13, r1
     446:	0f 2e       	mov	r0, r31
     448:	f1 e3       	ldi	r31, 0x31	; 49
     44a:	ef 2e       	mov	r14, r31
     44c:	f3 e0       	ldi	r31, 0x03	; 3
     44e:	ff 2e       	mov	r15, r31
     450:	f0 2d       	mov	r31, r0
     452:	20 e0       	ldi	r18, 0x00	; 0
     454:	30 e0       	ldi	r19, 0x00	; 0
     456:	a9 01       	movw	r20, r18
     458:	60 e0       	ldi	r22, 0x00	; 0
     45a:	70 e0       	ldi	r23, 0x00	; 0
     45c:	cb 01       	movw	r24, r22
     45e:	0e 94 57 0d 	call	0x1aae	; 0x1aae <async>
			AFTER(MSEC(arg), self, scroll, arg+200);
     462:	65 01       	movw	r12, r10
     464:	88 ec       	ldi	r24, 0xC8	; 200
     466:	c8 0e       	add	r12, r24
     468:	d1 1c       	adc	r13, r1
     46a:	2d e7       	ldi	r18, 0x7D	; 125
     46c:	30 e0       	ldi	r19, 0x00	; 0
     46e:	d5 01       	movw	r26, r10
     470:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__usmulhisi3>
     474:	8b 01       	movw	r16, r22
     476:	9c 01       	movw	r18, r24
     478:	99 23       	and	r25, r25
     47a:	24 f4       	brge	.+8      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
     47c:	0d 5f       	subi	r16, 0xFD	; 253
     47e:	1f 4f       	sbci	r17, 0xFF	; 255
     480:	2f 4f       	sbci	r18, 0xFF	; 255
     482:	3f 4f       	sbci	r19, 0xFF	; 255
     484:	c9 01       	movw	r24, r18
     486:	b8 01       	movw	r22, r16
     488:	95 95       	asr	r25
     48a:	87 95       	ror	r24
     48c:	77 95       	ror	r23
     48e:	67 95       	ror	r22
     490:	95 95       	asr	r25
     492:	87 95       	ror	r24
     494:	77 95       	ror	r23
     496:	67 95       	ror	r22
     498:	0f 2e       	mov	r0, r31
     49a:	f6 ed       	ldi	r31, 0xD6	; 214
     49c:	ef 2e       	mov	r14, r31
     49e:	f1 e0       	ldi	r31, 0x01	; 1
     4a0:	ff 2e       	mov	r15, r31
     4a2:	f0 2d       	mov	r31, r0
     4a4:	8e 01       	movw	r16, r28
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	a9 01       	movw	r20, r18
     4ac:	0e 94 57 0d 	call	0x1aae	; 0x1aae <async>

		}
	ASYNC(self, start, 0);
     4b0:	c1 2c       	mov	r12, r1
     4b2:	d1 2c       	mov	r13, r1
     4b4:	0f 2e       	mov	r0, r31
     4b6:	fe ee       	ldi	r31, 0xEE	; 238
     4b8:	ef 2e       	mov	r14, r31
     4ba:	f2 e0       	ldi	r31, 0x02	; 2
     4bc:	ff 2e       	mov	r15, r31
     4be:	f0 2d       	mov	r31, r0
     4c0:	8e 01       	movw	r16, r28
     4c2:	20 e0       	ldi	r18, 0x00	; 0
     4c4:	30 e0       	ldi	r19, 0x00	; 0
     4c6:	a9 01       	movw	r20, r18
     4c8:	60 e0       	ldi	r22, 0x00	; 0
     4ca:	70 e0       	ldi	r23, 0x00	; 0
     4cc:	cb 01       	movw	r24, r22
     4ce:	0e 94 57 0d 	call	0x1aae	; 0x1aae <async>
}
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	ff 90       	pop	r15
     4dc:	ef 90       	pop	r14
     4de:	df 90       	pop	r13
     4e0:	cf 90       	pop	r12
     4e2:	bf 90       	pop	r11
     4e4:	af 90       	pop	r10
     4e6:	08 95       	ret

000004e8 <updateLCD>:

 void updateLCD(Joystick *self, int arg){
     4e8:	cf 93       	push	r28
     4ea:	df 93       	push	r29
     4ec:	ec 01       	movw	r28, r24
	 printAt(self->Pulse1->freq, self->Pulse1->position);
     4ee:	ec 81       	ldd	r30, Y+4	; 0x04
     4f0:	fd 81       	ldd	r31, Y+5	; 0x05
     4f2:	46 81       	ldd	r20, Z+6	; 0x06
     4f4:	57 81       	ldd	r21, Z+7	; 0x07
     4f6:	64 81       	ldd	r22, Z+4	; 0x04
     4f8:	75 81       	ldd	r23, Z+5	; 0x05
     4fa:	07 2e       	mov	r0, r23
     4fc:	00 0c       	add	r0, r0
     4fe:	88 0b       	sbc	r24, r24
     500:	99 0b       	sbc	r25, r25
     502:	0e 94 80 01 	call	0x300	; 0x300 <printAt>
	 printAt(self->Pulse2->freq, self->Pulse2->position);
     506:	ee 81       	ldd	r30, Y+6	; 0x06
     508:	ff 81       	ldd	r31, Y+7	; 0x07
     50a:	46 81       	ldd	r20, Z+6	; 0x06
     50c:	57 81       	ldd	r21, Z+7	; 0x07
     50e:	64 81       	ldd	r22, Z+4	; 0x04
     510:	75 81       	ldd	r23, Z+5	; 0x05
     512:	07 2e       	mov	r0, r23
     514:	00 0c       	add	r0, r0
     516:	88 0b       	sbc	r24, r24
     518:	99 0b       	sbc	r25, r25
     51a:	0e 94 80 01 	call	0x300	; 0x300 <printAt>
 }
     51e:	df 91       	pop	r29
     520:	cf 91       	pop	r28
     522:	08 95       	ret

00000524 <pinBdoSOMETHING>:
void pinBdoSOMETHING(Joystick *self, int arg){
     524:	cf 92       	push	r12
     526:	df 92       	push	r13
     528:	ef 92       	push	r14
     52a:	ff 92       	push	r15
     52c:	0f 93       	push	r16
     52e:	1f 93       	push	r17
     530:	cf 93       	push	r28
     532:	df 93       	push	r29
     534:	ec 01       	movw	r28, r24

	if (!(PINB &(1<<PINB6))){
     536:	1e 99       	sbic	0x03, 6	; 3
     538:	15 c0       	rjmp	.+42     	; 0x564 <pinBdoSOMETHING+0x40>
		ASYNC(self, scroll, 500);
     53a:	0f 2e       	mov	r0, r31
     53c:	f4 ef       	ldi	r31, 0xF4	; 244
     53e:	cf 2e       	mov	r12, r31
     540:	dd 24       	eor	r13, r13
     542:	d3 94       	inc	r13
     544:	f0 2d       	mov	r31, r0
     546:	0f 2e       	mov	r0, r31
     548:	f6 ed       	ldi	r31, 0xD6	; 214
     54a:	ef 2e       	mov	r14, r31
     54c:	f1 e0       	ldi	r31, 0x01	; 1
     54e:	ff 2e       	mov	r15, r31
     550:	f0 2d       	mov	r31, r0
     552:	8c 01       	movw	r16, r24
     554:	20 e0       	ldi	r18, 0x00	; 0
     556:	30 e0       	ldi	r19, 0x00	; 0
     558:	a9 01       	movw	r20, r18
     55a:	60 e0       	ldi	r22, 0x00	; 0
     55c:	70 e0       	ldi	r23, 0x00	; 0
     55e:	cb 01       	movw	r24, r22
     560:	0e 94 57 0d 	call	0x1aae	; 0x1aae <async>
	}
	if (!(PINB &(1<<PINB7))){
     564:	1f 99       	sbic	0x03, 7	; 3
     566:	15 c0       	rjmp	.+42     	; 0x592 <pinBdoSOMETHING+0x6e>
		ASYNC(self, scroll, 500);
     568:	0f 2e       	mov	r0, r31
     56a:	f4 ef       	ldi	r31, 0xF4	; 244
     56c:	cf 2e       	mov	r12, r31
     56e:	dd 24       	eor	r13, r13
     570:	d3 94       	inc	r13
     572:	f0 2d       	mov	r31, r0
     574:	0f 2e       	mov	r0, r31
     576:	f6 ed       	ldi	r31, 0xD6	; 214
     578:	ef 2e       	mov	r14, r31
     57a:	f1 e0       	ldi	r31, 0x01	; 1
     57c:	ff 2e       	mov	r15, r31
     57e:	f0 2d       	mov	r31, r0
     580:	8e 01       	movw	r16, r28
     582:	20 e0       	ldi	r18, 0x00	; 0
     584:	30 e0       	ldi	r19, 0x00	; 0
     586:	a9 01       	movw	r20, r18
     588:	60 e0       	ldi	r22, 0x00	; 0
     58a:	70 e0       	ldi	r23, 0x00	; 0
     58c:	cb 01       	movw	r24, r22
     58e:	0e 94 57 0d 	call	0x1aae	; 0x1aae <async>
	}
	if (!(PINB &(1<<PINB4))){
     592:	1c 99       	sbic	0x03, 4	; 3
     594:	06 c0       	rjmp	.+12     	; 0x5a2 <pinBdoSOMETHING+0x7e>
		memoryFreq(self->current, 0);
     596:	60 e0       	ldi	r22, 0x00	; 0
     598:	70 e0       	ldi	r23, 0x00	; 0
     59a:	88 85       	ldd	r24, Y+8	; 0x08
     59c:	99 85       	ldd	r25, Y+9	; 0x09
     59e:	0e 94 3c 03 	call	0x678	; 0x678 <memoryFreq>
	}
	
}
     5a2:	df 91       	pop	r29
     5a4:	cf 91       	pop	r28
     5a6:	1f 91       	pop	r17
     5a8:	0f 91       	pop	r16
     5aa:	ff 90       	pop	r15
     5ac:	ef 90       	pop	r14
     5ae:	df 90       	pop	r13
     5b0:	cf 90       	pop	r12
     5b2:	08 95       	ret

000005b4 <pinEdoSOMETHING>:



void pinEdoSOMETHING(Joystick *self, int arg){
     5b4:	fc 01       	movw	r30, r24
	if (!(PINE &(1<<PINE2))){
     5b6:	62 99       	sbic	0x0c, 2	; 12
     5b8:	0a c0       	rjmp	.+20     	; 0x5ce <pinEdoSOMETHING+0x1a>
			LCDDR13 ^= 0xF;
     5ba:	a9 ef       	ldi	r26, 0xF9	; 249
     5bc:	b0 e0       	ldi	r27, 0x00	; 0
     5be:	9c 91       	ld	r25, X
     5c0:	8f e0       	ldi	r24, 0x0F	; 15
     5c2:	89 27       	eor	r24, r25
     5c4:	8c 93       	st	X, r24
		self->current = self->Pulse1;
     5c6:	84 81       	ldd	r24, Z+4	; 0x04
     5c8:	95 81       	ldd	r25, Z+5	; 0x05
     5ca:	91 87       	std	Z+9, r25	; 0x09
     5cc:	80 87       	std	Z+8, r24	; 0x08
		//switchToRight(self->current, 0);
	}
	if (!(PINE &(1<<PINE3))){
     5ce:	63 99       	sbic	0x0c, 3	; 12
     5d0:	04 c0       	rjmp	.+8      	; 0x5da <pinEdoSOMETHING+0x26>
		self->current = self->Pulse2;
     5d2:	86 81       	ldd	r24, Z+6	; 0x06
     5d4:	97 81       	ldd	r25, Z+7	; 0x07
     5d6:	91 87       	std	Z+9, r25	; 0x09
     5d8:	80 87       	std	Z+8, r24	; 0x08
     5da:	08 95       	ret

000005dc <start>:
Pulse pulse2 = initPulse(0,4,0,0,&gui);

Joystick joy = initJoystick(&pulse1, &pulse2, &pulse1);


void start(Joystick *self, int arg){
     5dc:	cf 92       	push	r12
     5de:	df 92       	push	r13
     5e0:	ef 92       	push	r14
     5e2:	ff 92       	push	r15
     5e4:	0f 93       	push	r16
     5e6:	1f 93       	push	r17
	ASYNC(self ,updateLCD, 0);
     5e8:	c1 2c       	mov	r12, r1
     5ea:	d1 2c       	mov	r13, r1
     5ec:	0f 2e       	mov	r0, r31
     5ee:	f4 e7       	ldi	r31, 0x74	; 116
     5f0:	ef 2e       	mov	r14, r31
     5f2:	f2 e0       	ldi	r31, 0x02	; 2
     5f4:	ff 2e       	mov	r15, r31
     5f6:	f0 2d       	mov	r31, r0
     5f8:	8c 01       	movw	r16, r24
     5fa:	20 e0       	ldi	r18, 0x00	; 0
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	a9 01       	movw	r20, r18
     600:	60 e0       	ldi	r22, 0x00	; 0
     602:	70 e0       	ldi	r23, 0x00	; 0
     604:	cb 01       	movw	r24, r22
     606:	0e 94 57 0d 	call	0x1aae	; 0x1aae <async>
}
     60a:	1f 91       	pop	r17
     60c:	0f 91       	pop	r16
     60e:	ff 90       	pop	r15
     610:	ef 90       	pop	r14
     612:	df 90       	pop	r13
     614:	cf 90       	pop	r12
     616:	08 95       	ret

00000618 <main>:

int main(void)
{
	sei();
     618:	78 94       	sei
	LCD_Init();
     61a:	0e 94 ba 01 	call	0x374	; 0x374 <LCD_Init>
	INSTALL(&joy, pinEdoSOMETHING ,IRQ_PCINT0);
     61e:	41 e0       	ldi	r20, 0x01	; 1
     620:	6a ed       	ldi	r22, 0xDA	; 218
     622:	72 e0       	ldi	r23, 0x02	; 2
     624:	80 e0       	ldi	r24, 0x00	; 0
     626:	91 e0       	ldi	r25, 0x01	; 1
     628:	0e 94 77 0f 	call	0x1eee	; 0x1eee <install>
	INSTALL(&joy, pinBdoSOMETHING ,IRQ_PCINT1);
     62c:	42 e0       	ldi	r20, 0x02	; 2
     62e:	62 e9       	ldi	r22, 0x92	; 146
     630:	72 e0       	ldi	r23, 0x02	; 2
     632:	80 e0       	ldi	r24, 0x00	; 0
     634:	91 e0       	ldi	r25, 0x01	; 1
     636:	0e 94 77 0f 	call	0x1eee	; 0x1eee <install>
	return TINYTIMBER(&joy,start,0);
     63a:	40 e0       	ldi	r20, 0x00	; 0
     63c:	50 e0       	ldi	r21, 0x00	; 0
     63e:	6e ee       	ldi	r22, 0xEE	; 238
     640:	72 e0       	ldi	r23, 0x02	; 2
     642:	80 e0       	ldi	r24, 0x00	; 0
     644:	91 e0       	ldi	r25, 0x01	; 1
     646:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <tinytimber>
   
   /* TINYTIMBER( T *obj, int (*meth)(T*,A), A arg ); */

}
     64a:	08 95       	ret

0000064c <increaseFreq>:
#include "TinyTimber.h"
#include "joystick.h"
#include <avr/io.h>

void increaseFreq(Pulse *self, int arg){
	if (self->freq <= 98){
     64c:	fc 01       	movw	r30, r24
     64e:	24 81       	ldd	r18, Z+4	; 0x04
     650:	35 81       	ldd	r19, Z+5	; 0x05
     652:	23 36       	cpi	r18, 0x63	; 99
     654:	31 05       	cpc	r19, r1
     656:	24 f4       	brge	.+8      	; 0x660 <increaseFreq+0x14>
		self->freq = self->freq+1;
     658:	2f 5f       	subi	r18, 0xFF	; 255
     65a:	3f 4f       	sbci	r19, 0xFF	; 255
     65c:	35 83       	std	Z+5, r19	; 0x05
     65e:	24 83       	std	Z+4, r18	; 0x04
     660:	08 95       	ret

00000662 <decreaseFreq>:
	}
}

void decreaseFreq(Pulse *self, int arg){
	if (self->freq >= 1){
     662:	fc 01       	movw	r30, r24
     664:	24 81       	ldd	r18, Z+4	; 0x04
     666:	35 81       	ldd	r19, Z+5	; 0x05
     668:	12 16       	cp	r1, r18
     66a:	13 06       	cpc	r1, r19
     66c:	24 f4       	brge	.+8      	; 0x676 <decreaseFreq+0x14>
		self->freq = self->freq-1;
     66e:	21 50       	subi	r18, 0x01	; 1
     670:	31 09       	sbc	r19, r1
     672:	35 83       	std	Z+5, r19	; 0x05
     674:	24 83       	std	Z+4, r18	; 0x04
     676:	08 95       	ret

00000678 <memoryFreq>:
	}
}



void memoryFreq(Pulse *self, int arg){
     678:	fc 01       	movw	r30, r24
	
	if ((self->freq != 0) && (self->memFlag == 0)){
     67a:	84 81       	ldd	r24, Z+4	; 0x04
     67c:	95 81       	ldd	r25, Z+5	; 0x05
     67e:	00 97       	sbiw	r24, 0x00	; 0
     680:	69 f0       	breq	.+26     	; 0x69c <memoryFreq+0x24>
     682:	22 85       	ldd	r18, Z+10	; 0x0a
     684:	33 85       	ldd	r19, Z+11	; 0x0b
     686:	23 2b       	or	r18, r19
     688:	49 f4       	brne	.+18     	; 0x69c <memoryFreq+0x24>
		self->memory = self->freq;
     68a:	91 87       	std	Z+9, r25	; 0x09
     68c:	80 87       	std	Z+8, r24	; 0x08
		self->freq = 0;
     68e:	15 82       	std	Z+5, r1	; 0x05
     690:	14 82       	std	Z+4, r1	; 0x04
		self->memFlag = 1;
     692:	81 e0       	ldi	r24, 0x01	; 1
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	93 87       	std	Z+11, r25	; 0x0b
     698:	82 87       	std	Z+10, r24	; 0x0a
     69a:	08 95       	ret
	}else{
		self->freq = self->memory;
     69c:	80 85       	ldd	r24, Z+8	; 0x08
     69e:	91 85       	ldd	r25, Z+9	; 0x09
     6a0:	95 83       	std	Z+5, r25	; 0x05
     6a2:	84 83       	std	Z+4, r24	; 0x04
		self->memFlag = 0;
     6a4:	13 86       	std	Z+11, r1	; 0x0b
     6a6:	12 86       	std	Z+10, r1	; 0x0a
     6a8:	08 95       	ret

000006aa <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     6aa:	cf 93       	push	r28
     6ac:	df 93       	push	r29
     6ae:	00 d0       	rcall	.+0      	; 0x6b0 <initialize+0x6>
     6b0:	00 d0       	rcall	.+0      	; 0x6b2 <initialize+0x8>
     6b2:	cd b7       	in	r28, 0x3d	; 61
     6b4:	de b7       	in	r29, 0x3e	; 62
     6b6:	89 e2       	ldi	r24, 0x29	; 41
     6b8:	92 e0       	ldi	r25, 0x02	; 2
     6ba:	29 e0       	ldi	r18, 0x09	; 9
     6bc:	33 e0       	ldi	r19, 0x03	; 3
     6be:	fc 01       	movw	r30, r24
     6c0:	70 97       	sbiw	r30, 0x10	; 16
     6c2:	91 83       	std	Z+1, r25	; 0x01
     6c4:	80 83       	st	Z, r24
     6c6:	40 96       	adiw	r24, 0x10	; 16
     6c8:	82 17       	cp	r24, r18
     6ca:	93 07       	cpc	r25, r19
     6cc:	c1 f7       	brne	.-16     	; 0x6be <initialize+0x14>
     6ce:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <messages+0xe1>
     6d2:	10 92 f9 02 	sts	0x02F9, r1	; 0x8002f9 <messages+0xe0>
     6d6:	e4 e6       	ldi	r30, 0x64	; 100
     6d8:	f1 e0       	ldi	r31, 0x01	; 1
     6da:	81 e8       	ldi	r24, 0x81	; 129
     6dc:	91 e0       	ldi	r25, 0x01	; 1
     6de:	91 83       	std	Z+1, r25	; 0x01
     6e0:	80 83       	st	Z, r24
     6e2:	8e e9       	ldi	r24, 0x9E	; 158
     6e4:	91 e0       	ldi	r25, 0x01	; 1
     6e6:	96 8f       	std	Z+30, r25	; 0x1e
     6e8:	85 8f       	std	Z+29, r24	; 0x1d
     6ea:	ab eb       	ldi	r26, 0xBB	; 187
     6ec:	b1 e0       	ldi	r27, 0x01	; 1
     6ee:	b3 af       	std	Z+59, r27	; 0x3b
     6f0:	a2 af       	std	Z+58, r26	; 0x3a
     6f2:	1d 92       	st	X+, r1
     6f4:	1c 92       	st	X, r1
     6f6:	fa 83       	std	Y+2, r31	; 0x02
     6f8:	e9 83       	std	Y+1, r30	; 0x01
     6fa:	e5 e6       	ldi	r30, 0x65	; 101
     6fc:	f3 e0       	ldi	r31, 0x03	; 3
     6fe:	fc 83       	std	Y+4, r31	; 0x04
     700:	eb 83       	std	Y+3, r30	; 0x03
     702:	89 81       	ldd	r24, Y+1	; 0x01
     704:	9a 81       	ldd	r25, Y+2	; 0x02
     706:	06 96       	adiw	r24, 0x06	; 6
     708:	0e 94 05 10 	call	0x200a	; 0x200a <setjmp>
     70c:	8b 81       	ldd	r24, Y+3	; 0x03
     70e:	9c 81       	ldd	r25, Y+4	; 0x04
     710:	e9 81       	ldd	r30, Y+1	; 0x01
     712:	fa 81       	ldd	r31, Y+2	; 0x02
     714:	97 8b       	std	Z+23, r25	; 0x17
     716:	86 8b       	std	Z+22, r24	; 0x16
     718:	91 8f       	std	Z+25, r25	; 0x19
     71a:	80 8f       	std	Z+24, r24	; 0x18
     71c:	89 e0       	ldi	r24, 0x09	; 9
     71e:	9f e0       	ldi	r25, 0x0F	; 15
     720:	94 8f       	std	Z+28, r25	; 0x1c
     722:	83 8f       	std	Z+27, r24	; 0x1b
     724:	15 82       	std	Z+5, r1	; 0x05
     726:	14 82       	std	Z+4, r1	; 0x04
     728:	7d 96       	adiw	r30, 0x1d	; 29
     72a:	fa 83       	std	Y+2, r31	; 0x02
     72c:	e9 83       	std	Y+1, r30	; 0x01
     72e:	eb 81       	ldd	r30, Y+3	; 0x03
     730:	fc 81       	ldd	r31, Y+4	; 0x04
     732:	e0 5a       	subi	r30, 0xA0	; 160
     734:	ff 4f       	sbci	r31, 0xFF	; 255
     736:	fc 83       	std	Y+4, r31	; 0x04
     738:	eb 83       	std	Y+3, r30	; 0x03
     73a:	89 81       	ldd	r24, Y+1	; 0x01
     73c:	9a 81       	ldd	r25, Y+2	; 0x02
     73e:	88 5d       	subi	r24, 0xD8	; 216
     740:	91 40       	sbci	r25, 0x01	; 1
     742:	f9 f6       	brne	.-66     	; 0x702 <initialize+0x58>
     744:	ec ef       	ldi	r30, 0xFC	; 252
     746:	f1 e0       	ldi	r31, 0x01	; 1
     748:	11 82       	std	Z+1, r1	; 0x01
     74a:	10 82       	st	Z, r1
     74c:	15 82       	std	Z+5, r1	; 0x05
     74e:	14 82       	std	Z+4, r1	; 0x04
     750:	13 82       	std	Z+3, r1	; 0x03
     752:	12 82       	std	Z+2, r1	; 0x02
     754:	e1 e6       	ldi	r30, 0x61	; 97
     756:	f0 e0       	ldi	r31, 0x00	; 0
     758:	80 e8       	ldi	r24, 0x80	; 128
     75a:	80 83       	st	Z, r24
     75c:	10 82       	st	Z, r1
     75e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     762:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     766:	84 e0       	ldi	r24, 0x04	; 4
     768:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     76c:	81 e0       	ldi	r24, 0x01	; 1
     76e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     772:	0f 90       	pop	r0
     774:	0f 90       	pop	r0
     776:	0f 90       	pop	r0
     778:	0f 90       	pop	r0
     77a:	df 91       	pop	r29
     77c:	cf 91       	pop	r28
     77e:	08 95       	ret

00000780 <dispatch>:
     780:	cf 93       	push	r28
     782:	df 93       	push	r29
     784:	00 d0       	rcall	.+0      	; 0x786 <dispatch+0x6>
     786:	cd b7       	in	r28, 0x3d	; 61
     788:	de b7       	in	r29, 0x3e	; 62
     78a:	9a 83       	std	Y+2, r25	; 0x02
     78c:	89 83       	std	Y+1, r24	; 0x01
     78e:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <current>
     792:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <current+0x1>
     796:	06 96       	adiw	r24, 0x06	; 6
     798:	0e 94 05 10 	call	0x200a	; 0x200a <setjmp>
     79c:	89 2b       	or	r24, r25
     79e:	59 f4       	brne	.+22     	; 0x7b6 <dispatch+0x36>
     7a0:	89 81       	ldd	r24, Y+1	; 0x01
     7a2:	9a 81       	ldd	r25, Y+2	; 0x02
     7a4:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <current+0x1>
     7a8:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <current>
     7ac:	61 e0       	ldi	r22, 0x01	; 1
     7ae:	70 e0       	ldi	r23, 0x00	; 0
     7b0:	06 96       	adiw	r24, 0x06	; 6
     7b2:	0e 94 25 10 	call	0x204a	; 0x204a <longjmp>
     7b6:	0f 90       	pop	r0
     7b8:	0f 90       	pop	r0
     7ba:	df 91       	pop	r29
     7bc:	cf 91       	pop	r28
     7be:	08 95       	ret

000007c0 <schedule>:
     7c0:	0f 93       	push	r16
     7c2:	1f 93       	push	r17
     7c4:	cf 93       	push	r28
     7c6:	df 93       	push	r29
     7c8:	c0 91 28 01 	lds	r28, 0x0128	; 0x800128 <activeStack>
     7cc:	d0 91 29 01 	lds	r29, 0x0129	; 0x800129 <activeStack+0x1>
     7d0:	aa 81       	ldd	r26, Y+2	; 0x02
     7d2:	bb 81       	ldd	r27, Y+3	; 0x03
     7d4:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <msgQ>
     7d8:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <msgQ+0x1>
     7dc:	30 97       	sbiw	r30, 0x00	; 0
     7de:	31 f1       	breq	.+76     	; 0x82c <schedule+0x6c>
     7e0:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <threadPool>
     7e4:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <threadPool+0x1>
     7e8:	00 97       	sbiw	r24, 0x00	; 0
     7ea:	01 f1       	breq	.+64     	; 0x82c <schedule+0x6c>
     7ec:	10 97       	sbiw	r26, 0x00	; 0
     7ee:	79 f0       	breq	.+30     	; 0x80e <schedule+0x4e>
     7f0:	46 81       	ldd	r20, Z+6	; 0x06
     7f2:	57 81       	ldd	r21, Z+7	; 0x07
     7f4:	60 85       	ldd	r22, Z+8	; 0x08
     7f6:	71 85       	ldd	r23, Z+9	; 0x09
     7f8:	16 96       	adiw	r26, 0x06	; 6
     7fa:	0d 91       	ld	r16, X+
     7fc:	1d 91       	ld	r17, X+
     7fe:	2d 91       	ld	r18, X+
     800:	3c 91       	ld	r19, X
     802:	19 97       	sbiw	r26, 0x09	; 9
     804:	40 1b       	sub	r20, r16
     806:	51 0b       	sbc	r21, r17
     808:	62 0b       	sbc	r22, r18
     80a:	73 0b       	sbc	r23, r19
     80c:	7a f4       	brpl	.+30     	; 0x82c <schedule+0x6c>
     80e:	fc 01       	movw	r30, r24
     810:	20 81       	ld	r18, Z
     812:	31 81       	ldd	r19, Z+1	; 0x01
     814:	30 93 2b 01 	sts	0x012B, r19	; 0x80012b <threadPool+0x1>
     818:	20 93 2a 01 	sts	0x012A, r18	; 0x80012a <threadPool>
     81c:	d1 83       	std	Z+1, r29	; 0x01
     81e:	c0 83       	st	Z, r28
     820:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <activeStack+0x1>
     824:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <activeStack>
     828:	0e 94 c0 03 	call	0x780	; 0x780 <dispatch>
     82c:	df 91       	pop	r29
     82e:	cf 91       	pop	r28
     830:	1f 91       	pop	r17
     832:	0f 91       	pop	r16
     834:	08 95       	ret

00000836 <__vector_1>:
     836:	1f 92       	push	r1
     838:	0f 92       	push	r0
     83a:	0f b6       	in	r0, 0x3f	; 63
     83c:	0f 92       	push	r0
     83e:	11 24       	eor	r1, r1
     840:	2f 93       	push	r18
     842:	3f 93       	push	r19
     844:	4f 93       	push	r20
     846:	5f 93       	push	r21
     848:	6f 93       	push	r22
     84a:	7f 93       	push	r23
     84c:	8f 93       	push	r24
     84e:	9f 93       	push	r25
     850:	af 93       	push	r26
     852:	bf 93       	push	r27
     854:	ef 93       	push	r30
     856:	ff 93       	push	r31
     858:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     85c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     860:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     864:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     868:	c9 01       	movw	r24, r18
     86a:	03 2e       	mov	r0, r19
     86c:	00 0c       	add	r0, r0
     86e:	aa 0b       	sbc	r26, r26
     870:	bb 0b       	sbc	r27, r27
     872:	dc 01       	movw	r26, r24
     874:	99 27       	eor	r25, r25
     876:	88 27       	eor	r24, r24
     878:	60 e0       	ldi	r22, 0x00	; 0
     87a:	70 e0       	ldi	r23, 0x00	; 0
     87c:	84 2b       	or	r24, r20
     87e:	95 2b       	or	r25, r21
     880:	a6 2b       	or	r26, r22
     882:	b7 2b       	or	r27, r23
     884:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     888:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     88c:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     890:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     894:	b0 9b       	sbis	0x16, 0	; 22
     896:	1b c0       	rjmp	.+54     	; 0x8ce <__vector_1+0x98>
     898:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     89c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     8a0:	c9 01       	movw	r24, r18
     8a2:	01 96       	adiw	r24, 0x01	; 1
     8a4:	09 2e       	mov	r0, r25
     8a6:	00 0c       	add	r0, r0
     8a8:	aa 0b       	sbc	r26, r26
     8aa:	bb 0b       	sbc	r27, r27
     8ac:	dc 01       	movw	r26, r24
     8ae:	99 27       	eor	r25, r25
     8b0:	88 27       	eor	r24, r24
     8b2:	60 e0       	ldi	r22, 0x00	; 0
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	84 2b       	or	r24, r20
     8b8:	95 2b       	or	r25, r21
     8ba:	a6 2b       	or	r26, r22
     8bc:	b7 2b       	or	r27, r23
     8be:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     8c2:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     8c6:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     8ca:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     8ce:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable>
     8d2:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x1>
     8d6:	30 97       	sbiw	r30, 0x00	; 0
     8d8:	39 f0       	breq	.+14     	; 0x8e8 <__vector_1+0xb2>
     8da:	60 e0       	ldi	r22, 0x00	; 0
     8dc:	70 e0       	ldi	r23, 0x00	; 0
     8de:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable>
     8e2:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x1>
     8e6:	09 95       	icall
     8e8:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
     8ec:	ff 91       	pop	r31
     8ee:	ef 91       	pop	r30
     8f0:	bf 91       	pop	r27
     8f2:	af 91       	pop	r26
     8f4:	9f 91       	pop	r25
     8f6:	8f 91       	pop	r24
     8f8:	7f 91       	pop	r23
     8fa:	6f 91       	pop	r22
     8fc:	5f 91       	pop	r21
     8fe:	4f 91       	pop	r20
     900:	3f 91       	pop	r19
     902:	2f 91       	pop	r18
     904:	0f 90       	pop	r0
     906:	0f be       	out	0x3f, r0	; 63
     908:	0f 90       	pop	r0
     90a:	1f 90       	pop	r1
     90c:	18 95       	reti

0000090e <__vector_2>:
     90e:	1f 92       	push	r1
     910:	0f 92       	push	r0
     912:	0f b6       	in	r0, 0x3f	; 63
     914:	0f 92       	push	r0
     916:	11 24       	eor	r1, r1
     918:	2f 93       	push	r18
     91a:	3f 93       	push	r19
     91c:	4f 93       	push	r20
     91e:	5f 93       	push	r21
     920:	6f 93       	push	r22
     922:	7f 93       	push	r23
     924:	8f 93       	push	r24
     926:	9f 93       	push	r25
     928:	af 93       	push	r26
     92a:	bf 93       	push	r27
     92c:	ef 93       	push	r30
     92e:	ff 93       	push	r31
     930:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     934:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     938:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     93c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     940:	c9 01       	movw	r24, r18
     942:	03 2e       	mov	r0, r19
     944:	00 0c       	add	r0, r0
     946:	aa 0b       	sbc	r26, r26
     948:	bb 0b       	sbc	r27, r27
     94a:	dc 01       	movw	r26, r24
     94c:	99 27       	eor	r25, r25
     94e:	88 27       	eor	r24, r24
     950:	60 e0       	ldi	r22, 0x00	; 0
     952:	70 e0       	ldi	r23, 0x00	; 0
     954:	84 2b       	or	r24, r20
     956:	95 2b       	or	r25, r21
     958:	a6 2b       	or	r26, r22
     95a:	b7 2b       	or	r27, r23
     95c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     960:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     964:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     968:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     96c:	b0 9b       	sbis	0x16, 0	; 22
     96e:	1b c0       	rjmp	.+54     	; 0x9a6 <__vector_2+0x98>
     970:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     974:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     978:	c9 01       	movw	r24, r18
     97a:	01 96       	adiw	r24, 0x01	; 1
     97c:	09 2e       	mov	r0, r25
     97e:	00 0c       	add	r0, r0
     980:	aa 0b       	sbc	r26, r26
     982:	bb 0b       	sbc	r27, r27
     984:	dc 01       	movw	r26, r24
     986:	99 27       	eor	r25, r25
     988:	88 27       	eor	r24, r24
     98a:	60 e0       	ldi	r22, 0x00	; 0
     98c:	70 e0       	ldi	r23, 0x00	; 0
     98e:	84 2b       	or	r24, r20
     990:	95 2b       	or	r25, r21
     992:	a6 2b       	or	r26, r22
     994:	b7 2b       	or	r27, r23
     996:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     99a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     99e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     9a2:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     9a6:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x2>
     9aa:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x3>
     9ae:	30 97       	sbiw	r30, 0x00	; 0
     9b0:	39 f0       	breq	.+14     	; 0x9c0 <__vector_2+0xb2>
     9b2:	61 e0       	ldi	r22, 0x01	; 1
     9b4:	70 e0       	ldi	r23, 0x00	; 0
     9b6:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x2>
     9ba:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x3>
     9be:	09 95       	icall
     9c0:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
     9c4:	ff 91       	pop	r31
     9c6:	ef 91       	pop	r30
     9c8:	bf 91       	pop	r27
     9ca:	af 91       	pop	r26
     9cc:	9f 91       	pop	r25
     9ce:	8f 91       	pop	r24
     9d0:	7f 91       	pop	r23
     9d2:	6f 91       	pop	r22
     9d4:	5f 91       	pop	r21
     9d6:	4f 91       	pop	r20
     9d8:	3f 91       	pop	r19
     9da:	2f 91       	pop	r18
     9dc:	0f 90       	pop	r0
     9de:	0f be       	out	0x3f, r0	; 63
     9e0:	0f 90       	pop	r0
     9e2:	1f 90       	pop	r1
     9e4:	18 95       	reti

000009e6 <__vector_3>:
     9e6:	1f 92       	push	r1
     9e8:	0f 92       	push	r0
     9ea:	0f b6       	in	r0, 0x3f	; 63
     9ec:	0f 92       	push	r0
     9ee:	11 24       	eor	r1, r1
     9f0:	2f 93       	push	r18
     9f2:	3f 93       	push	r19
     9f4:	4f 93       	push	r20
     9f6:	5f 93       	push	r21
     9f8:	6f 93       	push	r22
     9fa:	7f 93       	push	r23
     9fc:	8f 93       	push	r24
     9fe:	9f 93       	push	r25
     a00:	af 93       	push	r26
     a02:	bf 93       	push	r27
     a04:	ef 93       	push	r30
     a06:	ff 93       	push	r31
     a08:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     a0c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     a10:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     a14:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     a18:	c9 01       	movw	r24, r18
     a1a:	03 2e       	mov	r0, r19
     a1c:	00 0c       	add	r0, r0
     a1e:	aa 0b       	sbc	r26, r26
     a20:	bb 0b       	sbc	r27, r27
     a22:	dc 01       	movw	r26, r24
     a24:	99 27       	eor	r25, r25
     a26:	88 27       	eor	r24, r24
     a28:	60 e0       	ldi	r22, 0x00	; 0
     a2a:	70 e0       	ldi	r23, 0x00	; 0
     a2c:	84 2b       	or	r24, r20
     a2e:	95 2b       	or	r25, r21
     a30:	a6 2b       	or	r26, r22
     a32:	b7 2b       	or	r27, r23
     a34:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     a38:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     a3c:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     a40:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     a44:	b0 9b       	sbis	0x16, 0	; 22
     a46:	1b c0       	rjmp	.+54     	; 0xa7e <__vector_3+0x98>
     a48:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     a4c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     a50:	c9 01       	movw	r24, r18
     a52:	01 96       	adiw	r24, 0x01	; 1
     a54:	09 2e       	mov	r0, r25
     a56:	00 0c       	add	r0, r0
     a58:	aa 0b       	sbc	r26, r26
     a5a:	bb 0b       	sbc	r27, r27
     a5c:	dc 01       	movw	r26, r24
     a5e:	99 27       	eor	r25, r25
     a60:	88 27       	eor	r24, r24
     a62:	60 e0       	ldi	r22, 0x00	; 0
     a64:	70 e0       	ldi	r23, 0x00	; 0
     a66:	84 2b       	or	r24, r20
     a68:	95 2b       	or	r25, r21
     a6a:	a6 2b       	or	r26, r22
     a6c:	b7 2b       	or	r27, r23
     a6e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     a72:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     a76:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     a7a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     a7e:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x4>
     a82:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x5>
     a86:	30 97       	sbiw	r30, 0x00	; 0
     a88:	39 f0       	breq	.+14     	; 0xa98 <__vector_3+0xb2>
     a8a:	62 e0       	ldi	r22, 0x02	; 2
     a8c:	70 e0       	ldi	r23, 0x00	; 0
     a8e:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x4>
     a92:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x5>
     a96:	09 95       	icall
     a98:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
     a9c:	ff 91       	pop	r31
     a9e:	ef 91       	pop	r30
     aa0:	bf 91       	pop	r27
     aa2:	af 91       	pop	r26
     aa4:	9f 91       	pop	r25
     aa6:	8f 91       	pop	r24
     aa8:	7f 91       	pop	r23
     aaa:	6f 91       	pop	r22
     aac:	5f 91       	pop	r21
     aae:	4f 91       	pop	r20
     ab0:	3f 91       	pop	r19
     ab2:	2f 91       	pop	r18
     ab4:	0f 90       	pop	r0
     ab6:	0f be       	out	0x3f, r0	; 63
     ab8:	0f 90       	pop	r0
     aba:	1f 90       	pop	r1
     abc:	18 95       	reti

00000abe <__vector_4>:
     abe:	1f 92       	push	r1
     ac0:	0f 92       	push	r0
     ac2:	0f b6       	in	r0, 0x3f	; 63
     ac4:	0f 92       	push	r0
     ac6:	11 24       	eor	r1, r1
     ac8:	2f 93       	push	r18
     aca:	3f 93       	push	r19
     acc:	4f 93       	push	r20
     ace:	5f 93       	push	r21
     ad0:	6f 93       	push	r22
     ad2:	7f 93       	push	r23
     ad4:	8f 93       	push	r24
     ad6:	9f 93       	push	r25
     ad8:	af 93       	push	r26
     ada:	bf 93       	push	r27
     adc:	ef 93       	push	r30
     ade:	ff 93       	push	r31
     ae0:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     ae4:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     ae8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     aec:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     af0:	c9 01       	movw	r24, r18
     af2:	03 2e       	mov	r0, r19
     af4:	00 0c       	add	r0, r0
     af6:	aa 0b       	sbc	r26, r26
     af8:	bb 0b       	sbc	r27, r27
     afa:	dc 01       	movw	r26, r24
     afc:	99 27       	eor	r25, r25
     afe:	88 27       	eor	r24, r24
     b00:	60 e0       	ldi	r22, 0x00	; 0
     b02:	70 e0       	ldi	r23, 0x00	; 0
     b04:	84 2b       	or	r24, r20
     b06:	95 2b       	or	r25, r21
     b08:	a6 2b       	or	r26, r22
     b0a:	b7 2b       	or	r27, r23
     b0c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     b10:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     b14:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     b18:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     b1c:	b0 9b       	sbis	0x16, 0	; 22
     b1e:	1b c0       	rjmp	.+54     	; 0xb56 <__vector_4+0x98>
     b20:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     b24:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     b28:	c9 01       	movw	r24, r18
     b2a:	01 96       	adiw	r24, 0x01	; 1
     b2c:	09 2e       	mov	r0, r25
     b2e:	00 0c       	add	r0, r0
     b30:	aa 0b       	sbc	r26, r26
     b32:	bb 0b       	sbc	r27, r27
     b34:	dc 01       	movw	r26, r24
     b36:	99 27       	eor	r25, r25
     b38:	88 27       	eor	r24, r24
     b3a:	60 e0       	ldi	r22, 0x00	; 0
     b3c:	70 e0       	ldi	r23, 0x00	; 0
     b3e:	84 2b       	or	r24, r20
     b40:	95 2b       	or	r25, r21
     b42:	a6 2b       	or	r26, r22
     b44:	b7 2b       	or	r27, r23
     b46:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     b4a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     b4e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     b52:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     b56:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x6>
     b5a:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x7>
     b5e:	30 97       	sbiw	r30, 0x00	; 0
     b60:	39 f0       	breq	.+14     	; 0xb70 <__vector_4+0xb2>
     b62:	63 e0       	ldi	r22, 0x03	; 3
     b64:	70 e0       	ldi	r23, 0x00	; 0
     b66:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x6>
     b6a:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x7>
     b6e:	09 95       	icall
     b70:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
     b74:	ff 91       	pop	r31
     b76:	ef 91       	pop	r30
     b78:	bf 91       	pop	r27
     b7a:	af 91       	pop	r26
     b7c:	9f 91       	pop	r25
     b7e:	8f 91       	pop	r24
     b80:	7f 91       	pop	r23
     b82:	6f 91       	pop	r22
     b84:	5f 91       	pop	r21
     b86:	4f 91       	pop	r20
     b88:	3f 91       	pop	r19
     b8a:	2f 91       	pop	r18
     b8c:	0f 90       	pop	r0
     b8e:	0f be       	out	0x3f, r0	; 63
     b90:	0f 90       	pop	r0
     b92:	1f 90       	pop	r1
     b94:	18 95       	reti

00000b96 <__vector_5>:
     b96:	1f 92       	push	r1
     b98:	0f 92       	push	r0
     b9a:	0f b6       	in	r0, 0x3f	; 63
     b9c:	0f 92       	push	r0
     b9e:	11 24       	eor	r1, r1
     ba0:	2f 93       	push	r18
     ba2:	3f 93       	push	r19
     ba4:	4f 93       	push	r20
     ba6:	5f 93       	push	r21
     ba8:	6f 93       	push	r22
     baa:	7f 93       	push	r23
     bac:	8f 93       	push	r24
     bae:	9f 93       	push	r25
     bb0:	af 93       	push	r26
     bb2:	bf 93       	push	r27
     bb4:	ef 93       	push	r30
     bb6:	ff 93       	push	r31
     bb8:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     bbc:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     bc0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     bc4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     bc8:	c9 01       	movw	r24, r18
     bca:	03 2e       	mov	r0, r19
     bcc:	00 0c       	add	r0, r0
     bce:	aa 0b       	sbc	r26, r26
     bd0:	bb 0b       	sbc	r27, r27
     bd2:	dc 01       	movw	r26, r24
     bd4:	99 27       	eor	r25, r25
     bd6:	88 27       	eor	r24, r24
     bd8:	60 e0       	ldi	r22, 0x00	; 0
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	84 2b       	or	r24, r20
     bde:	95 2b       	or	r25, r21
     be0:	a6 2b       	or	r26, r22
     be2:	b7 2b       	or	r27, r23
     be4:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     be8:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     bec:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     bf0:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     bf4:	b0 9b       	sbis	0x16, 0	; 22
     bf6:	1b c0       	rjmp	.+54     	; 0xc2e <__vector_5+0x98>
     bf8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     bfc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c00:	c9 01       	movw	r24, r18
     c02:	01 96       	adiw	r24, 0x01	; 1
     c04:	09 2e       	mov	r0, r25
     c06:	00 0c       	add	r0, r0
     c08:	aa 0b       	sbc	r26, r26
     c0a:	bb 0b       	sbc	r27, r27
     c0c:	dc 01       	movw	r26, r24
     c0e:	99 27       	eor	r25, r25
     c10:	88 27       	eor	r24, r24
     c12:	60 e0       	ldi	r22, 0x00	; 0
     c14:	70 e0       	ldi	r23, 0x00	; 0
     c16:	84 2b       	or	r24, r20
     c18:	95 2b       	or	r25, r21
     c1a:	a6 2b       	or	r26, r22
     c1c:	b7 2b       	or	r27, r23
     c1e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     c22:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     c26:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     c2a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     c2e:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x8>
     c32:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x9>
     c36:	30 97       	sbiw	r30, 0x00	; 0
     c38:	39 f0       	breq	.+14     	; 0xc48 <__vector_5+0xb2>
     c3a:	64 e0       	ldi	r22, 0x04	; 4
     c3c:	70 e0       	ldi	r23, 0x00	; 0
     c3e:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x8>
     c42:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x9>
     c46:	09 95       	icall
     c48:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
     c4c:	ff 91       	pop	r31
     c4e:	ef 91       	pop	r30
     c50:	bf 91       	pop	r27
     c52:	af 91       	pop	r26
     c54:	9f 91       	pop	r25
     c56:	8f 91       	pop	r24
     c58:	7f 91       	pop	r23
     c5a:	6f 91       	pop	r22
     c5c:	5f 91       	pop	r21
     c5e:	4f 91       	pop	r20
     c60:	3f 91       	pop	r19
     c62:	2f 91       	pop	r18
     c64:	0f 90       	pop	r0
     c66:	0f be       	out	0x3f, r0	; 63
     c68:	0f 90       	pop	r0
     c6a:	1f 90       	pop	r1
     c6c:	18 95       	reti

00000c6e <__vector_10>:
     c6e:	1f 92       	push	r1
     c70:	0f 92       	push	r0
     c72:	0f b6       	in	r0, 0x3f	; 63
     c74:	0f 92       	push	r0
     c76:	11 24       	eor	r1, r1
     c78:	2f 93       	push	r18
     c7a:	3f 93       	push	r19
     c7c:	4f 93       	push	r20
     c7e:	5f 93       	push	r21
     c80:	6f 93       	push	r22
     c82:	7f 93       	push	r23
     c84:	8f 93       	push	r24
     c86:	9f 93       	push	r25
     c88:	af 93       	push	r26
     c8a:	bf 93       	push	r27
     c8c:	ef 93       	push	r30
     c8e:	ff 93       	push	r31
     c90:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     c94:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     c98:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c9c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     ca0:	c9 01       	movw	r24, r18
     ca2:	03 2e       	mov	r0, r19
     ca4:	00 0c       	add	r0, r0
     ca6:	aa 0b       	sbc	r26, r26
     ca8:	bb 0b       	sbc	r27, r27
     caa:	dc 01       	movw	r26, r24
     cac:	99 27       	eor	r25, r25
     cae:	88 27       	eor	r24, r24
     cb0:	60 e0       	ldi	r22, 0x00	; 0
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	84 2b       	or	r24, r20
     cb6:	95 2b       	or	r25, r21
     cb8:	a6 2b       	or	r26, r22
     cba:	b7 2b       	or	r27, r23
     cbc:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     cc0:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     cc4:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     cc8:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     ccc:	b0 9b       	sbis	0x16, 0	; 22
     cce:	1b c0       	rjmp	.+54     	; 0xd06 <__vector_10+0x98>
     cd0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     cd4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     cd8:	c9 01       	movw	r24, r18
     cda:	01 96       	adiw	r24, 0x01	; 1
     cdc:	09 2e       	mov	r0, r25
     cde:	00 0c       	add	r0, r0
     ce0:	aa 0b       	sbc	r26, r26
     ce2:	bb 0b       	sbc	r27, r27
     ce4:	dc 01       	movw	r26, r24
     ce6:	99 27       	eor	r25, r25
     ce8:	88 27       	eor	r24, r24
     cea:	60 e0       	ldi	r22, 0x00	; 0
     cec:	70 e0       	ldi	r23, 0x00	; 0
     cee:	84 2b       	or	r24, r20
     cf0:	95 2b       	or	r25, r21
     cf2:	a6 2b       	or	r26, r22
     cf4:	b7 2b       	or	r27, r23
     cf6:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     cfa:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     cfe:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     d02:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     d06:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0xa>
     d0a:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0xb>
     d0e:	30 97       	sbiw	r30, 0x00	; 0
     d10:	39 f0       	breq	.+14     	; 0xd20 <__vector_10+0xb2>
     d12:	65 e0       	ldi	r22, 0x05	; 5
     d14:	70 e0       	ldi	r23, 0x00	; 0
     d16:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0xa>
     d1a:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0xb>
     d1e:	09 95       	icall
     d20:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
     d24:	ff 91       	pop	r31
     d26:	ef 91       	pop	r30
     d28:	bf 91       	pop	r27
     d2a:	af 91       	pop	r26
     d2c:	9f 91       	pop	r25
     d2e:	8f 91       	pop	r24
     d30:	7f 91       	pop	r23
     d32:	6f 91       	pop	r22
     d34:	5f 91       	pop	r21
     d36:	4f 91       	pop	r20
     d38:	3f 91       	pop	r19
     d3a:	2f 91       	pop	r18
     d3c:	0f 90       	pop	r0
     d3e:	0f be       	out	0x3f, r0	; 63
     d40:	0f 90       	pop	r0
     d42:	1f 90       	pop	r1
     d44:	18 95       	reti

00000d46 <__vector_11>:
     d46:	1f 92       	push	r1
     d48:	0f 92       	push	r0
     d4a:	0f b6       	in	r0, 0x3f	; 63
     d4c:	0f 92       	push	r0
     d4e:	11 24       	eor	r1, r1
     d50:	2f 93       	push	r18
     d52:	3f 93       	push	r19
     d54:	4f 93       	push	r20
     d56:	5f 93       	push	r21
     d58:	6f 93       	push	r22
     d5a:	7f 93       	push	r23
     d5c:	8f 93       	push	r24
     d5e:	9f 93       	push	r25
     d60:	af 93       	push	r26
     d62:	bf 93       	push	r27
     d64:	ef 93       	push	r30
     d66:	ff 93       	push	r31
     d68:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     d6c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     d70:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     d74:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     d78:	c9 01       	movw	r24, r18
     d7a:	03 2e       	mov	r0, r19
     d7c:	00 0c       	add	r0, r0
     d7e:	aa 0b       	sbc	r26, r26
     d80:	bb 0b       	sbc	r27, r27
     d82:	dc 01       	movw	r26, r24
     d84:	99 27       	eor	r25, r25
     d86:	88 27       	eor	r24, r24
     d88:	60 e0       	ldi	r22, 0x00	; 0
     d8a:	70 e0       	ldi	r23, 0x00	; 0
     d8c:	84 2b       	or	r24, r20
     d8e:	95 2b       	or	r25, r21
     d90:	a6 2b       	or	r26, r22
     d92:	b7 2b       	or	r27, r23
     d94:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     d98:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     d9c:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     da0:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     da4:	b0 9b       	sbis	0x16, 0	; 22
     da6:	1b c0       	rjmp	.+54     	; 0xdde <__vector_11+0x98>
     da8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     dac:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     db0:	c9 01       	movw	r24, r18
     db2:	01 96       	adiw	r24, 0x01	; 1
     db4:	09 2e       	mov	r0, r25
     db6:	00 0c       	add	r0, r0
     db8:	aa 0b       	sbc	r26, r26
     dba:	bb 0b       	sbc	r27, r27
     dbc:	dc 01       	movw	r26, r24
     dbe:	99 27       	eor	r25, r25
     dc0:	88 27       	eor	r24, r24
     dc2:	60 e0       	ldi	r22, 0x00	; 0
     dc4:	70 e0       	ldi	r23, 0x00	; 0
     dc6:	84 2b       	or	r24, r20
     dc8:	95 2b       	or	r25, r21
     dca:	a6 2b       	or	r26, r22
     dcc:	b7 2b       	or	r27, r23
     dce:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     dd2:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     dd6:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     dda:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     dde:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xc>
     de2:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xd>
     de6:	30 97       	sbiw	r30, 0x00	; 0
     de8:	39 f0       	breq	.+14     	; 0xdf8 <__vector_11+0xb2>
     dea:	66 e0       	ldi	r22, 0x06	; 6
     dec:	70 e0       	ldi	r23, 0x00	; 0
     dee:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xc>
     df2:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xd>
     df6:	09 95       	icall
     df8:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
     dfc:	ff 91       	pop	r31
     dfe:	ef 91       	pop	r30
     e00:	bf 91       	pop	r27
     e02:	af 91       	pop	r26
     e04:	9f 91       	pop	r25
     e06:	8f 91       	pop	r24
     e08:	7f 91       	pop	r23
     e0a:	6f 91       	pop	r22
     e0c:	5f 91       	pop	r21
     e0e:	4f 91       	pop	r20
     e10:	3f 91       	pop	r19
     e12:	2f 91       	pop	r18
     e14:	0f 90       	pop	r0
     e16:	0f be       	out	0x3f, r0	; 63
     e18:	0f 90       	pop	r0
     e1a:	1f 90       	pop	r1
     e1c:	18 95       	reti

00000e1e <__vector_12>:
     e1e:	1f 92       	push	r1
     e20:	0f 92       	push	r0
     e22:	0f b6       	in	r0, 0x3f	; 63
     e24:	0f 92       	push	r0
     e26:	11 24       	eor	r1, r1
     e28:	2f 93       	push	r18
     e2a:	3f 93       	push	r19
     e2c:	4f 93       	push	r20
     e2e:	5f 93       	push	r21
     e30:	6f 93       	push	r22
     e32:	7f 93       	push	r23
     e34:	8f 93       	push	r24
     e36:	9f 93       	push	r25
     e38:	af 93       	push	r26
     e3a:	bf 93       	push	r27
     e3c:	ef 93       	push	r30
     e3e:	ff 93       	push	r31
     e40:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     e44:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     e48:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e4c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e50:	c9 01       	movw	r24, r18
     e52:	03 2e       	mov	r0, r19
     e54:	00 0c       	add	r0, r0
     e56:	aa 0b       	sbc	r26, r26
     e58:	bb 0b       	sbc	r27, r27
     e5a:	dc 01       	movw	r26, r24
     e5c:	99 27       	eor	r25, r25
     e5e:	88 27       	eor	r24, r24
     e60:	60 e0       	ldi	r22, 0x00	; 0
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	84 2b       	or	r24, r20
     e66:	95 2b       	or	r25, r21
     e68:	a6 2b       	or	r26, r22
     e6a:	b7 2b       	or	r27, r23
     e6c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     e70:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     e74:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     e78:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     e7c:	b0 9b       	sbis	0x16, 0	; 22
     e7e:	1b c0       	rjmp	.+54     	; 0xeb6 <__vector_12+0x98>
     e80:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e84:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e88:	c9 01       	movw	r24, r18
     e8a:	01 96       	adiw	r24, 0x01	; 1
     e8c:	09 2e       	mov	r0, r25
     e8e:	00 0c       	add	r0, r0
     e90:	aa 0b       	sbc	r26, r26
     e92:	bb 0b       	sbc	r27, r27
     e94:	dc 01       	movw	r26, r24
     e96:	99 27       	eor	r25, r25
     e98:	88 27       	eor	r24, r24
     e9a:	60 e0       	ldi	r22, 0x00	; 0
     e9c:	70 e0       	ldi	r23, 0x00	; 0
     e9e:	84 2b       	or	r24, r20
     ea0:	95 2b       	or	r25, r21
     ea2:	a6 2b       	or	r26, r22
     ea4:	b7 2b       	or	r27, r23
     ea6:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     eaa:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     eae:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     eb2:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     eb6:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xe>
     eba:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xf>
     ebe:	30 97       	sbiw	r30, 0x00	; 0
     ec0:	39 f0       	breq	.+14     	; 0xed0 <__vector_12+0xb2>
     ec2:	67 e0       	ldi	r22, 0x07	; 7
     ec4:	70 e0       	ldi	r23, 0x00	; 0
     ec6:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xe>
     eca:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xf>
     ece:	09 95       	icall
     ed0:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
     ed4:	ff 91       	pop	r31
     ed6:	ef 91       	pop	r30
     ed8:	bf 91       	pop	r27
     eda:	af 91       	pop	r26
     edc:	9f 91       	pop	r25
     ede:	8f 91       	pop	r24
     ee0:	7f 91       	pop	r23
     ee2:	6f 91       	pop	r22
     ee4:	5f 91       	pop	r21
     ee6:	4f 91       	pop	r20
     ee8:	3f 91       	pop	r19
     eea:	2f 91       	pop	r18
     eec:	0f 90       	pop	r0
     eee:	0f be       	out	0x3f, r0	; 63
     ef0:	0f 90       	pop	r0
     ef2:	1f 90       	pop	r1
     ef4:	18 95       	reti

00000ef6 <__vector_13>:
     ef6:	1f 92       	push	r1
     ef8:	0f 92       	push	r0
     efa:	0f b6       	in	r0, 0x3f	; 63
     efc:	0f 92       	push	r0
     efe:	11 24       	eor	r1, r1
     f00:	2f 93       	push	r18
     f02:	3f 93       	push	r19
     f04:	4f 93       	push	r20
     f06:	5f 93       	push	r21
     f08:	6f 93       	push	r22
     f0a:	7f 93       	push	r23
     f0c:	8f 93       	push	r24
     f0e:	9f 93       	push	r25
     f10:	af 93       	push	r26
     f12:	bf 93       	push	r27
     f14:	ef 93       	push	r30
     f16:	ff 93       	push	r31
     f18:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     f1c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     f20:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f24:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f28:	c9 01       	movw	r24, r18
     f2a:	03 2e       	mov	r0, r19
     f2c:	00 0c       	add	r0, r0
     f2e:	aa 0b       	sbc	r26, r26
     f30:	bb 0b       	sbc	r27, r27
     f32:	dc 01       	movw	r26, r24
     f34:	99 27       	eor	r25, r25
     f36:	88 27       	eor	r24, r24
     f38:	60 e0       	ldi	r22, 0x00	; 0
     f3a:	70 e0       	ldi	r23, 0x00	; 0
     f3c:	84 2b       	or	r24, r20
     f3e:	95 2b       	or	r25, r21
     f40:	a6 2b       	or	r26, r22
     f42:	b7 2b       	or	r27, r23
     f44:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     f48:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     f4c:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     f50:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     f54:	b0 9b       	sbis	0x16, 0	; 22
     f56:	1b c0       	rjmp	.+54     	; 0xf8e <__vector_13+0x98>
     f58:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f5c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f60:	c9 01       	movw	r24, r18
     f62:	01 96       	adiw	r24, 0x01	; 1
     f64:	09 2e       	mov	r0, r25
     f66:	00 0c       	add	r0, r0
     f68:	aa 0b       	sbc	r26, r26
     f6a:	bb 0b       	sbc	r27, r27
     f6c:	dc 01       	movw	r26, r24
     f6e:	99 27       	eor	r25, r25
     f70:	88 27       	eor	r24, r24
     f72:	60 e0       	ldi	r22, 0x00	; 0
     f74:	70 e0       	ldi	r23, 0x00	; 0
     f76:	84 2b       	or	r24, r20
     f78:	95 2b       	or	r25, r21
     f7a:	a6 2b       	or	r26, r22
     f7c:	b7 2b       	or	r27, r23
     f7e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     f82:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     f86:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     f8a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     f8e:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0x10>
     f92:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0x11>
     f96:	30 97       	sbiw	r30, 0x00	; 0
     f98:	39 f0       	breq	.+14     	; 0xfa8 <__vector_13+0xb2>
     f9a:	68 e0       	ldi	r22, 0x08	; 8
     f9c:	70 e0       	ldi	r23, 0x00	; 0
     f9e:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0x10>
     fa2:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0x11>
     fa6:	09 95       	icall
     fa8:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
     fac:	ff 91       	pop	r31
     fae:	ef 91       	pop	r30
     fb0:	bf 91       	pop	r27
     fb2:	af 91       	pop	r26
     fb4:	9f 91       	pop	r25
     fb6:	8f 91       	pop	r24
     fb8:	7f 91       	pop	r23
     fba:	6f 91       	pop	r22
     fbc:	5f 91       	pop	r21
     fbe:	4f 91       	pop	r20
     fc0:	3f 91       	pop	r19
     fc2:	2f 91       	pop	r18
     fc4:	0f 90       	pop	r0
     fc6:	0f be       	out	0x3f, r0	; 63
     fc8:	0f 90       	pop	r0
     fca:	1f 90       	pop	r1
     fcc:	18 95       	reti

00000fce <__vector_14>:
     fce:	1f 92       	push	r1
     fd0:	0f 92       	push	r0
     fd2:	0f b6       	in	r0, 0x3f	; 63
     fd4:	0f 92       	push	r0
     fd6:	11 24       	eor	r1, r1
     fd8:	2f 93       	push	r18
     fda:	3f 93       	push	r19
     fdc:	4f 93       	push	r20
     fde:	5f 93       	push	r21
     fe0:	6f 93       	push	r22
     fe2:	7f 93       	push	r23
     fe4:	8f 93       	push	r24
     fe6:	9f 93       	push	r25
     fe8:	af 93       	push	r26
     fea:	bf 93       	push	r27
     fec:	ef 93       	push	r30
     fee:	ff 93       	push	r31
     ff0:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     ff4:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     ff8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     ffc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1000:	c9 01       	movw	r24, r18
    1002:	03 2e       	mov	r0, r19
    1004:	00 0c       	add	r0, r0
    1006:	aa 0b       	sbc	r26, r26
    1008:	bb 0b       	sbc	r27, r27
    100a:	dc 01       	movw	r26, r24
    100c:	99 27       	eor	r25, r25
    100e:	88 27       	eor	r24, r24
    1010:	60 e0       	ldi	r22, 0x00	; 0
    1012:	70 e0       	ldi	r23, 0x00	; 0
    1014:	84 2b       	or	r24, r20
    1016:	95 2b       	or	r25, r21
    1018:	a6 2b       	or	r26, r22
    101a:	b7 2b       	or	r27, r23
    101c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1020:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    1024:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1028:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    102c:	b0 9b       	sbis	0x16, 0	; 22
    102e:	1b c0       	rjmp	.+54     	; 0x1066 <__vector_14+0x98>
    1030:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1034:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1038:	c9 01       	movw	r24, r18
    103a:	01 96       	adiw	r24, 0x01	; 1
    103c:	09 2e       	mov	r0, r25
    103e:	00 0c       	add	r0, r0
    1040:	aa 0b       	sbc	r26, r26
    1042:	bb 0b       	sbc	r27, r27
    1044:	dc 01       	movw	r26, r24
    1046:	99 27       	eor	r25, r25
    1048:	88 27       	eor	r24, r24
    104a:	60 e0       	ldi	r22, 0x00	; 0
    104c:	70 e0       	ldi	r23, 0x00	; 0
    104e:	84 2b       	or	r24, r20
    1050:	95 2b       	or	r25, r21
    1052:	a6 2b       	or	r26, r22
    1054:	b7 2b       	or	r27, r23
    1056:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    105a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    105e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1062:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1066:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x12>
    106a:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x13>
    106e:	30 97       	sbiw	r30, 0x00	; 0
    1070:	39 f0       	breq	.+14     	; 0x1080 <__vector_14+0xb2>
    1072:	69 e0       	ldi	r22, 0x09	; 9
    1074:	70 e0       	ldi	r23, 0x00	; 0
    1076:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x12>
    107a:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x13>
    107e:	09 95       	icall
    1080:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
    1084:	ff 91       	pop	r31
    1086:	ef 91       	pop	r30
    1088:	bf 91       	pop	r27
    108a:	af 91       	pop	r26
    108c:	9f 91       	pop	r25
    108e:	8f 91       	pop	r24
    1090:	7f 91       	pop	r23
    1092:	6f 91       	pop	r22
    1094:	5f 91       	pop	r21
    1096:	4f 91       	pop	r20
    1098:	3f 91       	pop	r19
    109a:	2f 91       	pop	r18
    109c:	0f 90       	pop	r0
    109e:	0f be       	out	0x3f, r0	; 63
    10a0:	0f 90       	pop	r0
    10a2:	1f 90       	pop	r1
    10a4:	18 95       	reti

000010a6 <__vector_15>:
    10a6:	1f 92       	push	r1
    10a8:	0f 92       	push	r0
    10aa:	0f b6       	in	r0, 0x3f	; 63
    10ac:	0f 92       	push	r0
    10ae:	11 24       	eor	r1, r1
    10b0:	2f 93       	push	r18
    10b2:	3f 93       	push	r19
    10b4:	4f 93       	push	r20
    10b6:	5f 93       	push	r21
    10b8:	6f 93       	push	r22
    10ba:	7f 93       	push	r23
    10bc:	8f 93       	push	r24
    10be:	9f 93       	push	r25
    10c0:	af 93       	push	r26
    10c2:	bf 93       	push	r27
    10c4:	ef 93       	push	r30
    10c6:	ff 93       	push	r31
    10c8:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    10cc:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    10d0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10d4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10d8:	c9 01       	movw	r24, r18
    10da:	03 2e       	mov	r0, r19
    10dc:	00 0c       	add	r0, r0
    10de:	aa 0b       	sbc	r26, r26
    10e0:	bb 0b       	sbc	r27, r27
    10e2:	dc 01       	movw	r26, r24
    10e4:	99 27       	eor	r25, r25
    10e6:	88 27       	eor	r24, r24
    10e8:	60 e0       	ldi	r22, 0x00	; 0
    10ea:	70 e0       	ldi	r23, 0x00	; 0
    10ec:	84 2b       	or	r24, r20
    10ee:	95 2b       	or	r25, r21
    10f0:	a6 2b       	or	r26, r22
    10f2:	b7 2b       	or	r27, r23
    10f4:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    10f8:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    10fc:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1100:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1104:	b0 9b       	sbis	0x16, 0	; 22
    1106:	1b c0       	rjmp	.+54     	; 0x113e <__vector_15+0x98>
    1108:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    110c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1110:	c9 01       	movw	r24, r18
    1112:	01 96       	adiw	r24, 0x01	; 1
    1114:	09 2e       	mov	r0, r25
    1116:	00 0c       	add	r0, r0
    1118:	aa 0b       	sbc	r26, r26
    111a:	bb 0b       	sbc	r27, r27
    111c:	dc 01       	movw	r26, r24
    111e:	99 27       	eor	r25, r25
    1120:	88 27       	eor	r24, r24
    1122:	60 e0       	ldi	r22, 0x00	; 0
    1124:	70 e0       	ldi	r23, 0x00	; 0
    1126:	84 2b       	or	r24, r20
    1128:	95 2b       	or	r25, r21
    112a:	a6 2b       	or	r26, r22
    112c:	b7 2b       	or	r27, r23
    112e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1132:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    1136:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    113a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    113e:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x14>
    1142:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x15>
    1146:	30 97       	sbiw	r30, 0x00	; 0
    1148:	39 f0       	breq	.+14     	; 0x1158 <__vector_15+0xb2>
    114a:	6a e0       	ldi	r22, 0x0A	; 10
    114c:	70 e0       	ldi	r23, 0x00	; 0
    114e:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x14>
    1152:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x15>
    1156:	09 95       	icall
    1158:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
    115c:	ff 91       	pop	r31
    115e:	ef 91       	pop	r30
    1160:	bf 91       	pop	r27
    1162:	af 91       	pop	r26
    1164:	9f 91       	pop	r25
    1166:	8f 91       	pop	r24
    1168:	7f 91       	pop	r23
    116a:	6f 91       	pop	r22
    116c:	5f 91       	pop	r21
    116e:	4f 91       	pop	r20
    1170:	3f 91       	pop	r19
    1172:	2f 91       	pop	r18
    1174:	0f 90       	pop	r0
    1176:	0f be       	out	0x3f, r0	; 63
    1178:	0f 90       	pop	r0
    117a:	1f 90       	pop	r1
    117c:	18 95       	reti

0000117e <__vector_16>:
    117e:	1f 92       	push	r1
    1180:	0f 92       	push	r0
    1182:	0f b6       	in	r0, 0x3f	; 63
    1184:	0f 92       	push	r0
    1186:	11 24       	eor	r1, r1
    1188:	2f 93       	push	r18
    118a:	3f 93       	push	r19
    118c:	4f 93       	push	r20
    118e:	5f 93       	push	r21
    1190:	6f 93       	push	r22
    1192:	7f 93       	push	r23
    1194:	8f 93       	push	r24
    1196:	9f 93       	push	r25
    1198:	af 93       	push	r26
    119a:	bf 93       	push	r27
    119c:	ef 93       	push	r30
    119e:	ff 93       	push	r31
    11a0:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    11a4:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    11a8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11ac:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11b0:	c9 01       	movw	r24, r18
    11b2:	03 2e       	mov	r0, r19
    11b4:	00 0c       	add	r0, r0
    11b6:	aa 0b       	sbc	r26, r26
    11b8:	bb 0b       	sbc	r27, r27
    11ba:	dc 01       	movw	r26, r24
    11bc:	99 27       	eor	r25, r25
    11be:	88 27       	eor	r24, r24
    11c0:	60 e0       	ldi	r22, 0x00	; 0
    11c2:	70 e0       	ldi	r23, 0x00	; 0
    11c4:	84 2b       	or	r24, r20
    11c6:	95 2b       	or	r25, r21
    11c8:	a6 2b       	or	r26, r22
    11ca:	b7 2b       	or	r27, r23
    11cc:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    11d0:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    11d4:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    11d8:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    11dc:	b0 9b       	sbis	0x16, 0	; 22
    11de:	1b c0       	rjmp	.+54     	; 0x1216 <__vector_16+0x98>
    11e0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11e4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11e8:	c9 01       	movw	r24, r18
    11ea:	01 96       	adiw	r24, 0x01	; 1
    11ec:	09 2e       	mov	r0, r25
    11ee:	00 0c       	add	r0, r0
    11f0:	aa 0b       	sbc	r26, r26
    11f2:	bb 0b       	sbc	r27, r27
    11f4:	dc 01       	movw	r26, r24
    11f6:	99 27       	eor	r25, r25
    11f8:	88 27       	eor	r24, r24
    11fa:	60 e0       	ldi	r22, 0x00	; 0
    11fc:	70 e0       	ldi	r23, 0x00	; 0
    11fe:	84 2b       	or	r24, r20
    1200:	95 2b       	or	r25, r21
    1202:	a6 2b       	or	r26, r22
    1204:	b7 2b       	or	r27, r23
    1206:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    120a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    120e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1212:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1216:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x16>
    121a:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x17>
    121e:	30 97       	sbiw	r30, 0x00	; 0
    1220:	39 f0       	breq	.+14     	; 0x1230 <__vector_16+0xb2>
    1222:	6b e0       	ldi	r22, 0x0B	; 11
    1224:	70 e0       	ldi	r23, 0x00	; 0
    1226:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x16>
    122a:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x17>
    122e:	09 95       	icall
    1230:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
    1234:	ff 91       	pop	r31
    1236:	ef 91       	pop	r30
    1238:	bf 91       	pop	r27
    123a:	af 91       	pop	r26
    123c:	9f 91       	pop	r25
    123e:	8f 91       	pop	r24
    1240:	7f 91       	pop	r23
    1242:	6f 91       	pop	r22
    1244:	5f 91       	pop	r21
    1246:	4f 91       	pop	r20
    1248:	3f 91       	pop	r19
    124a:	2f 91       	pop	r18
    124c:	0f 90       	pop	r0
    124e:	0f be       	out	0x3f, r0	; 63
    1250:	0f 90       	pop	r0
    1252:	1f 90       	pop	r1
    1254:	18 95       	reti

00001256 <__vector_17>:
    1256:	1f 92       	push	r1
    1258:	0f 92       	push	r0
    125a:	0f b6       	in	r0, 0x3f	; 63
    125c:	0f 92       	push	r0
    125e:	11 24       	eor	r1, r1
    1260:	2f 93       	push	r18
    1262:	3f 93       	push	r19
    1264:	4f 93       	push	r20
    1266:	5f 93       	push	r21
    1268:	6f 93       	push	r22
    126a:	7f 93       	push	r23
    126c:	8f 93       	push	r24
    126e:	9f 93       	push	r25
    1270:	af 93       	push	r26
    1272:	bf 93       	push	r27
    1274:	ef 93       	push	r30
    1276:	ff 93       	push	r31
    1278:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    127c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1280:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1284:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1288:	c9 01       	movw	r24, r18
    128a:	03 2e       	mov	r0, r19
    128c:	00 0c       	add	r0, r0
    128e:	aa 0b       	sbc	r26, r26
    1290:	bb 0b       	sbc	r27, r27
    1292:	dc 01       	movw	r26, r24
    1294:	99 27       	eor	r25, r25
    1296:	88 27       	eor	r24, r24
    1298:	60 e0       	ldi	r22, 0x00	; 0
    129a:	70 e0       	ldi	r23, 0x00	; 0
    129c:	84 2b       	or	r24, r20
    129e:	95 2b       	or	r25, r21
    12a0:	a6 2b       	or	r26, r22
    12a2:	b7 2b       	or	r27, r23
    12a4:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    12a8:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    12ac:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    12b0:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    12b4:	b0 9b       	sbis	0x16, 0	; 22
    12b6:	1b c0       	rjmp	.+54     	; 0x12ee <__vector_17+0x98>
    12b8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    12bc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    12c0:	c9 01       	movw	r24, r18
    12c2:	01 96       	adiw	r24, 0x01	; 1
    12c4:	09 2e       	mov	r0, r25
    12c6:	00 0c       	add	r0, r0
    12c8:	aa 0b       	sbc	r26, r26
    12ca:	bb 0b       	sbc	r27, r27
    12cc:	dc 01       	movw	r26, r24
    12ce:	99 27       	eor	r25, r25
    12d0:	88 27       	eor	r24, r24
    12d2:	60 e0       	ldi	r22, 0x00	; 0
    12d4:	70 e0       	ldi	r23, 0x00	; 0
    12d6:	84 2b       	or	r24, r20
    12d8:	95 2b       	or	r25, r21
    12da:	a6 2b       	or	r26, r22
    12dc:	b7 2b       	or	r27, r23
    12de:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    12e2:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    12e6:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    12ea:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    12ee:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x18>
    12f2:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x19>
    12f6:	30 97       	sbiw	r30, 0x00	; 0
    12f8:	39 f0       	breq	.+14     	; 0x1308 <__vector_17+0xb2>
    12fa:	6c e0       	ldi	r22, 0x0C	; 12
    12fc:	70 e0       	ldi	r23, 0x00	; 0
    12fe:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x18>
    1302:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x19>
    1306:	09 95       	icall
    1308:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
    130c:	ff 91       	pop	r31
    130e:	ef 91       	pop	r30
    1310:	bf 91       	pop	r27
    1312:	af 91       	pop	r26
    1314:	9f 91       	pop	r25
    1316:	8f 91       	pop	r24
    1318:	7f 91       	pop	r23
    131a:	6f 91       	pop	r22
    131c:	5f 91       	pop	r21
    131e:	4f 91       	pop	r20
    1320:	3f 91       	pop	r19
    1322:	2f 91       	pop	r18
    1324:	0f 90       	pop	r0
    1326:	0f be       	out	0x3f, r0	; 63
    1328:	0f 90       	pop	r0
    132a:	1f 90       	pop	r1
    132c:	18 95       	reti

0000132e <__vector_18>:
    132e:	1f 92       	push	r1
    1330:	0f 92       	push	r0
    1332:	0f b6       	in	r0, 0x3f	; 63
    1334:	0f 92       	push	r0
    1336:	11 24       	eor	r1, r1
    1338:	2f 93       	push	r18
    133a:	3f 93       	push	r19
    133c:	4f 93       	push	r20
    133e:	5f 93       	push	r21
    1340:	6f 93       	push	r22
    1342:	7f 93       	push	r23
    1344:	8f 93       	push	r24
    1346:	9f 93       	push	r25
    1348:	af 93       	push	r26
    134a:	bf 93       	push	r27
    134c:	ef 93       	push	r30
    134e:	ff 93       	push	r31
    1350:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    1354:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1358:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    135c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1360:	c9 01       	movw	r24, r18
    1362:	03 2e       	mov	r0, r19
    1364:	00 0c       	add	r0, r0
    1366:	aa 0b       	sbc	r26, r26
    1368:	bb 0b       	sbc	r27, r27
    136a:	dc 01       	movw	r26, r24
    136c:	99 27       	eor	r25, r25
    136e:	88 27       	eor	r24, r24
    1370:	60 e0       	ldi	r22, 0x00	; 0
    1372:	70 e0       	ldi	r23, 0x00	; 0
    1374:	84 2b       	or	r24, r20
    1376:	95 2b       	or	r25, r21
    1378:	a6 2b       	or	r26, r22
    137a:	b7 2b       	or	r27, r23
    137c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1380:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    1384:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1388:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    138c:	b0 9b       	sbis	0x16, 0	; 22
    138e:	1b c0       	rjmp	.+54     	; 0x13c6 <__vector_18+0x98>
    1390:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1394:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1398:	c9 01       	movw	r24, r18
    139a:	01 96       	adiw	r24, 0x01	; 1
    139c:	09 2e       	mov	r0, r25
    139e:	00 0c       	add	r0, r0
    13a0:	aa 0b       	sbc	r26, r26
    13a2:	bb 0b       	sbc	r27, r27
    13a4:	dc 01       	movw	r26, r24
    13a6:	99 27       	eor	r25, r25
    13a8:	88 27       	eor	r24, r24
    13aa:	60 e0       	ldi	r22, 0x00	; 0
    13ac:	70 e0       	ldi	r23, 0x00	; 0
    13ae:	84 2b       	or	r24, r20
    13b0:	95 2b       	or	r25, r21
    13b2:	a6 2b       	or	r26, r22
    13b4:	b7 2b       	or	r27, r23
    13b6:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    13ba:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    13be:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    13c2:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    13c6:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x1a>
    13ca:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x1b>
    13ce:	30 97       	sbiw	r30, 0x00	; 0
    13d0:	39 f0       	breq	.+14     	; 0x13e0 <__vector_18+0xb2>
    13d2:	6d e0       	ldi	r22, 0x0D	; 13
    13d4:	70 e0       	ldi	r23, 0x00	; 0
    13d6:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x1a>
    13da:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x1b>
    13de:	09 95       	icall
    13e0:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
    13e4:	ff 91       	pop	r31
    13e6:	ef 91       	pop	r30
    13e8:	bf 91       	pop	r27
    13ea:	af 91       	pop	r26
    13ec:	9f 91       	pop	r25
    13ee:	8f 91       	pop	r24
    13f0:	7f 91       	pop	r23
    13f2:	6f 91       	pop	r22
    13f4:	5f 91       	pop	r21
    13f6:	4f 91       	pop	r20
    13f8:	3f 91       	pop	r19
    13fa:	2f 91       	pop	r18
    13fc:	0f 90       	pop	r0
    13fe:	0f be       	out	0x3f, r0	; 63
    1400:	0f 90       	pop	r0
    1402:	1f 90       	pop	r1
    1404:	18 95       	reti

00001406 <__vector_19>:
    1406:	1f 92       	push	r1
    1408:	0f 92       	push	r0
    140a:	0f b6       	in	r0, 0x3f	; 63
    140c:	0f 92       	push	r0
    140e:	11 24       	eor	r1, r1
    1410:	2f 93       	push	r18
    1412:	3f 93       	push	r19
    1414:	4f 93       	push	r20
    1416:	5f 93       	push	r21
    1418:	6f 93       	push	r22
    141a:	7f 93       	push	r23
    141c:	8f 93       	push	r24
    141e:	9f 93       	push	r25
    1420:	af 93       	push	r26
    1422:	bf 93       	push	r27
    1424:	ef 93       	push	r30
    1426:	ff 93       	push	r31
    1428:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    142c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1430:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1434:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1438:	c9 01       	movw	r24, r18
    143a:	03 2e       	mov	r0, r19
    143c:	00 0c       	add	r0, r0
    143e:	aa 0b       	sbc	r26, r26
    1440:	bb 0b       	sbc	r27, r27
    1442:	dc 01       	movw	r26, r24
    1444:	99 27       	eor	r25, r25
    1446:	88 27       	eor	r24, r24
    1448:	60 e0       	ldi	r22, 0x00	; 0
    144a:	70 e0       	ldi	r23, 0x00	; 0
    144c:	84 2b       	or	r24, r20
    144e:	95 2b       	or	r25, r21
    1450:	a6 2b       	or	r26, r22
    1452:	b7 2b       	or	r27, r23
    1454:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1458:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    145c:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1460:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1464:	b0 9b       	sbis	0x16, 0	; 22
    1466:	1b c0       	rjmp	.+54     	; 0x149e <__vector_19+0x98>
    1468:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    146c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1470:	c9 01       	movw	r24, r18
    1472:	01 96       	adiw	r24, 0x01	; 1
    1474:	09 2e       	mov	r0, r25
    1476:	00 0c       	add	r0, r0
    1478:	aa 0b       	sbc	r26, r26
    147a:	bb 0b       	sbc	r27, r27
    147c:	dc 01       	movw	r26, r24
    147e:	99 27       	eor	r25, r25
    1480:	88 27       	eor	r24, r24
    1482:	60 e0       	ldi	r22, 0x00	; 0
    1484:	70 e0       	ldi	r23, 0x00	; 0
    1486:	84 2b       	or	r24, r20
    1488:	95 2b       	or	r25, r21
    148a:	a6 2b       	or	r26, r22
    148c:	b7 2b       	or	r27, r23
    148e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1492:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    1496:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    149a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    149e:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1c>
    14a2:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1d>
    14a6:	30 97       	sbiw	r30, 0x00	; 0
    14a8:	39 f0       	breq	.+14     	; 0x14b8 <__vector_19+0xb2>
    14aa:	6e e0       	ldi	r22, 0x0E	; 14
    14ac:	70 e0       	ldi	r23, 0x00	; 0
    14ae:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1c>
    14b2:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1d>
    14b6:	09 95       	icall
    14b8:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
    14bc:	ff 91       	pop	r31
    14be:	ef 91       	pop	r30
    14c0:	bf 91       	pop	r27
    14c2:	af 91       	pop	r26
    14c4:	9f 91       	pop	r25
    14c6:	8f 91       	pop	r24
    14c8:	7f 91       	pop	r23
    14ca:	6f 91       	pop	r22
    14cc:	5f 91       	pop	r21
    14ce:	4f 91       	pop	r20
    14d0:	3f 91       	pop	r19
    14d2:	2f 91       	pop	r18
    14d4:	0f 90       	pop	r0
    14d6:	0f be       	out	0x3f, r0	; 63
    14d8:	0f 90       	pop	r0
    14da:	1f 90       	pop	r1
    14dc:	18 95       	reti

000014de <__vector_20>:
    14de:	1f 92       	push	r1
    14e0:	0f 92       	push	r0
    14e2:	0f b6       	in	r0, 0x3f	; 63
    14e4:	0f 92       	push	r0
    14e6:	11 24       	eor	r1, r1
    14e8:	2f 93       	push	r18
    14ea:	3f 93       	push	r19
    14ec:	4f 93       	push	r20
    14ee:	5f 93       	push	r21
    14f0:	6f 93       	push	r22
    14f2:	7f 93       	push	r23
    14f4:	8f 93       	push	r24
    14f6:	9f 93       	push	r25
    14f8:	af 93       	push	r26
    14fa:	bf 93       	push	r27
    14fc:	ef 93       	push	r30
    14fe:	ff 93       	push	r31
    1500:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    1504:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1508:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    150c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1510:	c9 01       	movw	r24, r18
    1512:	03 2e       	mov	r0, r19
    1514:	00 0c       	add	r0, r0
    1516:	aa 0b       	sbc	r26, r26
    1518:	bb 0b       	sbc	r27, r27
    151a:	dc 01       	movw	r26, r24
    151c:	99 27       	eor	r25, r25
    151e:	88 27       	eor	r24, r24
    1520:	60 e0       	ldi	r22, 0x00	; 0
    1522:	70 e0       	ldi	r23, 0x00	; 0
    1524:	84 2b       	or	r24, r20
    1526:	95 2b       	or	r25, r21
    1528:	a6 2b       	or	r26, r22
    152a:	b7 2b       	or	r27, r23
    152c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1530:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    1534:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1538:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    153c:	b0 9b       	sbis	0x16, 0	; 22
    153e:	1b c0       	rjmp	.+54     	; 0x1576 <__vector_20+0x98>
    1540:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1544:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1548:	c9 01       	movw	r24, r18
    154a:	01 96       	adiw	r24, 0x01	; 1
    154c:	09 2e       	mov	r0, r25
    154e:	00 0c       	add	r0, r0
    1550:	aa 0b       	sbc	r26, r26
    1552:	bb 0b       	sbc	r27, r27
    1554:	dc 01       	movw	r26, r24
    1556:	99 27       	eor	r25, r25
    1558:	88 27       	eor	r24, r24
    155a:	60 e0       	ldi	r22, 0x00	; 0
    155c:	70 e0       	ldi	r23, 0x00	; 0
    155e:	84 2b       	or	r24, r20
    1560:	95 2b       	or	r25, r21
    1562:	a6 2b       	or	r26, r22
    1564:	b7 2b       	or	r27, r23
    1566:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    156a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    156e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1572:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1576:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1e>
    157a:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1f>
    157e:	30 97       	sbiw	r30, 0x00	; 0
    1580:	39 f0       	breq	.+14     	; 0x1590 <__vector_20+0xb2>
    1582:	6f e0       	ldi	r22, 0x0F	; 15
    1584:	70 e0       	ldi	r23, 0x00	; 0
    1586:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1e>
    158a:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1f>
    158e:	09 95       	icall
    1590:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
    1594:	ff 91       	pop	r31
    1596:	ef 91       	pop	r30
    1598:	bf 91       	pop	r27
    159a:	af 91       	pop	r26
    159c:	9f 91       	pop	r25
    159e:	8f 91       	pop	r24
    15a0:	7f 91       	pop	r23
    15a2:	6f 91       	pop	r22
    15a4:	5f 91       	pop	r21
    15a6:	4f 91       	pop	r20
    15a8:	3f 91       	pop	r19
    15aa:	2f 91       	pop	r18
    15ac:	0f 90       	pop	r0
    15ae:	0f be       	out	0x3f, r0	; 63
    15b0:	0f 90       	pop	r0
    15b2:	1f 90       	pop	r1
    15b4:	18 95       	reti

000015b6 <__vector_21>:
    15b6:	1f 92       	push	r1
    15b8:	0f 92       	push	r0
    15ba:	0f b6       	in	r0, 0x3f	; 63
    15bc:	0f 92       	push	r0
    15be:	11 24       	eor	r1, r1
    15c0:	2f 93       	push	r18
    15c2:	3f 93       	push	r19
    15c4:	4f 93       	push	r20
    15c6:	5f 93       	push	r21
    15c8:	6f 93       	push	r22
    15ca:	7f 93       	push	r23
    15cc:	8f 93       	push	r24
    15ce:	9f 93       	push	r25
    15d0:	af 93       	push	r26
    15d2:	bf 93       	push	r27
    15d4:	ef 93       	push	r30
    15d6:	ff 93       	push	r31
    15d8:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    15dc:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    15e0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15e4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15e8:	c9 01       	movw	r24, r18
    15ea:	03 2e       	mov	r0, r19
    15ec:	00 0c       	add	r0, r0
    15ee:	aa 0b       	sbc	r26, r26
    15f0:	bb 0b       	sbc	r27, r27
    15f2:	dc 01       	movw	r26, r24
    15f4:	99 27       	eor	r25, r25
    15f6:	88 27       	eor	r24, r24
    15f8:	60 e0       	ldi	r22, 0x00	; 0
    15fa:	70 e0       	ldi	r23, 0x00	; 0
    15fc:	84 2b       	or	r24, r20
    15fe:	95 2b       	or	r25, r21
    1600:	a6 2b       	or	r26, r22
    1602:	b7 2b       	or	r27, r23
    1604:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1608:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    160c:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1610:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1614:	b0 9b       	sbis	0x16, 0	; 22
    1616:	1b c0       	rjmp	.+54     	; 0x164e <__vector_21+0x98>
    1618:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    161c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1620:	c9 01       	movw	r24, r18
    1622:	01 96       	adiw	r24, 0x01	; 1
    1624:	09 2e       	mov	r0, r25
    1626:	00 0c       	add	r0, r0
    1628:	aa 0b       	sbc	r26, r26
    162a:	bb 0b       	sbc	r27, r27
    162c:	dc 01       	movw	r26, r24
    162e:	99 27       	eor	r25, r25
    1630:	88 27       	eor	r24, r24
    1632:	60 e0       	ldi	r22, 0x00	; 0
    1634:	70 e0       	ldi	r23, 0x00	; 0
    1636:	84 2b       	or	r24, r20
    1638:	95 2b       	or	r25, r21
    163a:	a6 2b       	or	r26, r22
    163c:	b7 2b       	or	r27, r23
    163e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1642:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    1646:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    164a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    164e:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x20>
    1652:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x21>
    1656:	30 97       	sbiw	r30, 0x00	; 0
    1658:	39 f0       	breq	.+14     	; 0x1668 <__vector_21+0xb2>
    165a:	60 e1       	ldi	r22, 0x10	; 16
    165c:	70 e0       	ldi	r23, 0x00	; 0
    165e:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x20>
    1662:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x21>
    1666:	09 95       	icall
    1668:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
    166c:	ff 91       	pop	r31
    166e:	ef 91       	pop	r30
    1670:	bf 91       	pop	r27
    1672:	af 91       	pop	r26
    1674:	9f 91       	pop	r25
    1676:	8f 91       	pop	r24
    1678:	7f 91       	pop	r23
    167a:	6f 91       	pop	r22
    167c:	5f 91       	pop	r21
    167e:	4f 91       	pop	r20
    1680:	3f 91       	pop	r19
    1682:	2f 91       	pop	r18
    1684:	0f 90       	pop	r0
    1686:	0f be       	out	0x3f, r0	; 63
    1688:	0f 90       	pop	r0
    168a:	1f 90       	pop	r1
    168c:	18 95       	reti

0000168e <__vector_22>:
    168e:	1f 92       	push	r1
    1690:	0f 92       	push	r0
    1692:	0f b6       	in	r0, 0x3f	; 63
    1694:	0f 92       	push	r0
    1696:	11 24       	eor	r1, r1
    1698:	2f 93       	push	r18
    169a:	3f 93       	push	r19
    169c:	4f 93       	push	r20
    169e:	5f 93       	push	r21
    16a0:	6f 93       	push	r22
    16a2:	7f 93       	push	r23
    16a4:	8f 93       	push	r24
    16a6:	9f 93       	push	r25
    16a8:	af 93       	push	r26
    16aa:	bf 93       	push	r27
    16ac:	ef 93       	push	r30
    16ae:	ff 93       	push	r31
    16b0:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    16b4:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    16b8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    16bc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    16c0:	c9 01       	movw	r24, r18
    16c2:	03 2e       	mov	r0, r19
    16c4:	00 0c       	add	r0, r0
    16c6:	aa 0b       	sbc	r26, r26
    16c8:	bb 0b       	sbc	r27, r27
    16ca:	dc 01       	movw	r26, r24
    16cc:	99 27       	eor	r25, r25
    16ce:	88 27       	eor	r24, r24
    16d0:	60 e0       	ldi	r22, 0x00	; 0
    16d2:	70 e0       	ldi	r23, 0x00	; 0
    16d4:	84 2b       	or	r24, r20
    16d6:	95 2b       	or	r25, r21
    16d8:	a6 2b       	or	r26, r22
    16da:	b7 2b       	or	r27, r23
    16dc:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    16e0:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    16e4:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    16e8:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    16ec:	b0 9b       	sbis	0x16, 0	; 22
    16ee:	1b c0       	rjmp	.+54     	; 0x1726 <__vector_22+0x98>
    16f0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    16f4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    16f8:	c9 01       	movw	r24, r18
    16fa:	01 96       	adiw	r24, 0x01	; 1
    16fc:	09 2e       	mov	r0, r25
    16fe:	00 0c       	add	r0, r0
    1700:	aa 0b       	sbc	r26, r26
    1702:	bb 0b       	sbc	r27, r27
    1704:	dc 01       	movw	r26, r24
    1706:	99 27       	eor	r25, r25
    1708:	88 27       	eor	r24, r24
    170a:	60 e0       	ldi	r22, 0x00	; 0
    170c:	70 e0       	ldi	r23, 0x00	; 0
    170e:	84 2b       	or	r24, r20
    1710:	95 2b       	or	r25, r21
    1712:	a6 2b       	or	r26, r22
    1714:	b7 2b       	or	r27, r23
    1716:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    171a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    171e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1722:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1726:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x22>
    172a:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x23>
    172e:	30 97       	sbiw	r30, 0x00	; 0
    1730:	39 f0       	breq	.+14     	; 0x1740 <__vector_22+0xb2>
    1732:	61 e1       	ldi	r22, 0x11	; 17
    1734:	70 e0       	ldi	r23, 0x00	; 0
    1736:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x22>
    173a:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x23>
    173e:	09 95       	icall
    1740:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
    1744:	ff 91       	pop	r31
    1746:	ef 91       	pop	r30
    1748:	bf 91       	pop	r27
    174a:	af 91       	pop	r26
    174c:	9f 91       	pop	r25
    174e:	8f 91       	pop	r24
    1750:	7f 91       	pop	r23
    1752:	6f 91       	pop	r22
    1754:	5f 91       	pop	r21
    1756:	4f 91       	pop	r20
    1758:	3f 91       	pop	r19
    175a:	2f 91       	pop	r18
    175c:	0f 90       	pop	r0
    175e:	0f be       	out	0x3f, r0	; 63
    1760:	0f 90       	pop	r0
    1762:	1f 90       	pop	r1
    1764:	18 95       	reti

00001766 <enqueueByDeadline>:
    1766:	ef 92       	push	r14
    1768:	ff 92       	push	r15
    176a:	0f 93       	push	r16
    176c:	1f 93       	push	r17
    176e:	cf 93       	push	r28
    1770:	df 93       	push	r29
    1772:	7b 01       	movw	r14, r22
    1774:	eb 01       	movw	r28, r22
    1776:	a8 81       	ld	r26, Y
    1778:	b9 81       	ldd	r27, Y+1	; 0x01
    177a:	10 97       	sbiw	r26, 0x00	; 0
    177c:	61 f1       	breq	.+88     	; 0x17d6 <enqueueByDeadline+0x70>
    177e:	fc 01       	movw	r30, r24
    1780:	06 81       	ldd	r16, Z+6	; 0x06
    1782:	17 81       	ldd	r17, Z+7	; 0x07
    1784:	20 85       	ldd	r18, Z+8	; 0x08
    1786:	31 85       	ldd	r19, Z+9	; 0x09
    1788:	16 96       	adiw	r26, 0x06	; 6
    178a:	4d 91       	ld	r20, X+
    178c:	5d 91       	ld	r21, X+
    178e:	6d 91       	ld	r22, X+
    1790:	7c 91       	ld	r23, X
    1792:	19 97       	sbiw	r26, 0x09	; 9
    1794:	04 17       	cp	r16, r20
    1796:	15 07       	cpc	r17, r21
    1798:	26 07       	cpc	r18, r22
    179a:	37 07       	cpc	r19, r23
    179c:	14 f4       	brge	.+4      	; 0x17a2 <enqueueByDeadline+0x3c>
    179e:	1b c0       	rjmp	.+54     	; 0x17d6 <enqueueByDeadline+0x70>
    17a0:	df 01       	movw	r26, r30
    17a2:	ed 91       	ld	r30, X+
    17a4:	fc 91       	ld	r31, X
    17a6:	11 97       	sbiw	r26, 0x01	; 1
    17a8:	30 97       	sbiw	r30, 0x00	; 0
    17aa:	49 f0       	breq	.+18     	; 0x17be <enqueueByDeadline+0x58>
    17ac:	46 81       	ldd	r20, Z+6	; 0x06
    17ae:	57 81       	ldd	r21, Z+7	; 0x07
    17b0:	60 85       	ldd	r22, Z+8	; 0x08
    17b2:	71 85       	ldd	r23, Z+9	; 0x09
    17b4:	04 17       	cp	r16, r20
    17b6:	15 07       	cpc	r17, r21
    17b8:	26 07       	cpc	r18, r22
    17ba:	37 07       	cpc	r19, r23
    17bc:	8c f7       	brge	.-30     	; 0x17a0 <enqueueByDeadline+0x3a>
    17be:	ec 01       	movw	r28, r24
    17c0:	f9 83       	std	Y+1, r31	; 0x01
    17c2:	e8 83       	st	Y, r30
    17c4:	10 97       	sbiw	r26, 0x00	; 0
    17c6:	21 f4       	brne	.+8      	; 0x17d0 <enqueueByDeadline+0x6a>
    17c8:	f7 01       	movw	r30, r14
    17ca:	91 83       	std	Z+1, r25	; 0x01
    17cc:	80 83       	st	Z, r24
    17ce:	07 c0       	rjmp	.+14     	; 0x17de <enqueueByDeadline+0x78>
    17d0:	8d 93       	st	X+, r24
    17d2:	9c 93       	st	X, r25
    17d4:	04 c0       	rjmp	.+8      	; 0x17de <enqueueByDeadline+0x78>
    17d6:	ec 01       	movw	r28, r24
    17d8:	b9 83       	std	Y+1, r27	; 0x01
    17da:	a8 83       	st	Y, r26
    17dc:	f5 cf       	rjmp	.-22     	; 0x17c8 <enqueueByDeadline+0x62>
    17de:	df 91       	pop	r29
    17e0:	cf 91       	pop	r28
    17e2:	1f 91       	pop	r17
    17e4:	0f 91       	pop	r16
    17e6:	ff 90       	pop	r15
    17e8:	ef 90       	pop	r14
    17ea:	08 95       	ret

000017ec <enqueueByBaseline>:
    17ec:	ef 92       	push	r14
    17ee:	ff 92       	push	r15
    17f0:	0f 93       	push	r16
    17f2:	1f 93       	push	r17
    17f4:	cf 93       	push	r28
    17f6:	df 93       	push	r29
    17f8:	7b 01       	movw	r14, r22
    17fa:	eb 01       	movw	r28, r22
    17fc:	a8 81       	ld	r26, Y
    17fe:	b9 81       	ldd	r27, Y+1	; 0x01
    1800:	10 97       	sbiw	r26, 0x00	; 0
    1802:	61 f1       	breq	.+88     	; 0x185c <enqueueByBaseline+0x70>
    1804:	fc 01       	movw	r30, r24
    1806:	02 81       	ldd	r16, Z+2	; 0x02
    1808:	13 81       	ldd	r17, Z+3	; 0x03
    180a:	24 81       	ldd	r18, Z+4	; 0x04
    180c:	35 81       	ldd	r19, Z+5	; 0x05
    180e:	12 96       	adiw	r26, 0x02	; 2
    1810:	4d 91       	ld	r20, X+
    1812:	5d 91       	ld	r21, X+
    1814:	6d 91       	ld	r22, X+
    1816:	7c 91       	ld	r23, X
    1818:	15 97       	sbiw	r26, 0x05	; 5
    181a:	04 17       	cp	r16, r20
    181c:	15 07       	cpc	r17, r21
    181e:	26 07       	cpc	r18, r22
    1820:	37 07       	cpc	r19, r23
    1822:	14 f4       	brge	.+4      	; 0x1828 <enqueueByBaseline+0x3c>
    1824:	1b c0       	rjmp	.+54     	; 0x185c <enqueueByBaseline+0x70>
    1826:	df 01       	movw	r26, r30
    1828:	ed 91       	ld	r30, X+
    182a:	fc 91       	ld	r31, X
    182c:	11 97       	sbiw	r26, 0x01	; 1
    182e:	30 97       	sbiw	r30, 0x00	; 0
    1830:	49 f0       	breq	.+18     	; 0x1844 <enqueueByBaseline+0x58>
    1832:	42 81       	ldd	r20, Z+2	; 0x02
    1834:	53 81       	ldd	r21, Z+3	; 0x03
    1836:	64 81       	ldd	r22, Z+4	; 0x04
    1838:	75 81       	ldd	r23, Z+5	; 0x05
    183a:	04 17       	cp	r16, r20
    183c:	15 07       	cpc	r17, r21
    183e:	26 07       	cpc	r18, r22
    1840:	37 07       	cpc	r19, r23
    1842:	8c f7       	brge	.-30     	; 0x1826 <enqueueByBaseline+0x3a>
    1844:	ec 01       	movw	r28, r24
    1846:	f9 83       	std	Y+1, r31	; 0x01
    1848:	e8 83       	st	Y, r30
    184a:	10 97       	sbiw	r26, 0x00	; 0
    184c:	21 f4       	brne	.+8      	; 0x1856 <enqueueByBaseline+0x6a>
    184e:	f7 01       	movw	r30, r14
    1850:	91 83       	std	Z+1, r25	; 0x01
    1852:	80 83       	st	Z, r24
    1854:	07 c0       	rjmp	.+14     	; 0x1864 <enqueueByBaseline+0x78>
    1856:	8d 93       	st	X+, r24
    1858:	9c 93       	st	X, r25
    185a:	04 c0       	rjmp	.+8      	; 0x1864 <enqueueByBaseline+0x78>
    185c:	ec 01       	movw	r28, r24
    185e:	b9 83       	std	Y+1, r27	; 0x01
    1860:	a8 83       	st	Y, r26
    1862:	f5 cf       	rjmp	.-22     	; 0x184e <enqueueByBaseline+0x62>
    1864:	df 91       	pop	r29
    1866:	cf 91       	pop	r28
    1868:	1f 91       	pop	r17
    186a:	0f 91       	pop	r16
    186c:	ff 90       	pop	r15
    186e:	ef 90       	pop	r14
    1870:	08 95       	ret

00001872 <dequeue>:
    1872:	dc 01       	movw	r26, r24
    1874:	ed 91       	ld	r30, X+
    1876:	fc 91       	ld	r31, X
    1878:	11 97       	sbiw	r26, 0x01	; 1
    187a:	30 97       	sbiw	r30, 0x00	; 0
    187c:	59 f4       	brne	.+22     	; 0x1894 <dequeue+0x22>
    187e:	8f ef       	ldi	r24, 0xFF	; 255
    1880:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    1884:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    1888:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    188c:	81 e0       	ldi	r24, 0x01	; 1
    188e:	83 bf       	out	0x33, r24	; 51
    1890:	88 95       	sleep
    1892:	fd cf       	rjmp	.-6      	; 0x188e <dequeue+0x1c>
    1894:	20 81       	ld	r18, Z
    1896:	31 81       	ldd	r19, Z+1	; 0x01
    1898:	2d 93       	st	X+, r18
    189a:	3c 93       	st	X, r19
    189c:	cf 01       	movw	r24, r30
    189e:	08 95       	ret

000018a0 <__vector_9>:
    18a0:	1f 92       	push	r1
    18a2:	0f 92       	push	r0
    18a4:	0f b6       	in	r0, 0x3f	; 63
    18a6:	0f 92       	push	r0
    18a8:	11 24       	eor	r1, r1
    18aa:	2f 93       	push	r18
    18ac:	3f 93       	push	r19
    18ae:	4f 93       	push	r20
    18b0:	5f 93       	push	r21
    18b2:	6f 93       	push	r22
    18b4:	7f 93       	push	r23
    18b6:	8f 93       	push	r24
    18b8:	9f 93       	push	r25
    18ba:	ef 93       	push	r30
    18bc:	ff 93       	push	r31
    18be:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <overflows>
    18c2:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <overflows+0x1>
    18c6:	01 96       	adiw	r24, 0x01	; 1
    18c8:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <overflows+0x1>
    18cc:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <overflows>
    18d0:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <timerQ>
    18d4:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <timerQ+0x1>
    18d8:	30 97       	sbiw	r30, 0x00	; 0
    18da:	01 f1       	breq	.+64     	; 0x191c <__vector_9+0x7c>
    18dc:	42 81       	ldd	r20, Z+2	; 0x02
    18de:	53 81       	ldd	r21, Z+3	; 0x03
    18e0:	64 81       	ldd	r22, Z+4	; 0x04
    18e2:	75 81       	ldd	r23, Z+5	; 0x05
    18e4:	86 17       	cp	r24, r22
    18e6:	97 07       	cpc	r25, r23
    18e8:	c9 f4       	brne	.+50     	; 0x191c <__vector_9+0x7c>
    18ea:	ca 01       	movw	r24, r20
    18ec:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    18f0:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    18f4:	42 1b       	sub	r20, r18
    18f6:	53 0b       	sbc	r21, r19
    18f8:	41 30       	cpi	r20, 0x01	; 1
    18fa:	51 05       	cpc	r21, r1
    18fc:	29 f4       	brne	.+10     	; 0x1908 <__vector_9+0x68>
    18fe:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1902:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1906:	01 96       	adiw	r24, 0x01	; 1
    1908:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    190c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1910:	ef e6       	ldi	r30, 0x6F	; 111
    1912:	f0 e0       	ldi	r31, 0x00	; 0
    1914:	80 81       	ld	r24, Z
    1916:	82 60       	ori	r24, 0x02	; 2
    1918:	80 83       	st	Z, r24
    191a:	05 c0       	rjmp	.+10     	; 0x1926 <__vector_9+0x86>
    191c:	ef e6       	ldi	r30, 0x6F	; 111
    191e:	f0 e0       	ldi	r31, 0x00	; 0
    1920:	80 81       	ld	r24, Z
    1922:	8d 7f       	andi	r24, 0xFD	; 253
    1924:	80 83       	st	Z, r24
    1926:	ff 91       	pop	r31
    1928:	ef 91       	pop	r30
    192a:	9f 91       	pop	r25
    192c:	8f 91       	pop	r24
    192e:	7f 91       	pop	r23
    1930:	6f 91       	pop	r22
    1932:	5f 91       	pop	r21
    1934:	4f 91       	pop	r20
    1936:	3f 91       	pop	r19
    1938:	2f 91       	pop	r18
    193a:	0f 90       	pop	r0
    193c:	0f be       	out	0x3f, r0	; 63
    193e:	0f 90       	pop	r0
    1940:	1f 90       	pop	r1
    1942:	18 95       	reti

00001944 <__vector_7>:
    1944:	1f 92       	push	r1
    1946:	0f 92       	push	r0
    1948:	0f b6       	in	r0, 0x3f	; 63
    194a:	0f 92       	push	r0
    194c:	11 24       	eor	r1, r1
    194e:	cf 92       	push	r12
    1950:	df 92       	push	r13
    1952:	ef 92       	push	r14
    1954:	ff 92       	push	r15
    1956:	2f 93       	push	r18
    1958:	3f 93       	push	r19
    195a:	4f 93       	push	r20
    195c:	5f 93       	push	r21
    195e:	6f 93       	push	r22
    1960:	7f 93       	push	r23
    1962:	8f 93       	push	r24
    1964:	9f 93       	push	r25
    1966:	af 93       	push	r26
    1968:	bf 93       	push	r27
    196a:	ef 93       	push	r30
    196c:	ff 93       	push	r31
    196e:	c0 90 36 01 	lds	r12, 0x0136	; 0x800136 <overflows>
    1972:	d0 90 37 01 	lds	r13, 0x0137	; 0x800137 <overflows+0x1>
    1976:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    197a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    197e:	b0 99       	sbic	0x16, 0	; 22
    1980:	0f c0       	rjmp	.+30     	; 0x19a0 <__vector_7+0x5c>
    1982:	0d 2c       	mov	r0, r13
    1984:	00 0c       	add	r0, r0
    1986:	ee 08       	sbc	r14, r14
    1988:	ff 08       	sbc	r15, r15
    198a:	d6 01       	movw	r26, r12
    198c:	99 27       	eor	r25, r25
    198e:	88 27       	eor	r24, r24
    1990:	69 01       	movw	r12, r18
    1992:	e1 2c       	mov	r14, r1
    1994:	f1 2c       	mov	r15, r1
    1996:	c8 2a       	or	r12, r24
    1998:	d9 2a       	or	r13, r25
    199a:	ea 2a       	or	r14, r26
    199c:	fb 2a       	or	r15, r27
    199e:	15 c0       	rjmp	.+42     	; 0x19ca <__vector_7+0x86>
    19a0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    19a4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    19a8:	8f ef       	ldi	r24, 0xFF	; 255
    19aa:	c8 1a       	sub	r12, r24
    19ac:	d8 0a       	sbc	r13, r24
    19ae:	0d 2c       	mov	r0, r13
    19b0:	00 0c       	add	r0, r0
    19b2:	ee 08       	sbc	r14, r14
    19b4:	ff 08       	sbc	r15, r15
    19b6:	d6 01       	movw	r26, r12
    19b8:	99 27       	eor	r25, r25
    19ba:	88 27       	eor	r24, r24
    19bc:	69 01       	movw	r12, r18
    19be:	e1 2c       	mov	r14, r1
    19c0:	f1 2c       	mov	r15, r1
    19c2:	c8 2a       	or	r12, r24
    19c4:	d9 2a       	or	r13, r25
    19c6:	ea 2a       	or	r14, r26
    19c8:	fb 2a       	or	r15, r27
    19ca:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <timerQ>
    19ce:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <timerQ+0x1>
    19d2:	30 97       	sbiw	r30, 0x00	; 0
    19d4:	09 f4       	brne	.+2      	; 0x19d8 <__vector_7+0x94>
    19d6:	42 c0       	rjmp	.+132    	; 0x1a5c <__vector_7+0x118>
    19d8:	82 81       	ldd	r24, Z+2	; 0x02
    19da:	93 81       	ldd	r25, Z+3	; 0x03
    19dc:	a4 81       	ldd	r26, Z+4	; 0x04
    19de:	b5 81       	ldd	r27, Z+5	; 0x05
    19e0:	8c 19       	sub	r24, r12
    19e2:	9d 09       	sbc	r25, r13
    19e4:	ae 09       	sbc	r26, r14
    19e6:	bf 09       	sbc	r27, r15
    19e8:	18 16       	cp	r1, r24
    19ea:	19 06       	cpc	r1, r25
    19ec:	1a 06       	cpc	r1, r26
    19ee:	1b 06       	cpc	r1, r27
    19f0:	ec f1       	brlt	.+122    	; 0x1a6c <__vector_7+0x128>
    19f2:	8c e3       	ldi	r24, 0x3C	; 60
    19f4:	91 e0       	ldi	r25, 0x01	; 1
    19f6:	0e 94 39 0c 	call	0x1872	; 0x1872 <dequeue>
    19fa:	6e e3       	ldi	r22, 0x3E	; 62
    19fc:	71 e0       	ldi	r23, 0x01	; 1
    19fe:	0e 94 b3 0b 	call	0x1766	; 0x1766 <enqueueByDeadline>
    1a02:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <timerQ>
    1a06:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <timerQ+0x1>
    1a0a:	30 97       	sbiw	r30, 0x00	; 0
    1a0c:	39 f1       	breq	.+78     	; 0x1a5c <__vector_7+0x118>
    1a0e:	82 81       	ldd	r24, Z+2	; 0x02
    1a10:	93 81       	ldd	r25, Z+3	; 0x03
    1a12:	a4 81       	ldd	r26, Z+4	; 0x04
    1a14:	b5 81       	ldd	r27, Z+5	; 0x05
    1a16:	8c 19       	sub	r24, r12
    1a18:	9d 09       	sbc	r25, r13
    1a1a:	ae 09       	sbc	r26, r14
    1a1c:	bf 09       	sbc	r27, r15
    1a1e:	18 16       	cp	r1, r24
    1a20:	19 06       	cpc	r1, r25
    1a22:	1a 06       	cpc	r1, r26
    1a24:	1b 06       	cpc	r1, r27
    1a26:	2c f7       	brge	.-54     	; 0x19f2 <__vector_7+0xae>
    1a28:	21 c0       	rjmp	.+66     	; 0x1a6c <__vector_7+0x128>
    1a2a:	9c 01       	movw	r18, r24
    1a2c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a30:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a34:	84 1b       	sub	r24, r20
    1a36:	95 0b       	sbc	r25, r21
    1a38:	01 97       	sbiw	r24, 0x01	; 1
    1a3a:	31 f4       	brne	.+12     	; 0x1a48 <__vector_7+0x104>
    1a3c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a40:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a44:	2f 5f       	subi	r18, 0xFF	; 255
    1a46:	3f 4f       	sbci	r19, 0xFF	; 255
    1a48:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1a4c:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1a50:	ef e6       	ldi	r30, 0x6F	; 111
    1a52:	f0 e0       	ldi	r31, 0x00	; 0
    1a54:	80 81       	ld	r24, Z
    1a56:	82 60       	ori	r24, 0x02	; 2
    1a58:	80 83       	st	Z, r24
    1a5a:	05 c0       	rjmp	.+10     	; 0x1a66 <__vector_7+0x122>
    1a5c:	ef e6       	ldi	r30, 0x6F	; 111
    1a5e:	f0 e0       	ldi	r31, 0x00	; 0
    1a60:	80 81       	ld	r24, Z
    1a62:	8d 7f       	andi	r24, 0xFD	; 253
    1a64:	80 83       	st	Z, r24
    1a66:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
    1a6a:	0c c0       	rjmp	.+24     	; 0x1a84 <__vector_7+0x140>
    1a6c:	82 81       	ldd	r24, Z+2	; 0x02
    1a6e:	93 81       	ldd	r25, Z+3	; 0x03
    1a70:	a4 81       	ldd	r26, Z+4	; 0x04
    1a72:	b5 81       	ldd	r27, Z+5	; 0x05
    1a74:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    1a78:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1a7c:	2a 17       	cp	r18, r26
    1a7e:	3b 07       	cpc	r19, r27
    1a80:	69 f7       	brne	.-38     	; 0x1a5c <__vector_7+0x118>
    1a82:	d3 cf       	rjmp	.-90     	; 0x1a2a <__vector_7+0xe6>
    1a84:	ff 91       	pop	r31
    1a86:	ef 91       	pop	r30
    1a88:	bf 91       	pop	r27
    1a8a:	af 91       	pop	r26
    1a8c:	9f 91       	pop	r25
    1a8e:	8f 91       	pop	r24
    1a90:	7f 91       	pop	r23
    1a92:	6f 91       	pop	r22
    1a94:	5f 91       	pop	r21
    1a96:	4f 91       	pop	r20
    1a98:	3f 91       	pop	r19
    1a9a:	2f 91       	pop	r18
    1a9c:	ff 90       	pop	r15
    1a9e:	ef 90       	pop	r14
    1aa0:	df 90       	pop	r13
    1aa2:	cf 90       	pop	r12
    1aa4:	0f 90       	pop	r0
    1aa6:	0f be       	out	0x3f, r0	; 63
    1aa8:	0f 90       	pop	r0
    1aaa:	1f 90       	pop	r1
    1aac:	18 95       	reti

00001aae <async>:
    1aae:	3f 92       	push	r3
    1ab0:	4f 92       	push	r4
    1ab2:	5f 92       	push	r5
    1ab4:	6f 92       	push	r6
    1ab6:	7f 92       	push	r7
    1ab8:	8f 92       	push	r8
    1aba:	9f 92       	push	r9
    1abc:	af 92       	push	r10
    1abe:	bf 92       	push	r11
    1ac0:	cf 92       	push	r12
    1ac2:	df 92       	push	r13
    1ac4:	ef 92       	push	r14
    1ac6:	ff 92       	push	r15
    1ac8:	0f 93       	push	r16
    1aca:	1f 93       	push	r17
    1acc:	cf 93       	push	r28
    1ace:	df 93       	push	r29
    1ad0:	2b 01       	movw	r4, r22
    1ad2:	3c 01       	movw	r6, r24
    1ad4:	49 01       	movw	r8, r18
    1ad6:	5a 01       	movw	r10, r20
    1ad8:	8f b7       	in	r24, 0x3f	; 63
    1ada:	80 78       	andi	r24, 0x80	; 128
    1adc:	38 2e       	mov	r3, r24
    1ade:	f8 94       	cli
    1ae0:	8c e2       	ldi	r24, 0x2C	; 44
    1ae2:	91 e0       	ldi	r25, 0x01	; 1
    1ae4:	0e 94 39 0c 	call	0x1872	; 0x1872 <dequeue>
    1ae8:	ec 01       	movw	r28, r24
    1aea:	1b 87       	std	Y+11, r17	; 0x0b
    1aec:	0a 87       	std	Y+10, r16	; 0x0a
    1aee:	fd 86       	std	Y+13, r15	; 0x0d
    1af0:	ec 86       	std	Y+12, r14	; 0x0c
    1af2:	df 86       	std	Y+15, r13	; 0x0f
    1af4:	ce 86       	std	Y+14, r12	; 0x0e
    1af6:	33 20       	and	r3, r3
    1af8:	61 f0       	breq	.+24     	; 0x1b12 <async+0x64>
    1afa:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <current>
    1afe:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <current+0x1>
    1b02:	02 80       	ldd	r0, Z+2	; 0x02
    1b04:	f3 81       	ldd	r31, Z+3	; 0x03
    1b06:	e0 2d       	mov	r30, r0
    1b08:	82 81       	ldd	r24, Z+2	; 0x02
    1b0a:	93 81       	ldd	r25, Z+3	; 0x03
    1b0c:	a4 81       	ldd	r26, Z+4	; 0x04
    1b0e:	b5 81       	ldd	r27, Z+5	; 0x05
    1b10:	08 c0       	rjmp	.+16     	; 0x1b22 <async+0x74>
    1b12:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <timestamp>
    1b16:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <timestamp+0x1>
    1b1a:	a0 91 3a 01 	lds	r26, 0x013A	; 0x80013a <timestamp+0x2>
    1b1e:	b0 91 3b 01 	lds	r27, 0x013B	; 0x80013b <timestamp+0x3>
    1b22:	48 0e       	add	r4, r24
    1b24:	59 1e       	adc	r5, r25
    1b26:	6a 1e       	adc	r6, r26
    1b28:	7b 1e       	adc	r7, r27
    1b2a:	4a 82       	std	Y+2, r4	; 0x02
    1b2c:	5b 82       	std	Y+3, r5	; 0x03
    1b2e:	6c 82       	std	Y+4, r6	; 0x04
    1b30:	7d 82       	std	Y+5, r7	; 0x05
    1b32:	18 14       	cp	r1, r8
    1b34:	19 04       	cpc	r1, r9
    1b36:	1a 04       	cpc	r1, r10
    1b38:	1b 04       	cpc	r1, r11
    1b3a:	44 f0       	brlt	.+16     	; 0x1b4c <async+0x9e>
    1b3c:	0f 2e       	mov	r0, r31
    1b3e:	88 24       	eor	r8, r8
    1b40:	8a 94       	dec	r8
    1b42:	98 2c       	mov	r9, r8
    1b44:	a8 2c       	mov	r10, r8
    1b46:	ff e7       	ldi	r31, 0x7F	; 127
    1b48:	bf 2e       	mov	r11, r31
    1b4a:	f0 2d       	mov	r31, r0
    1b4c:	84 0c       	add	r8, r4
    1b4e:	95 1c       	adc	r9, r5
    1b50:	a6 1c       	adc	r10, r6
    1b52:	b7 1c       	adc	r11, r7
    1b54:	8e 82       	std	Y+6, r8	; 0x06
    1b56:	9f 82       	std	Y+7, r9	; 0x07
    1b58:	a8 86       	std	Y+8, r10	; 0x08
    1b5a:	b9 86       	std	Y+9, r11	; 0x09
    1b5c:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <overflows>
    1b60:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <overflows+0x1>
    1b64:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b68:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b6c:	b0 99       	sbic	0x16, 0	; 22
    1b6e:	0e c0       	rjmp	.+28     	; 0x1b8c <async+0xde>
    1b70:	09 2e       	mov	r0, r25
    1b72:	00 0c       	add	r0, r0
    1b74:	aa 0b       	sbc	r26, r26
    1b76:	bb 0b       	sbc	r27, r27
    1b78:	dc 01       	movw	r26, r24
    1b7a:	99 27       	eor	r25, r25
    1b7c:	88 27       	eor	r24, r24
    1b7e:	60 e0       	ldi	r22, 0x00	; 0
    1b80:	70 e0       	ldi	r23, 0x00	; 0
    1b82:	84 2b       	or	r24, r20
    1b84:	95 2b       	or	r25, r21
    1b86:	a6 2b       	or	r26, r22
    1b88:	b7 2b       	or	r27, r23
    1b8a:	13 c0       	rjmp	.+38     	; 0x1bb2 <async+0x104>
    1b8c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b90:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b94:	01 96       	adiw	r24, 0x01	; 1
    1b96:	09 2e       	mov	r0, r25
    1b98:	00 0c       	add	r0, r0
    1b9a:	aa 0b       	sbc	r26, r26
    1b9c:	bb 0b       	sbc	r27, r27
    1b9e:	dc 01       	movw	r26, r24
    1ba0:	99 27       	eor	r25, r25
    1ba2:	88 27       	eor	r24, r24
    1ba4:	a9 01       	movw	r20, r18
    1ba6:	60 e0       	ldi	r22, 0x00	; 0
    1ba8:	70 e0       	ldi	r23, 0x00	; 0
    1baa:	84 2b       	or	r24, r20
    1bac:	95 2b       	or	r25, r21
    1bae:	a6 2b       	or	r26, r22
    1bb0:	b7 2b       	or	r27, r23
    1bb2:	48 1a       	sub	r4, r24
    1bb4:	59 0a       	sbc	r5, r25
    1bb6:	6a 0a       	sbc	r6, r26
    1bb8:	7b 0a       	sbc	r7, r27
    1bba:	14 14       	cp	r1, r4
    1bbc:	15 04       	cpc	r1, r5
    1bbe:	16 04       	cpc	r1, r6
    1bc0:	17 04       	cpc	r1, r7
    1bc2:	ac f5       	brge	.+106    	; 0x1c2e <async+0x180>
    1bc4:	6c e3       	ldi	r22, 0x3C	; 60
    1bc6:	71 e0       	ldi	r23, 0x01	; 1
    1bc8:	ce 01       	movw	r24, r28
    1bca:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <enqueueByBaseline>
    1bce:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <timerQ>
    1bd2:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <timerQ+0x1>
    1bd6:	30 97       	sbiw	r30, 0x00	; 0
    1bd8:	21 f1       	breq	.+72     	; 0x1c22 <async+0x174>
    1bda:	82 81       	ldd	r24, Z+2	; 0x02
    1bdc:	93 81       	ldd	r25, Z+3	; 0x03
    1bde:	a4 81       	ldd	r26, Z+4	; 0x04
    1be0:	b5 81       	ldd	r27, Z+5	; 0x05
    1be2:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    1be6:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1bea:	2a 17       	cp	r18, r26
    1bec:	3b 07       	cpc	r19, r27
    1bee:	c9 f4       	brne	.+50     	; 0x1c22 <async+0x174>
    1bf0:	9c 01       	movw	r18, r24
    1bf2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1bf6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1bfa:	84 1b       	sub	r24, r20
    1bfc:	95 0b       	sbc	r25, r21
    1bfe:	01 97       	sbiw	r24, 0x01	; 1
    1c00:	31 f4       	brne	.+12     	; 0x1c0e <async+0x160>
    1c02:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c06:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c0a:	2f 5f       	subi	r18, 0xFF	; 255
    1c0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c0e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1c12:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1c16:	ef e6       	ldi	r30, 0x6F	; 111
    1c18:	f0 e0       	ldi	r31, 0x00	; 0
    1c1a:	80 81       	ld	r24, Z
    1c1c:	82 60       	ori	r24, 0x02	; 2
    1c1e:	80 83       	st	Z, r24
    1c20:	41 c0       	rjmp	.+130    	; 0x1ca4 <async+0x1f6>
    1c22:	ef e6       	ldi	r30, 0x6F	; 111
    1c24:	f0 e0       	ldi	r31, 0x00	; 0
    1c26:	80 81       	ld	r24, Z
    1c28:	8d 7f       	andi	r24, 0xFD	; 253
    1c2a:	80 83       	st	Z, r24
    1c2c:	3b c0       	rjmp	.+118    	; 0x1ca4 <async+0x1f6>
    1c2e:	6e e3       	ldi	r22, 0x3E	; 62
    1c30:	71 e0       	ldi	r23, 0x01	; 1
    1c32:	ce 01       	movw	r24, r28
    1c34:	0e 94 b3 0b 	call	0x1766	; 0x1766 <enqueueByDeadline>
    1c38:	33 20       	and	r3, r3
    1c3a:	b9 f1       	breq	.+110    	; 0x1caa <async+0x1fc>
    1c3c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <threadPool>
    1c40:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <threadPool+0x1>
    1c44:	00 97       	sbiw	r24, 0x00	; 0
    1c46:	81 f1       	breq	.+96     	; 0x1ca8 <async+0x1fa>
    1c48:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <activeStack>
    1c4c:	f0 91 29 01 	lds	r31, 0x0129	; 0x800129 <activeStack+0x1>
    1c50:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <msgQ>
    1c54:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <msgQ+0x1>
    1c58:	02 81       	ldd	r16, Z+2	; 0x02
    1c5a:	13 81       	ldd	r17, Z+3	; 0x03
    1c5c:	d9 01       	movw	r26, r18
    1c5e:	16 96       	adiw	r26, 0x06	; 6
    1c60:	4d 91       	ld	r20, X+
    1c62:	5d 91       	ld	r21, X+
    1c64:	6d 91       	ld	r22, X+
    1c66:	7c 91       	ld	r23, X
    1c68:	19 97       	sbiw	r26, 0x09	; 9
    1c6a:	d8 01       	movw	r26, r16
    1c6c:	16 96       	adiw	r26, 0x06	; 6
    1c6e:	0d 91       	ld	r16, X+
    1c70:	1d 91       	ld	r17, X+
    1c72:	2d 91       	ld	r18, X+
    1c74:	3c 91       	ld	r19, X
    1c76:	19 97       	sbiw	r26, 0x09	; 9
    1c78:	40 1b       	sub	r20, r16
    1c7a:	51 0b       	sbc	r21, r17
    1c7c:	62 0b       	sbc	r22, r18
    1c7e:	73 0b       	sbc	r23, r19
    1c80:	9a f4       	brpl	.+38     	; 0x1ca8 <async+0x1fa>
    1c82:	dc 01       	movw	r26, r24
    1c84:	2d 91       	ld	r18, X+
    1c86:	3c 91       	ld	r19, X
    1c88:	11 97       	sbiw	r26, 0x01	; 1
    1c8a:	30 93 2b 01 	sts	0x012B, r19	; 0x80012b <threadPool+0x1>
    1c8e:	20 93 2a 01 	sts	0x012A, r18	; 0x80012a <threadPool>
    1c92:	ed 93       	st	X+, r30
    1c94:	fc 93       	st	X, r31
    1c96:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <activeStack+0x1>
    1c9a:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <activeStack>
    1c9e:	0e 94 c0 03 	call	0x780	; 0x780 <dispatch>
    1ca2:	02 c0       	rjmp	.+4      	; 0x1ca8 <async+0x1fa>
    1ca4:	33 20       	and	r3, r3
    1ca6:	09 f0       	breq	.+2      	; 0x1caa <async+0x1fc>
    1ca8:	78 94       	sei
    1caa:	ce 01       	movw	r24, r28
    1cac:	df 91       	pop	r29
    1cae:	cf 91       	pop	r28
    1cb0:	1f 91       	pop	r17
    1cb2:	0f 91       	pop	r16
    1cb4:	ff 90       	pop	r15
    1cb6:	ef 90       	pop	r14
    1cb8:	df 90       	pop	r13
    1cba:	cf 90       	pop	r12
    1cbc:	bf 90       	pop	r11
    1cbe:	af 90       	pop	r10
    1cc0:	9f 90       	pop	r9
    1cc2:	8f 90       	pop	r8
    1cc4:	7f 90       	pop	r7
    1cc6:	6f 90       	pop	r6
    1cc8:	5f 90       	pop	r5
    1cca:	4f 90       	pop	r4
    1ccc:	3f 90       	pop	r3
    1cce:	08 95       	ret

00001cd0 <sync>:
    1cd0:	af 92       	push	r10
    1cd2:	bf 92       	push	r11
    1cd4:	cf 92       	push	r12
    1cd6:	df 92       	push	r13
    1cd8:	ff 92       	push	r15
    1cda:	0f 93       	push	r16
    1cdc:	1f 93       	push	r17
    1cde:	cf 93       	push	r28
    1ce0:	df 93       	push	r29
    1ce2:	8c 01       	movw	r16, r24
    1ce4:	6b 01       	movw	r12, r22
    1ce6:	5a 01       	movw	r10, r20
    1ce8:	8f b7       	in	r24, 0x3f	; 63
    1cea:	80 78       	andi	r24, 0x80	; 128
    1cec:	f8 2e       	mov	r15, r24
    1cee:	f8 94       	cli
    1cf0:	d8 01       	movw	r26, r16
    1cf2:	cd 91       	ld	r28, X+
    1cf4:	dc 91       	ld	r29, X
    1cf6:	20 97       	sbiw	r28, 0x00	; 0
    1cf8:	71 f1       	breq	.+92     	; 0x1d56 <sync+0x86>
    1cfa:	ac 81       	ldd	r26, Y+4	; 0x04
    1cfc:	bd 81       	ldd	r27, Y+5	; 0x05
    1cfe:	10 97       	sbiw	r26, 0x00	; 0
    1d00:	31 f0       	breq	.+12     	; 0x1d0e <sync+0x3e>
    1d02:	cd 91       	ld	r28, X+
    1d04:	dc 91       	ld	r29, X
    1d06:	ac 81       	ldd	r26, Y+4	; 0x04
    1d08:	bd 81       	ldd	r27, Y+5	; 0x05
    1d0a:	10 97       	sbiw	r26, 0x00	; 0
    1d0c:	d1 f7       	brne	.-12     	; 0x1d02 <sync+0x32>
    1d0e:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <current>
    1d12:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <current+0x1>
    1d16:	ce 17       	cp	r28, r30
    1d18:	df 07       	cpc	r29, r31
    1d1a:	21 f0       	breq	.+8      	; 0x1d24 <sync+0x54>
    1d1c:	ff 20       	and	r15, r15
    1d1e:	09 f4       	brne	.+2      	; 0x1d22 <sync+0x52>
    1d20:	4d c0       	rjmp	.+154    	; 0x1dbc <sync+0xec>
    1d22:	07 c0       	rjmp	.+14     	; 0x1d32 <sync+0x62>
    1d24:	ff 20       	and	r15, r15
    1d26:	09 f4       	brne	.+2      	; 0x1d2a <sync+0x5a>
    1d28:	4c c0       	rjmp	.+152    	; 0x1dc2 <sync+0xf2>
    1d2a:	78 94       	sei
    1d2c:	8f ef       	ldi	r24, 0xFF	; 255
    1d2e:	9f ef       	ldi	r25, 0xFF	; 255
    1d30:	66 c0       	rjmp	.+204    	; 0x1dfe <sync+0x12e>
    1d32:	d8 01       	movw	r26, r16
    1d34:	12 96       	adiw	r26, 0x02	; 2
    1d36:	8d 91       	ld	r24, X+
    1d38:	9c 91       	ld	r25, X
    1d3a:	13 97       	sbiw	r26, 0x03	; 3
    1d3c:	00 97       	sbiw	r24, 0x00	; 0
    1d3e:	09 f4       	brne	.+2      	; 0x1d42 <sync+0x72>
    1d40:	46 c0       	rjmp	.+140    	; 0x1dce <sync+0xfe>
    1d42:	dc 01       	movw	r26, r24
    1d44:	15 96       	adiw	r26, 0x05	; 5
    1d46:	1c 92       	st	X, r1
    1d48:	1e 92       	st	-X, r1
    1d4a:	14 97       	sbiw	r26, 0x04	; 4
    1d4c:	40 c0       	rjmp	.+128    	; 0x1dce <sync+0xfe>
    1d4e:	78 94       	sei
    1d50:	80 e0       	ldi	r24, 0x00	; 0
    1d52:	90 e0       	ldi	r25, 0x00	; 0
    1d54:	54 c0       	rjmp	.+168    	; 0x1dfe <sync+0x12e>
    1d56:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <current>
    1d5a:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <current+0x1>
    1d5e:	f8 01       	movw	r30, r16
    1d60:	91 83       	std	Z+1, r25	; 0x01
    1d62:	80 83       	st	Z, r24
    1d64:	ff 20       	and	r15, r15
    1d66:	41 f0       	breq	.+16     	; 0x1d78 <sync+0xa8>
    1d68:	d8 01       	movw	r26, r16
    1d6a:	12 96       	adiw	r26, 0x02	; 2
    1d6c:	8d 91       	ld	r24, X+
    1d6e:	9c 91       	ld	r25, X
    1d70:	13 97       	sbiw	r26, 0x03	; 3
    1d72:	01 97       	sbiw	r24, 0x01	; 1
    1d74:	09 f0       	breq	.+2      	; 0x1d78 <sync+0xa8>
    1d76:	78 94       	sei
    1d78:	b5 01       	movw	r22, r10
    1d7a:	c8 01       	movw	r24, r16
    1d7c:	f6 01       	movw	r30, r12
    1d7e:	09 95       	icall
    1d80:	d8 2f       	mov	r29, r24
    1d82:	c9 2f       	mov	r28, r25
    1d84:	8f b7       	in	r24, 0x3f	; 63
    1d86:	f8 94       	cli
    1d88:	d8 01       	movw	r26, r16
    1d8a:	11 96       	adiw	r26, 0x01	; 1
    1d8c:	1c 92       	st	X, r1
    1d8e:	1e 92       	st	-X, r1
    1d90:	12 96       	adiw	r26, 0x02	; 2
    1d92:	8d 91       	ld	r24, X+
    1d94:	9c 91       	ld	r25, X
    1d96:	13 97       	sbiw	r26, 0x03	; 3
    1d98:	82 30       	cpi	r24, 0x02	; 2
    1d9a:	91 05       	cpc	r25, r1
    1d9c:	48 f0       	brcs	.+18     	; 0x1db0 <sync+0xe0>
    1d9e:	13 96       	adiw	r26, 0x03	; 3
    1da0:	1c 92       	st	X, r1
    1da2:	1e 92       	st	-X, r1
    1da4:	12 97       	sbiw	r26, 0x02	; 2
    1da6:	fc 01       	movw	r30, r24
    1da8:	15 82       	std	Z+5, r1	; 0x05
    1daa:	14 82       	std	Z+4, r1	; 0x04
    1dac:	0e 94 c0 03 	call	0x780	; 0x780 <dispatch>
    1db0:	ff 20       	and	r15, r15
    1db2:	51 f0       	breq	.+20     	; 0x1dc8 <sync+0xf8>
    1db4:	78 94       	sei
    1db6:	8d 2f       	mov	r24, r29
    1db8:	9c 2f       	mov	r25, r28
    1dba:	21 c0       	rjmp	.+66     	; 0x1dfe <sync+0x12e>
    1dbc:	8f ef       	ldi	r24, 0xFF	; 255
    1dbe:	9f ef       	ldi	r25, 0xFF	; 255
    1dc0:	1e c0       	rjmp	.+60     	; 0x1dfe <sync+0x12e>
    1dc2:	8f ef       	ldi	r24, 0xFF	; 255
    1dc4:	9f ef       	ldi	r25, 0xFF	; 255
    1dc6:	1b c0       	rjmp	.+54     	; 0x1dfe <sync+0x12e>
    1dc8:	8d 2f       	mov	r24, r29
    1dca:	9c 2f       	mov	r25, r28
    1dcc:	18 c0       	rjmp	.+48     	; 0x1dfe <sync+0x12e>
    1dce:	d8 01       	movw	r26, r16
    1dd0:	13 96       	adiw	r26, 0x03	; 3
    1dd2:	fc 93       	st	X, r31
    1dd4:	ee 93       	st	-X, r30
    1dd6:	12 97       	sbiw	r26, 0x02	; 2
    1dd8:	15 83       	std	Z+5, r17	; 0x05
    1dda:	04 83       	std	Z+4, r16	; 0x04
    1ddc:	ce 01       	movw	r24, r28
    1dde:	0e 94 c0 03 	call	0x780	; 0x780 <dispatch>
    1de2:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <current>
    1de6:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <current+0x1>
    1dea:	82 81       	ldd	r24, Z+2	; 0x02
    1dec:	93 81       	ldd	r25, Z+3	; 0x03
    1dee:	89 2b       	or	r24, r25
    1df0:	09 f4       	brne	.+2      	; 0x1df4 <sync+0x124>
    1df2:	ad cf       	rjmp	.-166    	; 0x1d4e <sync+0x7e>
    1df4:	cf 01       	movw	r24, r30
    1df6:	f8 01       	movw	r30, r16
    1df8:	91 83       	std	Z+1, r25	; 0x01
    1dfa:	80 83       	st	Z, r24
    1dfc:	b5 cf       	rjmp	.-150    	; 0x1d68 <sync+0x98>
    1dfe:	df 91       	pop	r29
    1e00:	cf 91       	pop	r28
    1e02:	1f 91       	pop	r17
    1e04:	0f 91       	pop	r16
    1e06:	ff 90       	pop	r15
    1e08:	df 90       	pop	r13
    1e0a:	cf 90       	pop	r12
    1e0c:	bf 90       	pop	r11
    1e0e:	af 90       	pop	r10
    1e10:	08 95       	ret

00001e12 <run>:
    1e12:	00 91 26 01 	lds	r16, 0x0126	; 0x800126 <current>
    1e16:	10 91 27 01 	lds	r17, 0x0127	; 0x800127 <current+0x1>
    1e1a:	8e e3       	ldi	r24, 0x3E	; 62
    1e1c:	91 e0       	ldi	r25, 0x01	; 1
    1e1e:	0e 94 39 0c 	call	0x1872	; 0x1872 <dequeue>
    1e22:	ec 01       	movw	r28, r24
    1e24:	d8 01       	movw	r26, r16
    1e26:	13 96       	adiw	r26, 0x03	; 3
    1e28:	9c 93       	st	X, r25
    1e2a:	8e 93       	st	-X, r24
    1e2c:	12 97       	sbiw	r26, 0x02	; 2
    1e2e:	78 94       	sei
    1e30:	4e 85       	ldd	r20, Y+14	; 0x0e
    1e32:	5f 85       	ldd	r21, Y+15	; 0x0f
    1e34:	6c 85       	ldd	r22, Y+12	; 0x0c
    1e36:	7d 85       	ldd	r23, Y+13	; 0x0d
    1e38:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e3a:	9b 85       	ldd	r25, Y+11	; 0x0b
    1e3c:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <sync>
    1e40:	8f b7       	in	r24, 0x3f	; 63
    1e42:	f8 94       	cli
    1e44:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <msgPool>
    1e48:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <msgPool+0x1>
    1e4c:	99 83       	std	Y+1, r25	; 0x01
    1e4e:	88 83       	st	Y, r24
    1e50:	d0 93 2d 01 	sts	0x012D, r29	; 0x80012d <msgPool+0x1>
    1e54:	c0 93 2c 01 	sts	0x012C, r28	; 0x80012c <msgPool>
    1e58:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <activeStack>
    1e5c:	f0 91 29 01 	lds	r31, 0x0129	; 0x800129 <activeStack+0x1>
    1e60:	00 81       	ld	r16, Z
    1e62:	11 81       	ldd	r17, Z+1	; 0x01
    1e64:	e8 01       	movw	r28, r16
    1e66:	2a 81       	ldd	r18, Y+2	; 0x02
    1e68:	3b 81       	ldd	r19, Y+3	; 0x03
    1e6a:	a0 91 3e 01 	lds	r26, 0x013E	; 0x80013e <msgQ>
    1e6e:	b0 91 3f 01 	lds	r27, 0x013F	; 0x80013f <msgQ+0x1>
    1e72:	10 97       	sbiw	r26, 0x00	; 0
    1e74:	c1 f0       	breq	.+48     	; 0x1ea6 <run+0x94>
    1e76:	21 15       	cp	r18, r1
    1e78:	31 05       	cpc	r19, r1
    1e7a:	59 f2       	breq	.-106    	; 0x1e12 <run>
    1e7c:	16 96       	adiw	r26, 0x06	; 6
    1e7e:	8d 91       	ld	r24, X+
    1e80:	9d 91       	ld	r25, X+
    1e82:	0d 90       	ld	r0, X+
    1e84:	bc 91       	ld	r27, X
    1e86:	a0 2d       	mov	r26, r0
    1e88:	e9 01       	movw	r28, r18
    1e8a:	4e 81       	ldd	r20, Y+6	; 0x06
    1e8c:	5f 81       	ldd	r21, Y+7	; 0x07
    1e8e:	68 85       	ldd	r22, Y+8	; 0x08
    1e90:	79 85       	ldd	r23, Y+9	; 0x09
    1e92:	84 1b       	sub	r24, r20
    1e94:	95 0b       	sbc	r25, r21
    1e96:	a6 0b       	sbc	r26, r22
    1e98:	b7 0b       	sbc	r27, r23
    1e9a:	18 16       	cp	r1, r24
    1e9c:	19 06       	cpc	r1, r25
    1e9e:	1a 06       	cpc	r1, r26
    1ea0:	1b 06       	cpc	r1, r27
    1ea2:	0c f0       	brlt	.+2      	; 0x1ea6 <run+0x94>
    1ea4:	b6 cf       	rjmp	.-148    	; 0x1e12 <run>
    1ea6:	10 93 29 01 	sts	0x0129, r17	; 0x800129 <activeStack+0x1>
    1eaa:	00 93 28 01 	sts	0x0128, r16	; 0x800128 <activeStack>
    1eae:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <threadPool>
    1eb2:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <threadPool+0x1>
    1eb6:	91 83       	std	Z+1, r25	; 0x01
    1eb8:	80 83       	st	Z, r24
    1eba:	f0 93 2b 01 	sts	0x012B, r31	; 0x80012b <threadPool+0x1>
    1ebe:	e0 93 2a 01 	sts	0x012A, r30	; 0x80012a <threadPool>
    1ec2:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <activeStack>
    1ec6:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <activeStack+0x1>
    1eca:	14 96       	adiw	r26, 0x04	; 4
    1ecc:	ed 91       	ld	r30, X+
    1ece:	fc 91       	ld	r31, X
    1ed0:	15 97       	sbiw	r26, 0x05	; 5
    1ed2:	30 97       	sbiw	r30, 0x00	; 0
    1ed4:	41 f0       	breq	.+16     	; 0x1ee6 <run+0xd4>
    1ed6:	a0 81       	ld	r26, Z
    1ed8:	b1 81       	ldd	r27, Z+1	; 0x01
    1eda:	14 96       	adiw	r26, 0x04	; 4
    1edc:	ed 91       	ld	r30, X+
    1ede:	fc 91       	ld	r31, X
    1ee0:	15 97       	sbiw	r26, 0x05	; 5
    1ee2:	30 97       	sbiw	r30, 0x00	; 0
    1ee4:	c1 f7       	brne	.-16     	; 0x1ed6 <run+0xc4>
    1ee6:	cd 01       	movw	r24, r26
    1ee8:	0e 94 c0 03 	call	0x780	; 0x780 <dispatch>
    1eec:	92 cf       	rjmp	.-220    	; 0x1e12 <run>

00001eee <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    1eee:	42 31       	cpi	r20, 0x12	; 18
    1ef0:	b8 f4       	brcc	.+46     	; 0x1f20 <install+0x32>
        char status;
        DISABLE(status);
    1ef2:	2f b7       	in	r18, 0x3f	; 63
    1ef4:	f8 94       	cli
        otable[i] = obj;
    1ef6:	50 e0       	ldi	r21, 0x00	; 0
    1ef8:	44 0f       	add	r20, r20
    1efa:	55 1f       	adc	r21, r21
    1efc:	fa 01       	movw	r30, r20
    1efe:	e0 5c       	subi	r30, 0xC0	; 192
    1f00:	fe 4f       	sbci	r31, 0xFE	; 254
    1f02:	91 83       	std	Z+1, r25	; 0x01
    1f04:	80 83       	st	Z, r24
        mtable[i] = m;
    1f06:	fa 01       	movw	r30, r20
    1f08:	e8 52       	subi	r30, 0x28	; 40
    1f0a:	fe 4f       	sbci	r31, 0xFE	; 254
    1f0c:	71 83       	std	Z+1, r23	; 0x01
    1f0e:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1f10:	41 e0       	ldi	r20, 0x01	; 1
    1f12:	50 e0       	ldi	r21, 0x00	; 0
    1f14:	fc 01       	movw	r30, r24
    1f16:	53 83       	std	Z+3, r21	; 0x03
    1f18:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    1f1a:	22 23       	and	r18, r18
    1f1c:	0c f4       	brge	.+2      	; 0x1f20 <install+0x32>
    1f1e:	78 94       	sei
    1f20:	08 95       	ret

00001f22 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1f22:	8c 01       	movw	r16, r24
    1f24:	eb 01       	movw	r28, r22
    1f26:	7a 01       	movw	r14, r20
    char status;
    DISABLE(status);
    1f28:	8f b7       	in	r24, 0x3f	; 63
    1f2a:	f8 94       	cli
    initialize();
    1f2c:	0e 94 55 03 	call	0x6aa	; 0x6aa <initialize>
    ENABLE(1);
    1f30:	78 94       	sei
    if (m != NULL)
    1f32:	20 97       	sbiw	r28, 0x00	; 0
    1f34:	21 f0       	breq	.+8      	; 0x1f3e <tinytimber+0x1c>
        m(obj, arg);
    1f36:	b7 01       	movw	r22, r14
    1f38:	c8 01       	movw	r24, r16
    1f3a:	fe 01       	movw	r30, r28
    1f3c:	09 95       	icall
    DISABLE(status);
    1f3e:	8f b7       	in	r24, 0x3f	; 63
    1f40:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    1f42:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <schedule>
    ENABLE(1);
    1f46:	78 94       	sei
    while (1) {
        SLEEP();
    1f48:	81 e0       	ldi	r24, 0x01	; 1
    1f4a:	83 bf       	out	0x33, r24	; 51
    1f4c:	88 95       	sleep
    1f4e:	fd cf       	rjmp	.-6      	; 0x1f4a <tinytimber+0x28>

00001f50 <__divmodsi4>:
    1f50:	05 2e       	mov	r0, r21
    1f52:	97 fb       	bst	r25, 7
    1f54:	1e f4       	brtc	.+6      	; 0x1f5c <__divmodsi4+0xc>
    1f56:	00 94       	com	r0
    1f58:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__negsi2>
    1f5c:	57 fd       	sbrc	r21, 7
    1f5e:	07 d0       	rcall	.+14     	; 0x1f6e <__divmodsi4_neg2>
    1f60:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <__udivmodsi4>
    1f64:	07 fc       	sbrc	r0, 7
    1f66:	03 d0       	rcall	.+6      	; 0x1f6e <__divmodsi4_neg2>
    1f68:	4e f4       	brtc	.+18     	; 0x1f7c <__divmodsi4_exit>
    1f6a:	0c 94 bf 0f 	jmp	0x1f7e	; 0x1f7e <__negsi2>

00001f6e <__divmodsi4_neg2>:
    1f6e:	50 95       	com	r21
    1f70:	40 95       	com	r20
    1f72:	30 95       	com	r19
    1f74:	21 95       	neg	r18
    1f76:	3f 4f       	sbci	r19, 0xFF	; 255
    1f78:	4f 4f       	sbci	r20, 0xFF	; 255
    1f7a:	5f 4f       	sbci	r21, 0xFF	; 255

00001f7c <__divmodsi4_exit>:
    1f7c:	08 95       	ret

00001f7e <__negsi2>:
    1f7e:	90 95       	com	r25
    1f80:	80 95       	com	r24
    1f82:	70 95       	com	r23
    1f84:	61 95       	neg	r22
    1f86:	7f 4f       	sbci	r23, 0xFF	; 255
    1f88:	8f 4f       	sbci	r24, 0xFF	; 255
    1f8a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f8c:	08 95       	ret

00001f8e <__tablejump2__>:
    1f8e:	ee 0f       	add	r30, r30
    1f90:	ff 1f       	adc	r31, r31
    1f92:	05 90       	lpm	r0, Z+
    1f94:	f4 91       	lpm	r31, Z
    1f96:	e0 2d       	mov	r30, r0
    1f98:	09 94       	ijmp

00001f9a <__usmulhisi3>:
    1f9a:	0e 94 f6 0f 	call	0x1fec	; 0x1fec <__umulhisi3>

00001f9e <__usmulhisi3_tail>:
    1f9e:	b7 ff       	sbrs	r27, 7
    1fa0:	08 95       	ret
    1fa2:	82 1b       	sub	r24, r18
    1fa4:	93 0b       	sbc	r25, r19
    1fa6:	08 95       	ret

00001fa8 <__udivmodsi4>:
    1fa8:	a1 e2       	ldi	r26, 0x21	; 33
    1faa:	1a 2e       	mov	r1, r26
    1fac:	aa 1b       	sub	r26, r26
    1fae:	bb 1b       	sub	r27, r27
    1fb0:	fd 01       	movw	r30, r26
    1fb2:	0d c0       	rjmp	.+26     	; 0x1fce <__udivmodsi4_ep>

00001fb4 <__udivmodsi4_loop>:
    1fb4:	aa 1f       	adc	r26, r26
    1fb6:	bb 1f       	adc	r27, r27
    1fb8:	ee 1f       	adc	r30, r30
    1fba:	ff 1f       	adc	r31, r31
    1fbc:	a2 17       	cp	r26, r18
    1fbe:	b3 07       	cpc	r27, r19
    1fc0:	e4 07       	cpc	r30, r20
    1fc2:	f5 07       	cpc	r31, r21
    1fc4:	20 f0       	brcs	.+8      	; 0x1fce <__udivmodsi4_ep>
    1fc6:	a2 1b       	sub	r26, r18
    1fc8:	b3 0b       	sbc	r27, r19
    1fca:	e4 0b       	sbc	r30, r20
    1fcc:	f5 0b       	sbc	r31, r21

00001fce <__udivmodsi4_ep>:
    1fce:	66 1f       	adc	r22, r22
    1fd0:	77 1f       	adc	r23, r23
    1fd2:	88 1f       	adc	r24, r24
    1fd4:	99 1f       	adc	r25, r25
    1fd6:	1a 94       	dec	r1
    1fd8:	69 f7       	brne	.-38     	; 0x1fb4 <__udivmodsi4_loop>
    1fda:	60 95       	com	r22
    1fdc:	70 95       	com	r23
    1fde:	80 95       	com	r24
    1fe0:	90 95       	com	r25
    1fe2:	9b 01       	movw	r18, r22
    1fe4:	ac 01       	movw	r20, r24
    1fe6:	bd 01       	movw	r22, r26
    1fe8:	cf 01       	movw	r24, r30
    1fea:	08 95       	ret

00001fec <__umulhisi3>:
    1fec:	a2 9f       	mul	r26, r18
    1fee:	b0 01       	movw	r22, r0
    1ff0:	b3 9f       	mul	r27, r19
    1ff2:	c0 01       	movw	r24, r0
    1ff4:	a3 9f       	mul	r26, r19
    1ff6:	70 0d       	add	r23, r0
    1ff8:	81 1d       	adc	r24, r1
    1ffa:	11 24       	eor	r1, r1
    1ffc:	91 1d       	adc	r25, r1
    1ffe:	b2 9f       	mul	r27, r18
    2000:	70 0d       	add	r23, r0
    2002:	81 1d       	adc	r24, r1
    2004:	11 24       	eor	r1, r1
    2006:	91 1d       	adc	r25, r1
    2008:	08 95       	ret

0000200a <setjmp>:
    200a:	dc 01       	movw	r26, r24
    200c:	2d 92       	st	X+, r2
    200e:	3d 92       	st	X+, r3
    2010:	4d 92       	st	X+, r4
    2012:	5d 92       	st	X+, r5
    2014:	6d 92       	st	X+, r6
    2016:	7d 92       	st	X+, r7
    2018:	8d 92       	st	X+, r8
    201a:	9d 92       	st	X+, r9
    201c:	ad 92       	st	X+, r10
    201e:	bd 92       	st	X+, r11
    2020:	cd 92       	st	X+, r12
    2022:	dd 92       	st	X+, r13
    2024:	ed 92       	st	X+, r14
    2026:	fd 92       	st	X+, r15
    2028:	0d 93       	st	X+, r16
    202a:	1d 93       	st	X+, r17
    202c:	cd 93       	st	X+, r28
    202e:	dd 93       	st	X+, r29
    2030:	ff 91       	pop	r31
    2032:	ef 91       	pop	r30
    2034:	8d b7       	in	r24, 0x3d	; 61
    2036:	8d 93       	st	X+, r24
    2038:	8e b7       	in	r24, 0x3e	; 62
    203a:	8d 93       	st	X+, r24
    203c:	8f b7       	in	r24, 0x3f	; 63
    203e:	8d 93       	st	X+, r24
    2040:	ed 93       	st	X+, r30
    2042:	fd 93       	st	X+, r31
    2044:	88 27       	eor	r24, r24
    2046:	99 27       	eor	r25, r25
    2048:	09 94       	ijmp

0000204a <longjmp>:
    204a:	dc 01       	movw	r26, r24
    204c:	cb 01       	movw	r24, r22
    204e:	81 30       	cpi	r24, 0x01	; 1
    2050:	91 05       	cpc	r25, r1
    2052:	81 1d       	adc	r24, r1
    2054:	2d 90       	ld	r2, X+
    2056:	3d 90       	ld	r3, X+
    2058:	4d 90       	ld	r4, X+
    205a:	5d 90       	ld	r5, X+
    205c:	6d 90       	ld	r6, X+
    205e:	7d 90       	ld	r7, X+
    2060:	8d 90       	ld	r8, X+
    2062:	9d 90       	ld	r9, X+
    2064:	ad 90       	ld	r10, X+
    2066:	bd 90       	ld	r11, X+
    2068:	cd 90       	ld	r12, X+
    206a:	dd 90       	ld	r13, X+
    206c:	ed 90       	ld	r14, X+
    206e:	fd 90       	ld	r15, X+
    2070:	0d 91       	ld	r16, X+
    2072:	1d 91       	ld	r17, X+
    2074:	cd 91       	ld	r28, X+
    2076:	dd 91       	ld	r29, X+
    2078:	ed 91       	ld	r30, X+
    207a:	fd 91       	ld	r31, X+
    207c:	0d 90       	ld	r0, X+
    207e:	f8 94       	cli
    2080:	fe bf       	out	0x3e, r31	; 62
    2082:	0f be       	out	0x3f, r0	; 63
    2084:	ed bf       	out	0x3d, r30	; 61
    2086:	ed 91       	ld	r30, X+
    2088:	fd 91       	ld	r31, X+
    208a:	09 94       	ijmp

0000208c <_exit>:
    208c:	f8 94       	cli

0000208e <__stop_program>:
    208e:	ff cf       	rjmp	.-2      	; 0x208e <__stop_program>
