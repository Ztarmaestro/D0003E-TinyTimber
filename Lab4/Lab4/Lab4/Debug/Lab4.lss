
Lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  00001efc  00001f90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001efc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035b  0080012e  0080012e  00001fbe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001fbe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ff0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  00002030  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000025af  00000000  00000000  00002258  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000102a  00000000  00000000  00004807  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014a1  00000000  00000000  00005831  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000af0  00000000  00000000  00006cd4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000904  00000000  00000000  000077c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000025b8  00000000  00000000  000080c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  0000a680  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <__vector_1>
       8:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <__vector_2>
       c:	0c 94 3f 04 	jmp	0x87e	; 0x87e <__vector_3>
      10:	0c 94 ab 04 	jmp	0x956	; 0x956 <__vector_4>
      14:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__vector_5>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 ee 0b 	jmp	0x17dc	; 0x17dc <__vector_7>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 9c 0b 	jmp	0x1738	; 0x1738 <__vector_9>
      28:	0c 94 83 05 	jmp	0xb06	; 0xb06 <__vector_10>
      2c:	0c 94 ef 05 	jmp	0xbde	; 0xbde <__vector_11>
      30:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__vector_12>
      34:	0c 94 c7 06 	jmp	0xd8e	; 0xd8e <__vector_13>
      38:	0c 94 33 07 	jmp	0xe66	; 0xe66 <__vector_14>
      3c:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__vector_15>
      40:	0c 94 0b 08 	jmp	0x1016	; 0x1016 <__vector_16>
      44:	0c 94 77 08 	jmp	0x10ee	; 0x10ee <__vector_17>
      48:	0c 94 e3 08 	jmp	0x11c6	; 0x11c6 <__vector_18>
      4c:	0c 94 4f 09 	jmp	0x129e	; 0x129e <__vector_19>
      50:	0c 94 bb 09 	jmp	0x1376	; 0x1376 <__vector_20>
      54:	0c 94 27 0a 	jmp	0x144e	; 0x144e <__vector_21>
      58:	0c 94 93 0a 	jmp	0x1526	; 0x1526 <__vector_22>
      5c:	62 00       	.word	0x0062	; ????
      5e:	67 00       	.word	0x0067	; ????
      60:	6c 00       	.word	0x006c	; ????
      62:	71 00       	.word	0x0071	; ????
      64:	76 00       	.word	0x0076	; ????
      66:	7b 00       	.word	0x007b	; ????
      68:	80 00       	.word	0x0080	; ????
      6a:	85 00       	.word	0x0085	; ????
      6c:	8a 00       	.word	0x008a	; ????
      6e:	8f 00       	.word	0x008f	; ????

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	ec ef       	ldi	r30, 0xFC	; 252
      84:	fe e1       	ldi	r31, 0x1E	; 30
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	ae 32       	cpi	r26, 0x2E	; 46
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	24 e0       	ldi	r18, 0x04	; 4
      94:	ae e2       	ldi	r26, 0x2E	; 46
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a9 38       	cpi	r26, 0x89	; 137
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 45 02 	call	0x48a	; 0x48a <main>
      a6:	0c 94 7c 0f 	jmp	0x1ef8	; 0x1ef8 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <writeChar>:
	 }
 }*/

 //function to write a char at a position
 void writeChar(char ch, int pos)
 {
      ae:	cf 93       	push	r28
	 char reg1;
	 char reg2;
	 char reg3;
	 char reg4;

	 	 switch (ch)
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	fc 01       	movw	r30, r24
      b4:	f0 97       	sbiw	r30, 0x30	; 48
      b6:	ea 30       	cpi	r30, 0x0A	; 10
      b8:	f1 05       	cpc	r31, r1
      ba:	a8 f5       	brcc	.+106    	; 0x126 <writeChar+0x78>
      bc:	e2 5d       	subi	r30, 0xD2	; 210
      be:	ff 4f       	sbci	r31, 0xFF	; 255
      c0:	0c 94 13 0f 	jmp	0x1e26	; 0x1e26 <__tablejump2__>
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x05;
		 	 reg4 = 0x01;
      c4:	21 e0       	ldi	r18, 0x01	; 1
	 	 switch (ch)
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x05;
      c6:	35 e0       	ldi	r19, 0x05	; 5

	 	 switch (ch)
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
      c8:	45 e0       	ldi	r20, 0x05	; 5
	 char reg4;

	 	 switch (ch)
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
      ca:	c1 e0       	ldi	r28, 0x01	; 1
      cc:	2c c0       	rjmp	.+88     	; 0x126 <writeChar+0x78>
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
      ce:	20 e0       	ldi	r18, 0x00	; 0
		 	 reg4 = 0x01;
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
      d0:	31 e0       	ldi	r19, 0x01	; 1
		 	 reg3 = 0x05;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x01;
      d2:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x05;
		 	 reg3 = 0x05;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
      d4:	c0 e0       	ldi	r28, 0x00	; 0
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
      d6:	27 c0       	rjmp	.+78     	; 0x126 <writeChar+0x78>
		 	 case '2' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
      d8:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x00;
		 	 break;
		 	 case '2' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
      da:	3e e0       	ldi	r19, 0x0E	; 14
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '2' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
      dc:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '2' :
		 	 reg1 = 0x01;
      de:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
		 	 break;
      e0:	22 c0       	rjmp	.+68     	; 0x126 <writeChar+0x78>
		 	 case '3' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
      e2:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x01;
		 	 break;
		 	 case '3' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
      e4:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '3' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
      e6:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '3' :
		 	 reg1 = 0x01;
      e8:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
      ea:	1d c0       	rjmp	.+58     	; 0x126 <writeChar+0x78>
		 	 case '4' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
      ec:	20 e0       	ldi	r18, 0x00	; 0
		 	 reg4 = 0x01;
		 	 break;
		 	 case '4' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
      ee:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '4' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x05;
      f0:	45 e0       	ldi	r20, 0x05	; 5
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '4' :
		 	 reg1 = 0x00;
      f2:	c0 e0       	ldi	r28, 0x00	; 0
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
		 	 break;
      f4:	18 c0       	rjmp	.+48     	; 0x126 <writeChar+0x78>
		 	 case '5':
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
      f6:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x00;
		 	 break;
		 	 case '5':
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
      f8:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '5':
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
      fa:	44 e0       	ldi	r20, 0x04	; 4
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '5':
		 	 reg1 = 0x01;
      fc:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
      fe:	13 c0       	rjmp	.+38     	; 0x126 <writeChar+0x78>
		 	 case '6' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
     100:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x01;
		 	 break;
		 	 case '6' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
     102:	3f e0       	ldi	r19, 0x0F	; 15
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '6' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
     104:	44 e0       	ldi	r20, 0x04	; 4
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '6' :
		 	 reg1 = 0x01;
     106:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
     108:	0e c0       	rjmp	.+28     	; 0x126 <writeChar+0x78>
		 	 case '7' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
     10a:	20 e0       	ldi	r18, 0x00	; 0
		 	 reg4 = 0x01;
		 	 break;
		 	 case '7' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
     10c:	31 e0       	ldi	r19, 0x01	; 1
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '7' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
     10e:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '7' :
		 	 reg1 = 0x01;
     110:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
     112:	09 c0       	rjmp	.+18     	; 0x126 <writeChar+0x78>
		 	 case '8' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
     114:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x00;
		 	 break;
		 	 case '8' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
     116:	3f e0       	ldi	r19, 0x0F	; 15
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '8' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
     118:	45 e0       	ldi	r20, 0x05	; 5
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '8' :
		 	 reg1 = 0x01;
     11a:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
     11c:	04 c0       	rjmp	.+8      	; 0x126 <writeChar+0x78>
		 	 case '9' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
     11e:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x01;
		 	 break;
		 	 case '9' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
     120:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '9' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
     122:	45 e0       	ldi	r20, 0x05	; 5
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '9' :
		 	 reg1 = 0x01;
     124:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
	 	 }
		 	 switch (pos)
     126:	62 30       	cpi	r22, 0x02	; 2
     128:	71 05       	cpc	r23, r1
     12a:	09 f4       	brne	.+2      	; 0x12e <writeChar+0x80>
     12c:	5a c0       	rjmp	.+180    	; 0x1e2 <writeChar+0x134>
     12e:	3c f4       	brge	.+14     	; 0x13e <writeChar+0x90>
     130:	61 15       	cp	r22, r1
     132:	71 05       	cpc	r23, r1
     134:	79 f0       	breq	.+30     	; 0x154 <writeChar+0xa6>
     136:	61 30       	cpi	r22, 0x01	; 1
     138:	71 05       	cpc	r23, r1
     13a:	31 f1       	breq	.+76     	; 0x188 <writeChar+0xda>
     13c:	df c0       	rjmp	.+446    	; 0x2fc <writeChar+0x24e>
     13e:	64 30       	cpi	r22, 0x04	; 4
     140:	71 05       	cpc	r23, r1
     142:	09 f4       	brne	.+2      	; 0x146 <writeChar+0x98>
     144:	95 c0       	rjmp	.+298    	; 0x270 <writeChar+0x1c2>
     146:	0c f4       	brge	.+2      	; 0x14a <writeChar+0x9c>
     148:	66 c0       	rjmp	.+204    	; 0x216 <writeChar+0x168>
     14a:	65 30       	cpi	r22, 0x05	; 5
     14c:	71 05       	cpc	r23, r1
     14e:	09 f4       	brne	.+2      	; 0x152 <writeChar+0xa4>
     150:	a9 c0       	rjmp	.+338    	; 0x2a4 <writeChar+0x1f6>
     152:	d4 c0       	rjmp	.+424    	; 0x2fc <writeChar+0x24e>
	 {
		 case 0:
		 LCDDR0  = (LCDDR0 & 0xF0) | reg1;
     154:	ec ee       	ldi	r30, 0xEC	; 236
     156:	f0 e0       	ldi	r31, 0x00	; 0
     158:	90 81       	ld	r25, Z
     15a:	90 7f       	andi	r25, 0xF0	; 240
     15c:	8c 2f       	mov	r24, r28
     15e:	89 2b       	or	r24, r25
     160:	80 83       	st	Z, r24
		 LCDDR5  = (LCDDR5 & 0xF0) | reg2;
     162:	e1 ef       	ldi	r30, 0xF1	; 241
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	80 81       	ld	r24, Z
     168:	80 7f       	andi	r24, 0xF0	; 240
     16a:	84 2b       	or	r24, r20
     16c:	80 83       	st	Z, r24
		 LCDDR10 = (LCDDR10 & 0xF0) | reg3;
     16e:	e6 ef       	ldi	r30, 0xF6	; 246
     170:	f0 e0       	ldi	r31, 0x00	; 0
     172:	80 81       	ld	r24, Z
     174:	80 7f       	andi	r24, 0xF0	; 240
     176:	83 2b       	or	r24, r19
     178:	80 83       	st	Z, r24
		 LCDDR15 = (LCDDR15 & 0xF0) | reg4;
     17a:	eb ef       	ldi	r30, 0xFB	; 251
     17c:	f0 e0       	ldi	r31, 0x00	; 0
     17e:	80 81       	ld	r24, Z
     180:	80 7f       	andi	r24, 0xF0	; 240
     182:	82 2b       	or	r24, r18
     184:	80 83       	st	Z, r24
		 
		 break;
     186:	ba c0       	rjmp	.+372    	; 0x2fc <writeChar+0x24e>
		 case 1:
		 LCDDR0  = (LCDDR0 & 0x0F) | reg1 << 4;
     188:	ec ee       	ldi	r30, 0xEC	; 236
     18a:	f0 e0       	ldi	r31, 0x00	; 0
     18c:	50 81       	ld	r21, Z
     18e:	60 e1       	ldi	r22, 0x10	; 16
     190:	c6 9f       	mul	r28, r22
     192:	c0 01       	movw	r24, r0
     194:	11 24       	eor	r1, r1
     196:	95 2f       	mov	r25, r21
     198:	9f 70       	andi	r25, 0x0F	; 15
     19a:	89 2b       	or	r24, r25
     19c:	80 83       	st	Z, r24
		 LCDDR5  = (LCDDR5 & 0x0F) | reg2 << 4;
     19e:	e1 ef       	ldi	r30, 0xF1	; 241
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	50 81       	ld	r21, Z
     1a4:	60 e1       	ldi	r22, 0x10	; 16
     1a6:	46 9f       	mul	r20, r22
     1a8:	c0 01       	movw	r24, r0
     1aa:	11 24       	eor	r1, r1
     1ac:	45 2f       	mov	r20, r21
     1ae:	4f 70       	andi	r20, 0x0F	; 15
     1b0:	84 2b       	or	r24, r20
     1b2:	80 83       	st	Z, r24
		 LCDDR10 = (LCDDR10 & 0x0F) | reg3 << 4;
     1b4:	e6 ef       	ldi	r30, 0xF6	; 246
     1b6:	f0 e0       	ldi	r31, 0x00	; 0
     1b8:	40 81       	ld	r20, Z
     1ba:	50 e1       	ldi	r21, 0x10	; 16
     1bc:	35 9f       	mul	r19, r21
     1be:	c0 01       	movw	r24, r0
     1c0:	11 24       	eor	r1, r1
     1c2:	34 2f       	mov	r19, r20
     1c4:	3f 70       	andi	r19, 0x0F	; 15
     1c6:	83 2b       	or	r24, r19
     1c8:	80 83       	st	Z, r24
		 LCDDR15 = (LCDDR15 & 0x0F) | reg4 << 4;
     1ca:	eb ef       	ldi	r30, 0xFB	; 251
     1cc:	f0 e0       	ldi	r31, 0x00	; 0
     1ce:	30 81       	ld	r19, Z
     1d0:	60 e1       	ldi	r22, 0x10	; 16
     1d2:	26 9f       	mul	r18, r22
     1d4:	c0 01       	movw	r24, r0
     1d6:	11 24       	eor	r1, r1
     1d8:	23 2f       	mov	r18, r19
     1da:	2f 70       	andi	r18, 0x0F	; 15
     1dc:	82 2b       	or	r24, r18
     1de:	80 83       	st	Z, r24
		 break;
     1e0:	8d c0       	rjmp	.+282    	; 0x2fc <writeChar+0x24e>
		 case 2:
		 LCDDR1  = (LCDDR1 & 0xF0) | reg1;
     1e2:	ed ee       	ldi	r30, 0xED	; 237
     1e4:	f0 e0       	ldi	r31, 0x00	; 0
     1e6:	90 81       	ld	r25, Z
     1e8:	90 7f       	andi	r25, 0xF0	; 240
     1ea:	8c 2f       	mov	r24, r28
     1ec:	89 2b       	or	r24, r25
     1ee:	80 83       	st	Z, r24
		 LCDDR6  = (LCDDR6 & 0xF0) |reg2;
     1f0:	e2 ef       	ldi	r30, 0xF2	; 242
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	80 81       	ld	r24, Z
     1f6:	80 7f       	andi	r24, 0xF0	; 240
     1f8:	84 2b       	or	r24, r20
     1fa:	80 83       	st	Z, r24
		 LCDDR11 = (LCDDR11 & 0xF0) |reg3;
     1fc:	e7 ef       	ldi	r30, 0xF7	; 247
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	80 81       	ld	r24, Z
     202:	80 7f       	andi	r24, 0xF0	; 240
     204:	83 2b       	or	r24, r19
     206:	80 83       	st	Z, r24
		 LCDDR16 = (LCDDR16 & 0xF0) |reg4;
     208:	ec ef       	ldi	r30, 0xFC	; 252
     20a:	f0 e0       	ldi	r31, 0x00	; 0
     20c:	80 81       	ld	r24, Z
     20e:	80 7f       	andi	r24, 0xF0	; 240
     210:	82 2b       	or	r24, r18
     212:	80 83       	st	Z, r24
		 break;
     214:	73 c0       	rjmp	.+230    	; 0x2fc <writeChar+0x24e>
		 
		 case 3:
		 LCDDR1  = (LCDDR1 & 0x0F) | reg1 << 4;
     216:	ed ee       	ldi	r30, 0xED	; 237
     218:	f0 e0       	ldi	r31, 0x00	; 0
     21a:	50 81       	ld	r21, Z
     21c:	60 e1       	ldi	r22, 0x10	; 16
     21e:	c6 9f       	mul	r28, r22
     220:	c0 01       	movw	r24, r0
     222:	11 24       	eor	r1, r1
     224:	95 2f       	mov	r25, r21
     226:	9f 70       	andi	r25, 0x0F	; 15
     228:	89 2b       	or	r24, r25
     22a:	80 83       	st	Z, r24
		 LCDDR6  = (LCDDR6 & 0x0F) | reg2 << 4;
     22c:	e2 ef       	ldi	r30, 0xF2	; 242
     22e:	f0 e0       	ldi	r31, 0x00	; 0
     230:	50 81       	ld	r21, Z
     232:	60 e1       	ldi	r22, 0x10	; 16
     234:	46 9f       	mul	r20, r22
     236:	c0 01       	movw	r24, r0
     238:	11 24       	eor	r1, r1
     23a:	45 2f       	mov	r20, r21
     23c:	4f 70       	andi	r20, 0x0F	; 15
     23e:	84 2b       	or	r24, r20
     240:	80 83       	st	Z, r24
		 LCDDR11 = (LCDDR11 & 0x0F) | reg3 << 4;
     242:	e7 ef       	ldi	r30, 0xF7	; 247
     244:	f0 e0       	ldi	r31, 0x00	; 0
     246:	40 81       	ld	r20, Z
     248:	50 e1       	ldi	r21, 0x10	; 16
     24a:	35 9f       	mul	r19, r21
     24c:	c0 01       	movw	r24, r0
     24e:	11 24       	eor	r1, r1
     250:	34 2f       	mov	r19, r20
     252:	3f 70       	andi	r19, 0x0F	; 15
     254:	83 2b       	or	r24, r19
     256:	80 83       	st	Z, r24
		 LCDDR16 = (LCDDR16 & 0x0F) | reg4 << 4;
     258:	ec ef       	ldi	r30, 0xFC	; 252
     25a:	f0 e0       	ldi	r31, 0x00	; 0
     25c:	30 81       	ld	r19, Z
     25e:	60 e1       	ldi	r22, 0x10	; 16
     260:	26 9f       	mul	r18, r22
     262:	c0 01       	movw	r24, r0
     264:	11 24       	eor	r1, r1
     266:	23 2f       	mov	r18, r19
     268:	2f 70       	andi	r18, 0x0F	; 15
     26a:	82 2b       	or	r24, r18
     26c:	80 83       	st	Z, r24
		 break;
     26e:	46 c0       	rjmp	.+140    	; 0x2fc <writeChar+0x24e>

		 case 4:
		 LCDDR2  = (LCDDR2 & 0xF0) |reg1;
     270:	ee ee       	ldi	r30, 0xEE	; 238
     272:	f0 e0       	ldi	r31, 0x00	; 0
     274:	90 81       	ld	r25, Z
     276:	90 7f       	andi	r25, 0xF0	; 240
     278:	8c 2f       	mov	r24, r28
     27a:	89 2b       	or	r24, r25
     27c:	80 83       	st	Z, r24
		 LCDDR7  = (LCDDR7 & 0xF0) |reg2;
     27e:	e3 ef       	ldi	r30, 0xF3	; 243
     280:	f0 e0       	ldi	r31, 0x00	; 0
     282:	80 81       	ld	r24, Z
     284:	80 7f       	andi	r24, 0xF0	; 240
     286:	84 2b       	or	r24, r20
     288:	80 83       	st	Z, r24
		 LCDDR12 = (LCDDR12 & 0xF0) |reg3;
     28a:	e8 ef       	ldi	r30, 0xF8	; 248
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	80 81       	ld	r24, Z
     290:	80 7f       	andi	r24, 0xF0	; 240
     292:	83 2b       	or	r24, r19
     294:	80 83       	st	Z, r24
		 LCDDR17 = (LCDDR17 & 0xF0) |reg4;
     296:	ed ef       	ldi	r30, 0xFD	; 253
     298:	f0 e0       	ldi	r31, 0x00	; 0
     29a:	80 81       	ld	r24, Z
     29c:	80 7f       	andi	r24, 0xF0	; 240
     29e:	82 2b       	or	r24, r18
     2a0:	80 83       	st	Z, r24
		 break;
     2a2:	2c c0       	rjmp	.+88     	; 0x2fc <writeChar+0x24e>

		 case 5:
		 LCDDR2  = (LCDDR2 & 0x0F) | reg1 << 4;
     2a4:	ee ee       	ldi	r30, 0xEE	; 238
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	50 81       	ld	r21, Z
     2aa:	60 e1       	ldi	r22, 0x10	; 16
     2ac:	c6 9f       	mul	r28, r22
     2ae:	c0 01       	movw	r24, r0
     2b0:	11 24       	eor	r1, r1
     2b2:	95 2f       	mov	r25, r21
     2b4:	9f 70       	andi	r25, 0x0F	; 15
     2b6:	89 2b       	or	r24, r25
     2b8:	80 83       	st	Z, r24
		 LCDDR7  = (LCDDR7 & 0x0F) | reg2 << 4;
     2ba:	e3 ef       	ldi	r30, 0xF3	; 243
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	50 81       	ld	r21, Z
     2c0:	60 e1       	ldi	r22, 0x10	; 16
     2c2:	46 9f       	mul	r20, r22
     2c4:	c0 01       	movw	r24, r0
     2c6:	11 24       	eor	r1, r1
     2c8:	95 2f       	mov	r25, r21
     2ca:	9f 70       	andi	r25, 0x0F	; 15
     2cc:	89 2b       	or	r24, r25
     2ce:	80 83       	st	Z, r24
		 LCDDR12 = (LCDDR12 & 0x0F) | reg3 << 4;
     2d0:	e8 ef       	ldi	r30, 0xF8	; 248
     2d2:	f0 e0       	ldi	r31, 0x00	; 0
     2d4:	40 81       	ld	r20, Z
     2d6:	50 e1       	ldi	r21, 0x10	; 16
     2d8:	35 9f       	mul	r19, r21
     2da:	c0 01       	movw	r24, r0
     2dc:	11 24       	eor	r1, r1
     2de:	94 2f       	mov	r25, r20
     2e0:	9f 70       	andi	r25, 0x0F	; 15
     2e2:	89 2b       	or	r24, r25
     2e4:	80 83       	st	Z, r24
		 LCDDR17 = (LCDDR17 & 0x0F) | reg4 << 4;
     2e6:	ed ef       	ldi	r30, 0xFD	; 253
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	30 81       	ld	r19, Z
     2ec:	60 e1       	ldi	r22, 0x10	; 16
     2ee:	26 9f       	mul	r18, r22
     2f0:	c0 01       	movw	r24, r0
     2f2:	11 24       	eor	r1, r1
     2f4:	93 2f       	mov	r25, r19
     2f6:	9f 70       	andi	r25, 0x0F	; 15
     2f8:	89 2b       	or	r24, r25
     2fa:	80 83       	st	Z, r24
		 break;
	 }
	 
 }
     2fc:	cf 91       	pop	r28
     2fe:	08 95       	ret

00000300 <printAt>:

 void printAt(long num, int pos) 
 {
     300:	8f 92       	push	r8
     302:	9f 92       	push	r9
     304:	af 92       	push	r10
     306:	bf 92       	push	r11
     308:	cf 92       	push	r12
     30a:	df 92       	push	r13
     30c:	ef 92       	push	r14
     30e:	ff 92       	push	r15
     310:	cf 93       	push	r28
     312:	df 93       	push	r29
     314:	4b 01       	movw	r8, r22
     316:	5c 01       	movw	r10, r24
     318:	ea 01       	movw	r28, r20
	
	 int pp = pos;
	 writeChar( (num % 100) / 10 + '0', pp);
     31a:	24 e6       	ldi	r18, 0x64	; 100
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	40 e0       	ldi	r20, 0x00	; 0
     320:	50 e0       	ldi	r21, 0x00	; 0
     322:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <__divmodsi4>
     326:	0f 2e       	mov	r0, r31
     328:	fa e0       	ldi	r31, 0x0A	; 10
     32a:	cf 2e       	mov	r12, r31
     32c:	d1 2c       	mov	r13, r1
     32e:	e1 2c       	mov	r14, r1
     330:	f1 2c       	mov	r15, r1
     332:	f0 2d       	mov	r31, r0
     334:	a7 01       	movw	r20, r14
     336:	96 01       	movw	r18, r12
     338:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <__divmodsi4>
     33c:	be 01       	movw	r22, r28
     33e:	80 e3       	ldi	r24, 0x30	; 48
     340:	82 0f       	add	r24, r18
     342:	0e 94 57 00 	call	0xae	; 0xae <writeChar>
	 pp++;
     346:	21 96       	adiw	r28, 0x01	; 1
	 writeChar( num % 10 + '0', pp);
     348:	c5 01       	movw	r24, r10
     34a:	b4 01       	movw	r22, r8
     34c:	a7 01       	movw	r20, r14
     34e:	96 01       	movw	r18, r12
     350:	0e 94 f4 0e 	call	0x1de8	; 0x1de8 <__divmodsi4>
     354:	86 2f       	mov	r24, r22
     356:	be 01       	movw	r22, r28
     358:	80 5d       	subi	r24, 0xD0	; 208
     35a:	0e 94 57 00 	call	0xae	; 0xae <writeChar>

 }
     35e:	df 91       	pop	r29
     360:	cf 91       	pop	r28
     362:	ff 90       	pop	r15
     364:	ef 90       	pop	r14
     366:	df 90       	pop	r13
     368:	cf 90       	pop	r12
     36a:	bf 90       	pop	r11
     36c:	af 90       	pop	r10
     36e:	9f 90       	pop	r9
     370:	8f 90       	pop	r8
     372:	08 95       	ret

00000374 <LCD_Init>:
#include <avr/io.h>

 void LCD_Init(void)
 {
	 //setting for the AVR//
	 CLKPR = 0x80;
     374:	e1 e6       	ldi	r30, 0x61	; 97
     376:	f0 e0       	ldi	r31, 0x00	; 0
     378:	80 e8       	ldi	r24, 0x80	; 128
     37a:	80 83       	st	Z, r24
	 CLKPR = 0x00;
     37c:	10 82       	st	Z, r1
	 //external async clock, 1/3 bias, 1/4 duty cycle, 25 segments
	 LCDCRB = (1 << LCDCS) | (1 << LCDMUX0) | (1 << LCDMUX1) | (1 << LCDPM0) | (1 << LCDPM1) | (1 << LCDPM2);
     37e:	97 eb       	ldi	r25, 0xB7	; 183
     380:	90 93 e5 00 	sts	0x00E5, r25	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	 //clock divider N=8
	 LCDFRR = (1 << LCDCD0) | (1 << LCDCD1) | (1 << LCDCD2);
     384:	97 e0       	ldi	r25, 0x07	; 7
     386:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	 //LCD low power, no frame interrupt no blanking
	 LCDCRA = (1 << LCDEN) | (1 << LCDAB);
     38a:	90 ec       	ldi	r25, 0xC0	; 192
     38c:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
	 //Drive time 300ms, control voltage 3,35V
	 LCDCCR = (1 << LCDCC0) | (1 << LCDCC1) | (1 << LCDCC2) | (1 << LCDCC3);
     390:	9f e0       	ldi	r25, 0x0F	; 15
     392:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
	 //timer with prescaler 256
	 //TCCR1B = (1<<CS12);


	 //External input
	 EIMSK = (1 << PCIE1) | (1 << PCIE1);
     396:	8d bb       	out	0x1d, r24	; 29
	 PCMSK1 = (1 << PCINT15) | (1 << PCINT14) | (1 << PCINT12);
     398:	80 ed       	ldi	r24, 0xD0	; 208
     39a:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
	 PCMSK0 = (1 << PCINT2) | (1 << PCINT3);
     39e:	9c e0       	ldi	r25, 0x0C	; 12
     3a0:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
	 //activate the button
	 PORTB = (1 << PINB7) | (1 << PINB6) | (1 << PINB4);
     3a4:	85 b9       	out	0x05, r24	; 5
	 PORTE = (1 << PINE2) | (1 << PINE3) | (1 << PINE4) | (1 << PINE6);
     3a6:	8c e5       	ldi	r24, 0x5C	; 92
     3a8:	8e b9       	out	0x0e, r24	; 14
     3aa:	08 95       	ret

000003ac <pinBdoSOMETHING>:
#include "joystick.h"
#include "TinyTimber.h"
#include "pulse.h"
#include <avr/io.h>

void pinBdoSOMETHING(Joystick *self, int arg){
     3ac:	cf 93       	push	r28
     3ae:	df 93       	push	r29
     3b0:	ec 01       	movw	r28, r24

	if (!(PINB &(1<<PINB6))){
     3b2:	1e 99       	sbic	0x03, 6	; 3
     3b4:	06 c0       	rjmp	.+12     	; 0x3c2 <pinBdoSOMETHING+0x16>
		increaseFreq(self->current, 0);
     3b6:	60 e0       	ldi	r22, 0x00	; 0
     3b8:	70 e0       	ldi	r23, 0x00	; 0
     3ba:	88 85       	ldd	r24, Y+8	; 0x08
     3bc:	99 85       	ldd	r25, Y+9	; 0x09
     3be:	0e 94 5f 02 	call	0x4be	; 0x4be <increaseFreq>
	}
	if (!(PINB &(1<<PINB7))){
     3c2:	1f 99       	sbic	0x03, 7	; 3
     3c4:	06 c0       	rjmp	.+12     	; 0x3d2 <pinBdoSOMETHING+0x26>
		decreaseFreq(self->current, 0);
     3c6:	60 e0       	ldi	r22, 0x00	; 0
     3c8:	70 e0       	ldi	r23, 0x00	; 0
     3ca:	88 85       	ldd	r24, Y+8	; 0x08
     3cc:	99 85       	ldd	r25, Y+9	; 0x09
     3ce:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <decreaseFreq>
	}
	if (!(PINB &(1<<PINB4))){
     3d2:	1c 99       	sbic	0x03, 4	; 3
     3d4:	06 c0       	rjmp	.+12     	; 0x3e2 <pinBdoSOMETHING+0x36>
		memoryFreq(self->current, 0);
     3d6:	60 e0       	ldi	r22, 0x00	; 0
     3d8:	70 e0       	ldi	r23, 0x00	; 0
     3da:	88 85       	ldd	r24, Y+8	; 0x08
     3dc:	99 85       	ldd	r25, Y+9	; 0x09
     3de:	0e 94 75 02 	call	0x4ea	; 0x4ea <memoryFreq>
	}
	

}
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	08 95       	ret

000003e8 <pinEdoSOMETHING>:

void pinEdoSOMETHING(Joystick *self, int arg){
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	ec 01       	movw	r28, r24

	if (!(PINE &(1<<PINE2))){
     3ee:	62 99       	sbic	0x0c, 2	; 12
     3f0:	06 c0       	rjmp	.+12     	; 0x3fe <pinEdoSOMETHING+0x16>
		switchLeftPulse(self->current, 0);
     3f2:	60 e0       	ldi	r22, 0x00	; 0
     3f4:	70 e0       	ldi	r23, 0x00	; 0
     3f6:	88 85       	ldd	r24, Y+8	; 0x08
     3f8:	99 85       	ldd	r25, Y+9	; 0x09
     3fa:	0e 94 8e 02 	call	0x51c	; 0x51c <switchLeftPulse>
	}
	if (!(PINE &(1<<PINE3))){
     3fe:	63 99       	sbic	0x0c, 3	; 12
     400:	06 c0       	rjmp	.+12     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
		switchRightPulse(self->current, 0);
     402:	60 e0       	ldi	r22, 0x00	; 0
     404:	70 e0       	ldi	r23, 0x00	; 0
     406:	88 85       	ldd	r24, Y+8	; 0x08
     408:	99 85       	ldd	r25, Y+9	; 0x09
     40a:	0e 94 97 02 	call	0x52e	; 0x52e <switchRightPulse>
	}
	
     40e:	df 91       	pop	r29
     410:	cf 91       	pop	r28
     412:	08 95       	ret

00000414 <updateLCD>:
Pulse pulse2 = initPulse(0,4,0,0,&gui);

Joystick joy = initJoystick(&pulse1, &pulse2, &pulse1);


void updateLCD(Joystick *self, int arg){
     414:	cf 92       	push	r12
     416:	df 92       	push	r13
     418:	ef 92       	push	r14
     41a:	ff 92       	push	r15
     41c:	0f 93       	push	r16
     41e:	1f 93       	push	r17
     420:	cf 93       	push	r28
     422:	df 93       	push	r29
     424:	ec 01       	movw	r28, r24
	printAt(self->Pulse1->freq, self->Pulse1->position);
     426:	ec 81       	ldd	r30, Y+4	; 0x04
     428:	fd 81       	ldd	r31, Y+5	; 0x05
     42a:	46 81       	ldd	r20, Z+6	; 0x06
     42c:	57 81       	ldd	r21, Z+7	; 0x07
     42e:	64 81       	ldd	r22, Z+4	; 0x04
     430:	75 81       	ldd	r23, Z+5	; 0x05
     432:	07 2e       	mov	r0, r23
     434:	00 0c       	add	r0, r0
     436:	88 0b       	sbc	r24, r24
     438:	99 0b       	sbc	r25, r25
     43a:	0e 94 80 01 	call	0x300	; 0x300 <printAt>
	printAt(self->Pulse2->freq, self->Pulse2->position);
     43e:	ee 81       	ldd	r30, Y+6	; 0x06
     440:	ff 81       	ldd	r31, Y+7	; 0x07
     442:	46 81       	ldd	r20, Z+6	; 0x06
     444:	57 81       	ldd	r21, Z+7	; 0x07
     446:	64 81       	ldd	r22, Z+4	; 0x04
     448:	75 81       	ldd	r23, Z+5	; 0x05
     44a:	07 2e       	mov	r0, r23
     44c:	00 0c       	add	r0, r0
     44e:	88 0b       	sbc	r24, r24
     450:	99 0b       	sbc	r25, r25
     452:	0e 94 80 01 	call	0x300	; 0x300 <printAt>
	ASYNC(self, updateLCD, 0);
     456:	c1 2c       	mov	r12, r1
     458:	d1 2c       	mov	r13, r1
     45a:	0f 2e       	mov	r0, r31
     45c:	fa e0       	ldi	r31, 0x0A	; 10
     45e:	ef 2e       	mov	r14, r31
     460:	f2 e0       	ldi	r31, 0x02	; 2
     462:	ff 2e       	mov	r15, r31
     464:	f0 2d       	mov	r31, r0
     466:	8e 01       	movw	r16, r28
     468:	20 e0       	ldi	r18, 0x00	; 0
     46a:	30 e0       	ldi	r19, 0x00	; 0
     46c:	a9 01       	movw	r20, r18
     46e:	60 e0       	ldi	r22, 0x00	; 0
     470:	70 e0       	ldi	r23, 0x00	; 0
     472:	cb 01       	movw	r24, r22
     474:	0e 94 a3 0c 	call	0x1946	; 0x1946 <async>
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	0f 91       	pop	r16
     480:	ff 90       	pop	r15
     482:	ef 90       	pop	r14
     484:	df 90       	pop	r13
     486:	cf 90       	pop	r12
     488:	08 95       	ret

0000048a <main>:

int main(void)
{
	sei();
     48a:	78 94       	sei
	LCD_Init();
     48c:	0e 94 ba 01 	call	0x374	; 0x374 <LCD_Init>
	INSTALL(&joy, pinEdoSOMETHING ,IRQ_PCINT0);
     490:	41 e0       	ldi	r20, 0x01	; 1
     492:	64 ef       	ldi	r22, 0xF4	; 244
     494:	71 e0       	ldi	r23, 0x01	; 1
     496:	80 e0       	ldi	r24, 0x00	; 0
     498:	91 e0       	ldi	r25, 0x01	; 1
     49a:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <install>
	INSTALL(&joy, pinBdoSOMETHING ,IRQ_PCINT1);
     49e:	42 e0       	ldi	r20, 0x02	; 2
     4a0:	66 ed       	ldi	r22, 0xD6	; 214
     4a2:	71 e0       	ldi	r23, 0x01	; 1
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	91 e0       	ldi	r25, 0x01	; 1
     4a8:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <install>
	return TINYTIMBER(&joy,updateLCD,0);
     4ac:	40 e0       	ldi	r20, 0x00	; 0
     4ae:	50 e0       	ldi	r21, 0x00	; 0
     4b0:	6a e0       	ldi	r22, 0x0A	; 10
     4b2:	72 e0       	ldi	r23, 0x02	; 2
     4b4:	80 e0       	ldi	r24, 0x00	; 0
     4b6:	91 e0       	ldi	r25, 0x01	; 1
     4b8:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <tinytimber>
   
   /* TINYTIMBER( T *obj, int (*meth)(T*,A), A arg ); */

}
     4bc:	08 95       	ret

000004be <increaseFreq>:
#include "pulse.h"
#include "TinyTimber.h"
#include <avr/io.h>

void increaseFreq(Pulse *self, int arg){
	if (self->freq <= 98){
     4be:	fc 01       	movw	r30, r24
     4c0:	24 81       	ldd	r18, Z+4	; 0x04
     4c2:	35 81       	ldd	r19, Z+5	; 0x05
     4c4:	23 36       	cpi	r18, 0x63	; 99
     4c6:	31 05       	cpc	r19, r1
     4c8:	24 f4       	brge	.+8      	; 0x4d2 <increaseFreq+0x14>
		self->freq = self->freq+1;
     4ca:	2f 5f       	subi	r18, 0xFF	; 255
     4cc:	3f 4f       	sbci	r19, 0xFF	; 255
     4ce:	35 83       	std	Z+5, r19	; 0x05
     4d0:	24 83       	std	Z+4, r18	; 0x04
     4d2:	08 95       	ret

000004d4 <decreaseFreq>:
	}
}

void decreaseFreq(Pulse *self, int arg){
	if (self->freq >=1){
     4d4:	fc 01       	movw	r30, r24
     4d6:	24 81       	ldd	r18, Z+4	; 0x04
     4d8:	35 81       	ldd	r19, Z+5	; 0x05
     4da:	12 16       	cp	r1, r18
     4dc:	13 06       	cpc	r1, r19
     4de:	24 f4       	brge	.+8      	; 0x4e8 <decreaseFreq+0x14>
		self->freq = self->freq-1;
     4e0:	21 50       	subi	r18, 0x01	; 1
     4e2:	31 09       	sbc	r19, r1
     4e4:	35 83       	std	Z+5, r19	; 0x05
     4e6:	24 83       	std	Z+4, r18	; 0x04
     4e8:	08 95       	ret

000004ea <memoryFreq>:
	}
}

void memoryFreq(Pulse *self, int arg){
     4ea:	fc 01       	movw	r30, r24
	
	if ((self->freq != 0) && (self->memFlag == 0)){
     4ec:	84 81       	ldd	r24, Z+4	; 0x04
     4ee:	95 81       	ldd	r25, Z+5	; 0x05
     4f0:	00 97       	sbiw	r24, 0x00	; 0
     4f2:	69 f0       	breq	.+26     	; 0x50e <__stack+0xf>
     4f4:	22 85       	ldd	r18, Z+10	; 0x0a
     4f6:	33 85       	ldd	r19, Z+11	; 0x0b
     4f8:	23 2b       	or	r18, r19
     4fa:	49 f4       	brne	.+18     	; 0x50e <__stack+0xf>
		self->memory = self->freq;
     4fc:	91 87       	std	Z+9, r25	; 0x09
     4fe:	80 87       	std	Z+8, r24	; 0x08
		self->freq = 0;
     500:	15 82       	std	Z+5, r1	; 0x05
     502:	14 82       	std	Z+4, r1	; 0x04
		self->memFlag = 1;
     504:	81 e0       	ldi	r24, 0x01	; 1
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	93 87       	std	Z+11, r25	; 0x0b
     50a:	82 87       	std	Z+10, r24	; 0x0a
     50c:	08 95       	ret
	}else{
		self->freq = self->memory;
     50e:	80 85       	ldd	r24, Z+8	; 0x08
     510:	91 85       	ldd	r25, Z+9	; 0x09
     512:	95 83       	std	Z+5, r25	; 0x05
     514:	84 83       	std	Z+4, r24	; 0x04
		self->memFlag = 0;
     516:	13 86       	std	Z+11, r1	; 0x0b
     518:	12 86       	std	Z+10, r1	; 0x0a
     51a:	08 95       	ret

0000051c <switchLeftPulse>:
		
	}
}
void switchLeftPulse(Pulse *self, int arg){
	if(self->position == 4){
     51c:	fc 01       	movw	r30, r24
     51e:	26 81       	ldd	r18, Z+6	; 0x06
     520:	37 81       	ldd	r19, Z+7	; 0x07
     522:	24 30       	cpi	r18, 0x04	; 4
     524:	31 05       	cpc	r19, r1
     526:	11 f4       	brne	.+4      	; 0x52c <switchLeftPulse+0x10>
		self->position = 0;
     528:	17 82       	std	Z+7, r1	; 0x07
     52a:	16 82       	std	Z+6, r1	; 0x06
     52c:	08 95       	ret

0000052e <switchRightPulse>:
	}

}
void switchRightPulse(Pulse *self, int arg){
	if(self->position == 0){
     52e:	fc 01       	movw	r30, r24
     530:	26 81       	ldd	r18, Z+6	; 0x06
     532:	37 81       	ldd	r19, Z+7	; 0x07
     534:	23 2b       	or	r18, r19
     536:	21 f4       	brne	.+8      	; 0x540 <switchRightPulse+0x12>
		self->position = 4;
     538:	24 e0       	ldi	r18, 0x04	; 4
     53a:	30 e0       	ldi	r19, 0x00	; 0
     53c:	37 83       	std	Z+7, r19	; 0x07
     53e:	26 83       	std	Z+6, r18	; 0x06
     540:	08 95       	ret

00000542 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     542:	cf 93       	push	r28
     544:	df 93       	push	r29
     546:	00 d0       	rcall	.+0      	; 0x548 <initialize+0x6>
     548:	00 d0       	rcall	.+0      	; 0x54a <initialize+0x8>
     54a:	cd b7       	in	r28, 0x3d	; 61
     54c:	de b7       	in	r29, 0x3e	; 62
     54e:	89 e2       	ldi	r24, 0x29	; 41
     550:	92 e0       	ldi	r25, 0x02	; 2
     552:	29 e0       	ldi	r18, 0x09	; 9
     554:	33 e0       	ldi	r19, 0x03	; 3
     556:	fc 01       	movw	r30, r24
     558:	70 97       	sbiw	r30, 0x10	; 16
     55a:	91 83       	std	Z+1, r25	; 0x01
     55c:	80 83       	st	Z, r24
     55e:	40 96       	adiw	r24, 0x10	; 16
     560:	82 17       	cp	r24, r18
     562:	93 07       	cpc	r25, r19
     564:	c1 f7       	brne	.-16     	; 0x556 <initialize+0x14>
     566:	10 92 fa 02 	sts	0x02FA, r1	; 0x8002fa <messages+0xe1>
     56a:	10 92 f9 02 	sts	0x02F9, r1	; 0x8002f9 <messages+0xe0>
     56e:	e4 e6       	ldi	r30, 0x64	; 100
     570:	f1 e0       	ldi	r31, 0x01	; 1
     572:	81 e8       	ldi	r24, 0x81	; 129
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	91 83       	std	Z+1, r25	; 0x01
     578:	80 83       	st	Z, r24
     57a:	8e e9       	ldi	r24, 0x9E	; 158
     57c:	91 e0       	ldi	r25, 0x01	; 1
     57e:	96 8f       	std	Z+30, r25	; 0x1e
     580:	85 8f       	std	Z+29, r24	; 0x1d
     582:	ab eb       	ldi	r26, 0xBB	; 187
     584:	b1 e0       	ldi	r27, 0x01	; 1
     586:	b3 af       	std	Z+59, r27	; 0x3b
     588:	a2 af       	std	Z+58, r26	; 0x3a
     58a:	1d 92       	st	X+, r1
     58c:	1c 92       	st	X, r1
     58e:	fa 83       	std	Y+2, r31	; 0x02
     590:	e9 83       	std	Y+1, r30	; 0x01
     592:	e5 e6       	ldi	r30, 0x65	; 101
     594:	f3 e0       	ldi	r31, 0x03	; 3
     596:	fc 83       	std	Y+4, r31	; 0x04
     598:	eb 83       	std	Y+3, r30	; 0x03
     59a:	89 81       	ldd	r24, Y+1	; 0x01
     59c:	9a 81       	ldd	r25, Y+2	; 0x02
     59e:	06 96       	adiw	r24, 0x06	; 6
     5a0:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <setjmp>
     5a4:	8b 81       	ldd	r24, Y+3	; 0x03
     5a6:	9c 81       	ldd	r25, Y+4	; 0x04
     5a8:	e9 81       	ldd	r30, Y+1	; 0x01
     5aa:	fa 81       	ldd	r31, Y+2	; 0x02
     5ac:	97 8b       	std	Z+23, r25	; 0x17
     5ae:	86 8b       	std	Z+22, r24	; 0x16
     5b0:	91 8f       	std	Z+25, r25	; 0x19
     5b2:	80 8f       	std	Z+24, r24	; 0x18
     5b4:	85 e5       	ldi	r24, 0x55	; 85
     5b6:	9e e0       	ldi	r25, 0x0E	; 14
     5b8:	94 8f       	std	Z+28, r25	; 0x1c
     5ba:	83 8f       	std	Z+27, r24	; 0x1b
     5bc:	15 82       	std	Z+5, r1	; 0x05
     5be:	14 82       	std	Z+4, r1	; 0x04
     5c0:	7d 96       	adiw	r30, 0x1d	; 29
     5c2:	fa 83       	std	Y+2, r31	; 0x02
     5c4:	e9 83       	std	Y+1, r30	; 0x01
     5c6:	eb 81       	ldd	r30, Y+3	; 0x03
     5c8:	fc 81       	ldd	r31, Y+4	; 0x04
     5ca:	e0 5a       	subi	r30, 0xA0	; 160
     5cc:	ff 4f       	sbci	r31, 0xFF	; 255
     5ce:	fc 83       	std	Y+4, r31	; 0x04
     5d0:	eb 83       	std	Y+3, r30	; 0x03
     5d2:	89 81       	ldd	r24, Y+1	; 0x01
     5d4:	9a 81       	ldd	r25, Y+2	; 0x02
     5d6:	88 5d       	subi	r24, 0xD8	; 216
     5d8:	91 40       	sbci	r25, 0x01	; 1
     5da:	f9 f6       	brne	.-66     	; 0x59a <initialize+0x58>
     5dc:	ec ef       	ldi	r30, 0xFC	; 252
     5de:	f1 e0       	ldi	r31, 0x01	; 1
     5e0:	11 82       	std	Z+1, r1	; 0x01
     5e2:	10 82       	st	Z, r1
     5e4:	15 82       	std	Z+5, r1	; 0x05
     5e6:	14 82       	std	Z+4, r1	; 0x04
     5e8:	13 82       	std	Z+3, r1	; 0x03
     5ea:	12 82       	std	Z+2, r1	; 0x02
     5ec:	e1 e6       	ldi	r30, 0x61	; 97
     5ee:	f0 e0       	ldi	r31, 0x00	; 0
     5f0:	80 e8       	ldi	r24, 0x80	; 128
     5f2:	80 83       	st	Z, r24
     5f4:	10 82       	st	Z, r1
     5f6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     5fa:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     5fe:	84 e0       	ldi	r24, 0x04	; 4
     600:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     604:	81 e0       	ldi	r24, 0x01	; 1
     606:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     60a:	0f 90       	pop	r0
     60c:	0f 90       	pop	r0
     60e:	0f 90       	pop	r0
     610:	0f 90       	pop	r0
     612:	df 91       	pop	r29
     614:	cf 91       	pop	r28
     616:	08 95       	ret

00000618 <dispatch>:
     618:	cf 93       	push	r28
     61a:	df 93       	push	r29
     61c:	00 d0       	rcall	.+0      	; 0x61e <dispatch+0x6>
     61e:	cd b7       	in	r28, 0x3d	; 61
     620:	de b7       	in	r29, 0x3e	; 62
     622:	9a 83       	std	Y+2, r25	; 0x02
     624:	89 83       	std	Y+1, r24	; 0x01
     626:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <current>
     62a:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <current+0x1>
     62e:	06 96       	adiw	r24, 0x06	; 6
     630:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <setjmp>
     634:	89 2b       	or	r24, r25
     636:	59 f4       	brne	.+22     	; 0x64e <dispatch+0x36>
     638:	89 81       	ldd	r24, Y+1	; 0x01
     63a:	9a 81       	ldd	r25, Y+2	; 0x02
     63c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <current+0x1>
     640:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <current>
     644:	61 e0       	ldi	r22, 0x01	; 1
     646:	70 e0       	ldi	r23, 0x00	; 0
     648:	06 96       	adiw	r24, 0x06	; 6
     64a:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <longjmp>
     64e:	0f 90       	pop	r0
     650:	0f 90       	pop	r0
     652:	df 91       	pop	r29
     654:	cf 91       	pop	r28
     656:	08 95       	ret

00000658 <schedule>:
     658:	0f 93       	push	r16
     65a:	1f 93       	push	r17
     65c:	cf 93       	push	r28
     65e:	df 93       	push	r29
     660:	c0 91 28 01 	lds	r28, 0x0128	; 0x800128 <activeStack>
     664:	d0 91 29 01 	lds	r29, 0x0129	; 0x800129 <activeStack+0x1>
     668:	aa 81       	ldd	r26, Y+2	; 0x02
     66a:	bb 81       	ldd	r27, Y+3	; 0x03
     66c:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <msgQ>
     670:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <msgQ+0x1>
     674:	30 97       	sbiw	r30, 0x00	; 0
     676:	31 f1       	breq	.+76     	; 0x6c4 <schedule+0x6c>
     678:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <threadPool>
     67c:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <threadPool+0x1>
     680:	00 97       	sbiw	r24, 0x00	; 0
     682:	01 f1       	breq	.+64     	; 0x6c4 <schedule+0x6c>
     684:	10 97       	sbiw	r26, 0x00	; 0
     686:	79 f0       	breq	.+30     	; 0x6a6 <schedule+0x4e>
     688:	46 81       	ldd	r20, Z+6	; 0x06
     68a:	57 81       	ldd	r21, Z+7	; 0x07
     68c:	60 85       	ldd	r22, Z+8	; 0x08
     68e:	71 85       	ldd	r23, Z+9	; 0x09
     690:	16 96       	adiw	r26, 0x06	; 6
     692:	0d 91       	ld	r16, X+
     694:	1d 91       	ld	r17, X+
     696:	2d 91       	ld	r18, X+
     698:	3c 91       	ld	r19, X
     69a:	19 97       	sbiw	r26, 0x09	; 9
     69c:	40 1b       	sub	r20, r16
     69e:	51 0b       	sbc	r21, r17
     6a0:	62 0b       	sbc	r22, r18
     6a2:	73 0b       	sbc	r23, r19
     6a4:	7a f4       	brpl	.+30     	; 0x6c4 <schedule+0x6c>
     6a6:	fc 01       	movw	r30, r24
     6a8:	20 81       	ld	r18, Z
     6aa:	31 81       	ldd	r19, Z+1	; 0x01
     6ac:	30 93 2b 01 	sts	0x012B, r19	; 0x80012b <threadPool+0x1>
     6b0:	20 93 2a 01 	sts	0x012A, r18	; 0x80012a <threadPool>
     6b4:	d1 83       	std	Z+1, r29	; 0x01
     6b6:	c0 83       	st	Z, r28
     6b8:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <activeStack+0x1>
     6bc:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <activeStack>
     6c0:	0e 94 0c 03 	call	0x618	; 0x618 <dispatch>
     6c4:	df 91       	pop	r29
     6c6:	cf 91       	pop	r28
     6c8:	1f 91       	pop	r17
     6ca:	0f 91       	pop	r16
     6cc:	08 95       	ret

000006ce <__vector_1>:
     6ce:	1f 92       	push	r1
     6d0:	0f 92       	push	r0
     6d2:	0f b6       	in	r0, 0x3f	; 63
     6d4:	0f 92       	push	r0
     6d6:	11 24       	eor	r1, r1
     6d8:	2f 93       	push	r18
     6da:	3f 93       	push	r19
     6dc:	4f 93       	push	r20
     6de:	5f 93       	push	r21
     6e0:	6f 93       	push	r22
     6e2:	7f 93       	push	r23
     6e4:	8f 93       	push	r24
     6e6:	9f 93       	push	r25
     6e8:	af 93       	push	r26
     6ea:	bf 93       	push	r27
     6ec:	ef 93       	push	r30
     6ee:	ff 93       	push	r31
     6f0:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     6f4:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     6f8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     6fc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     700:	c9 01       	movw	r24, r18
     702:	03 2e       	mov	r0, r19
     704:	00 0c       	add	r0, r0
     706:	aa 0b       	sbc	r26, r26
     708:	bb 0b       	sbc	r27, r27
     70a:	dc 01       	movw	r26, r24
     70c:	99 27       	eor	r25, r25
     70e:	88 27       	eor	r24, r24
     710:	60 e0       	ldi	r22, 0x00	; 0
     712:	70 e0       	ldi	r23, 0x00	; 0
     714:	84 2b       	or	r24, r20
     716:	95 2b       	or	r25, r21
     718:	a6 2b       	or	r26, r22
     71a:	b7 2b       	or	r27, r23
     71c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     720:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     724:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     728:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     72c:	b0 9b       	sbis	0x16, 0	; 22
     72e:	1b c0       	rjmp	.+54     	; 0x766 <__vector_1+0x98>
     730:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     734:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     738:	c9 01       	movw	r24, r18
     73a:	01 96       	adiw	r24, 0x01	; 1
     73c:	09 2e       	mov	r0, r25
     73e:	00 0c       	add	r0, r0
     740:	aa 0b       	sbc	r26, r26
     742:	bb 0b       	sbc	r27, r27
     744:	dc 01       	movw	r26, r24
     746:	99 27       	eor	r25, r25
     748:	88 27       	eor	r24, r24
     74a:	60 e0       	ldi	r22, 0x00	; 0
     74c:	70 e0       	ldi	r23, 0x00	; 0
     74e:	84 2b       	or	r24, r20
     750:	95 2b       	or	r25, r21
     752:	a6 2b       	or	r26, r22
     754:	b7 2b       	or	r27, r23
     756:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     75a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     75e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     762:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     766:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable>
     76a:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x1>
     76e:	30 97       	sbiw	r30, 0x00	; 0
     770:	39 f0       	breq	.+14     	; 0x780 <__vector_1+0xb2>
     772:	60 e0       	ldi	r22, 0x00	; 0
     774:	70 e0       	ldi	r23, 0x00	; 0
     776:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable>
     77a:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x1>
     77e:	09 95       	icall
     780:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
     784:	ff 91       	pop	r31
     786:	ef 91       	pop	r30
     788:	bf 91       	pop	r27
     78a:	af 91       	pop	r26
     78c:	9f 91       	pop	r25
     78e:	8f 91       	pop	r24
     790:	7f 91       	pop	r23
     792:	6f 91       	pop	r22
     794:	5f 91       	pop	r21
     796:	4f 91       	pop	r20
     798:	3f 91       	pop	r19
     79a:	2f 91       	pop	r18
     79c:	0f 90       	pop	r0
     79e:	0f be       	out	0x3f, r0	; 63
     7a0:	0f 90       	pop	r0
     7a2:	1f 90       	pop	r1
     7a4:	18 95       	reti

000007a6 <__vector_2>:
     7a6:	1f 92       	push	r1
     7a8:	0f 92       	push	r0
     7aa:	0f b6       	in	r0, 0x3f	; 63
     7ac:	0f 92       	push	r0
     7ae:	11 24       	eor	r1, r1
     7b0:	2f 93       	push	r18
     7b2:	3f 93       	push	r19
     7b4:	4f 93       	push	r20
     7b6:	5f 93       	push	r21
     7b8:	6f 93       	push	r22
     7ba:	7f 93       	push	r23
     7bc:	8f 93       	push	r24
     7be:	9f 93       	push	r25
     7c0:	af 93       	push	r26
     7c2:	bf 93       	push	r27
     7c4:	ef 93       	push	r30
     7c6:	ff 93       	push	r31
     7c8:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     7cc:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     7d0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     7d4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     7d8:	c9 01       	movw	r24, r18
     7da:	03 2e       	mov	r0, r19
     7dc:	00 0c       	add	r0, r0
     7de:	aa 0b       	sbc	r26, r26
     7e0:	bb 0b       	sbc	r27, r27
     7e2:	dc 01       	movw	r26, r24
     7e4:	99 27       	eor	r25, r25
     7e6:	88 27       	eor	r24, r24
     7e8:	60 e0       	ldi	r22, 0x00	; 0
     7ea:	70 e0       	ldi	r23, 0x00	; 0
     7ec:	84 2b       	or	r24, r20
     7ee:	95 2b       	or	r25, r21
     7f0:	a6 2b       	or	r26, r22
     7f2:	b7 2b       	or	r27, r23
     7f4:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     7f8:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     7fc:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     800:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     804:	b0 9b       	sbis	0x16, 0	; 22
     806:	1b c0       	rjmp	.+54     	; 0x83e <__vector_2+0x98>
     808:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     80c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     810:	c9 01       	movw	r24, r18
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	09 2e       	mov	r0, r25
     816:	00 0c       	add	r0, r0
     818:	aa 0b       	sbc	r26, r26
     81a:	bb 0b       	sbc	r27, r27
     81c:	dc 01       	movw	r26, r24
     81e:	99 27       	eor	r25, r25
     820:	88 27       	eor	r24, r24
     822:	60 e0       	ldi	r22, 0x00	; 0
     824:	70 e0       	ldi	r23, 0x00	; 0
     826:	84 2b       	or	r24, r20
     828:	95 2b       	or	r25, r21
     82a:	a6 2b       	or	r26, r22
     82c:	b7 2b       	or	r27, r23
     82e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     832:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     836:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     83a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     83e:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x2>
     842:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x3>
     846:	30 97       	sbiw	r30, 0x00	; 0
     848:	39 f0       	breq	.+14     	; 0x858 <__vector_2+0xb2>
     84a:	61 e0       	ldi	r22, 0x01	; 1
     84c:	70 e0       	ldi	r23, 0x00	; 0
     84e:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x2>
     852:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x3>
     856:	09 95       	icall
     858:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
     85c:	ff 91       	pop	r31
     85e:	ef 91       	pop	r30
     860:	bf 91       	pop	r27
     862:	af 91       	pop	r26
     864:	9f 91       	pop	r25
     866:	8f 91       	pop	r24
     868:	7f 91       	pop	r23
     86a:	6f 91       	pop	r22
     86c:	5f 91       	pop	r21
     86e:	4f 91       	pop	r20
     870:	3f 91       	pop	r19
     872:	2f 91       	pop	r18
     874:	0f 90       	pop	r0
     876:	0f be       	out	0x3f, r0	; 63
     878:	0f 90       	pop	r0
     87a:	1f 90       	pop	r1
     87c:	18 95       	reti

0000087e <__vector_3>:
     87e:	1f 92       	push	r1
     880:	0f 92       	push	r0
     882:	0f b6       	in	r0, 0x3f	; 63
     884:	0f 92       	push	r0
     886:	11 24       	eor	r1, r1
     888:	2f 93       	push	r18
     88a:	3f 93       	push	r19
     88c:	4f 93       	push	r20
     88e:	5f 93       	push	r21
     890:	6f 93       	push	r22
     892:	7f 93       	push	r23
     894:	8f 93       	push	r24
     896:	9f 93       	push	r25
     898:	af 93       	push	r26
     89a:	bf 93       	push	r27
     89c:	ef 93       	push	r30
     89e:	ff 93       	push	r31
     8a0:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     8a4:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     8a8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     8ac:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     8b0:	c9 01       	movw	r24, r18
     8b2:	03 2e       	mov	r0, r19
     8b4:	00 0c       	add	r0, r0
     8b6:	aa 0b       	sbc	r26, r26
     8b8:	bb 0b       	sbc	r27, r27
     8ba:	dc 01       	movw	r26, r24
     8bc:	99 27       	eor	r25, r25
     8be:	88 27       	eor	r24, r24
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	70 e0       	ldi	r23, 0x00	; 0
     8c4:	84 2b       	or	r24, r20
     8c6:	95 2b       	or	r25, r21
     8c8:	a6 2b       	or	r26, r22
     8ca:	b7 2b       	or	r27, r23
     8cc:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     8d0:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     8d4:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     8d8:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     8dc:	b0 9b       	sbis	0x16, 0	; 22
     8de:	1b c0       	rjmp	.+54     	; 0x916 <__vector_3+0x98>
     8e0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     8e4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     8e8:	c9 01       	movw	r24, r18
     8ea:	01 96       	adiw	r24, 0x01	; 1
     8ec:	09 2e       	mov	r0, r25
     8ee:	00 0c       	add	r0, r0
     8f0:	aa 0b       	sbc	r26, r26
     8f2:	bb 0b       	sbc	r27, r27
     8f4:	dc 01       	movw	r26, r24
     8f6:	99 27       	eor	r25, r25
     8f8:	88 27       	eor	r24, r24
     8fa:	60 e0       	ldi	r22, 0x00	; 0
     8fc:	70 e0       	ldi	r23, 0x00	; 0
     8fe:	84 2b       	or	r24, r20
     900:	95 2b       	or	r25, r21
     902:	a6 2b       	or	r26, r22
     904:	b7 2b       	or	r27, r23
     906:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     90a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     90e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     912:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     916:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x4>
     91a:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x5>
     91e:	30 97       	sbiw	r30, 0x00	; 0
     920:	39 f0       	breq	.+14     	; 0x930 <__vector_3+0xb2>
     922:	62 e0       	ldi	r22, 0x02	; 2
     924:	70 e0       	ldi	r23, 0x00	; 0
     926:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x4>
     92a:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x5>
     92e:	09 95       	icall
     930:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
     934:	ff 91       	pop	r31
     936:	ef 91       	pop	r30
     938:	bf 91       	pop	r27
     93a:	af 91       	pop	r26
     93c:	9f 91       	pop	r25
     93e:	8f 91       	pop	r24
     940:	7f 91       	pop	r23
     942:	6f 91       	pop	r22
     944:	5f 91       	pop	r21
     946:	4f 91       	pop	r20
     948:	3f 91       	pop	r19
     94a:	2f 91       	pop	r18
     94c:	0f 90       	pop	r0
     94e:	0f be       	out	0x3f, r0	; 63
     950:	0f 90       	pop	r0
     952:	1f 90       	pop	r1
     954:	18 95       	reti

00000956 <__vector_4>:
     956:	1f 92       	push	r1
     958:	0f 92       	push	r0
     95a:	0f b6       	in	r0, 0x3f	; 63
     95c:	0f 92       	push	r0
     95e:	11 24       	eor	r1, r1
     960:	2f 93       	push	r18
     962:	3f 93       	push	r19
     964:	4f 93       	push	r20
     966:	5f 93       	push	r21
     968:	6f 93       	push	r22
     96a:	7f 93       	push	r23
     96c:	8f 93       	push	r24
     96e:	9f 93       	push	r25
     970:	af 93       	push	r26
     972:	bf 93       	push	r27
     974:	ef 93       	push	r30
     976:	ff 93       	push	r31
     978:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     97c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     980:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     984:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     988:	c9 01       	movw	r24, r18
     98a:	03 2e       	mov	r0, r19
     98c:	00 0c       	add	r0, r0
     98e:	aa 0b       	sbc	r26, r26
     990:	bb 0b       	sbc	r27, r27
     992:	dc 01       	movw	r26, r24
     994:	99 27       	eor	r25, r25
     996:	88 27       	eor	r24, r24
     998:	60 e0       	ldi	r22, 0x00	; 0
     99a:	70 e0       	ldi	r23, 0x00	; 0
     99c:	84 2b       	or	r24, r20
     99e:	95 2b       	or	r25, r21
     9a0:	a6 2b       	or	r26, r22
     9a2:	b7 2b       	or	r27, r23
     9a4:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     9a8:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     9ac:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     9b0:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     9b4:	b0 9b       	sbis	0x16, 0	; 22
     9b6:	1b c0       	rjmp	.+54     	; 0x9ee <__vector_4+0x98>
     9b8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     9bc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     9c0:	c9 01       	movw	r24, r18
     9c2:	01 96       	adiw	r24, 0x01	; 1
     9c4:	09 2e       	mov	r0, r25
     9c6:	00 0c       	add	r0, r0
     9c8:	aa 0b       	sbc	r26, r26
     9ca:	bb 0b       	sbc	r27, r27
     9cc:	dc 01       	movw	r26, r24
     9ce:	99 27       	eor	r25, r25
     9d0:	88 27       	eor	r24, r24
     9d2:	60 e0       	ldi	r22, 0x00	; 0
     9d4:	70 e0       	ldi	r23, 0x00	; 0
     9d6:	84 2b       	or	r24, r20
     9d8:	95 2b       	or	r25, r21
     9da:	a6 2b       	or	r26, r22
     9dc:	b7 2b       	or	r27, r23
     9de:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     9e2:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     9e6:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     9ea:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     9ee:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x6>
     9f2:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x7>
     9f6:	30 97       	sbiw	r30, 0x00	; 0
     9f8:	39 f0       	breq	.+14     	; 0xa08 <__vector_4+0xb2>
     9fa:	63 e0       	ldi	r22, 0x03	; 3
     9fc:	70 e0       	ldi	r23, 0x00	; 0
     9fe:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x6>
     a02:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x7>
     a06:	09 95       	icall
     a08:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
     a0c:	ff 91       	pop	r31
     a0e:	ef 91       	pop	r30
     a10:	bf 91       	pop	r27
     a12:	af 91       	pop	r26
     a14:	9f 91       	pop	r25
     a16:	8f 91       	pop	r24
     a18:	7f 91       	pop	r23
     a1a:	6f 91       	pop	r22
     a1c:	5f 91       	pop	r21
     a1e:	4f 91       	pop	r20
     a20:	3f 91       	pop	r19
     a22:	2f 91       	pop	r18
     a24:	0f 90       	pop	r0
     a26:	0f be       	out	0x3f, r0	; 63
     a28:	0f 90       	pop	r0
     a2a:	1f 90       	pop	r1
     a2c:	18 95       	reti

00000a2e <__vector_5>:
     a2e:	1f 92       	push	r1
     a30:	0f 92       	push	r0
     a32:	0f b6       	in	r0, 0x3f	; 63
     a34:	0f 92       	push	r0
     a36:	11 24       	eor	r1, r1
     a38:	2f 93       	push	r18
     a3a:	3f 93       	push	r19
     a3c:	4f 93       	push	r20
     a3e:	5f 93       	push	r21
     a40:	6f 93       	push	r22
     a42:	7f 93       	push	r23
     a44:	8f 93       	push	r24
     a46:	9f 93       	push	r25
     a48:	af 93       	push	r26
     a4a:	bf 93       	push	r27
     a4c:	ef 93       	push	r30
     a4e:	ff 93       	push	r31
     a50:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     a54:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     a58:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     a5c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     a60:	c9 01       	movw	r24, r18
     a62:	03 2e       	mov	r0, r19
     a64:	00 0c       	add	r0, r0
     a66:	aa 0b       	sbc	r26, r26
     a68:	bb 0b       	sbc	r27, r27
     a6a:	dc 01       	movw	r26, r24
     a6c:	99 27       	eor	r25, r25
     a6e:	88 27       	eor	r24, r24
     a70:	60 e0       	ldi	r22, 0x00	; 0
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	84 2b       	or	r24, r20
     a76:	95 2b       	or	r25, r21
     a78:	a6 2b       	or	r26, r22
     a7a:	b7 2b       	or	r27, r23
     a7c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     a80:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     a84:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     a88:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     a8c:	b0 9b       	sbis	0x16, 0	; 22
     a8e:	1b c0       	rjmp	.+54     	; 0xac6 <__vector_5+0x98>
     a90:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     a94:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     a98:	c9 01       	movw	r24, r18
     a9a:	01 96       	adiw	r24, 0x01	; 1
     a9c:	09 2e       	mov	r0, r25
     a9e:	00 0c       	add	r0, r0
     aa0:	aa 0b       	sbc	r26, r26
     aa2:	bb 0b       	sbc	r27, r27
     aa4:	dc 01       	movw	r26, r24
     aa6:	99 27       	eor	r25, r25
     aa8:	88 27       	eor	r24, r24
     aaa:	60 e0       	ldi	r22, 0x00	; 0
     aac:	70 e0       	ldi	r23, 0x00	; 0
     aae:	84 2b       	or	r24, r20
     ab0:	95 2b       	or	r25, r21
     ab2:	a6 2b       	or	r26, r22
     ab4:	b7 2b       	or	r27, r23
     ab6:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     aba:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     abe:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     ac2:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     ac6:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x8>
     aca:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x9>
     ace:	30 97       	sbiw	r30, 0x00	; 0
     ad0:	39 f0       	breq	.+14     	; 0xae0 <__vector_5+0xb2>
     ad2:	64 e0       	ldi	r22, 0x04	; 4
     ad4:	70 e0       	ldi	r23, 0x00	; 0
     ad6:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x8>
     ada:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x9>
     ade:	09 95       	icall
     ae0:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
     ae4:	ff 91       	pop	r31
     ae6:	ef 91       	pop	r30
     ae8:	bf 91       	pop	r27
     aea:	af 91       	pop	r26
     aec:	9f 91       	pop	r25
     aee:	8f 91       	pop	r24
     af0:	7f 91       	pop	r23
     af2:	6f 91       	pop	r22
     af4:	5f 91       	pop	r21
     af6:	4f 91       	pop	r20
     af8:	3f 91       	pop	r19
     afa:	2f 91       	pop	r18
     afc:	0f 90       	pop	r0
     afe:	0f be       	out	0x3f, r0	; 63
     b00:	0f 90       	pop	r0
     b02:	1f 90       	pop	r1
     b04:	18 95       	reti

00000b06 <__vector_10>:
     b06:	1f 92       	push	r1
     b08:	0f 92       	push	r0
     b0a:	0f b6       	in	r0, 0x3f	; 63
     b0c:	0f 92       	push	r0
     b0e:	11 24       	eor	r1, r1
     b10:	2f 93       	push	r18
     b12:	3f 93       	push	r19
     b14:	4f 93       	push	r20
     b16:	5f 93       	push	r21
     b18:	6f 93       	push	r22
     b1a:	7f 93       	push	r23
     b1c:	8f 93       	push	r24
     b1e:	9f 93       	push	r25
     b20:	af 93       	push	r26
     b22:	bf 93       	push	r27
     b24:	ef 93       	push	r30
     b26:	ff 93       	push	r31
     b28:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     b2c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     b30:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     b34:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     b38:	c9 01       	movw	r24, r18
     b3a:	03 2e       	mov	r0, r19
     b3c:	00 0c       	add	r0, r0
     b3e:	aa 0b       	sbc	r26, r26
     b40:	bb 0b       	sbc	r27, r27
     b42:	dc 01       	movw	r26, r24
     b44:	99 27       	eor	r25, r25
     b46:	88 27       	eor	r24, r24
     b48:	60 e0       	ldi	r22, 0x00	; 0
     b4a:	70 e0       	ldi	r23, 0x00	; 0
     b4c:	84 2b       	or	r24, r20
     b4e:	95 2b       	or	r25, r21
     b50:	a6 2b       	or	r26, r22
     b52:	b7 2b       	or	r27, r23
     b54:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     b58:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     b5c:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     b60:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     b64:	b0 9b       	sbis	0x16, 0	; 22
     b66:	1b c0       	rjmp	.+54     	; 0xb9e <__vector_10+0x98>
     b68:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     b6c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     b70:	c9 01       	movw	r24, r18
     b72:	01 96       	adiw	r24, 0x01	; 1
     b74:	09 2e       	mov	r0, r25
     b76:	00 0c       	add	r0, r0
     b78:	aa 0b       	sbc	r26, r26
     b7a:	bb 0b       	sbc	r27, r27
     b7c:	dc 01       	movw	r26, r24
     b7e:	99 27       	eor	r25, r25
     b80:	88 27       	eor	r24, r24
     b82:	60 e0       	ldi	r22, 0x00	; 0
     b84:	70 e0       	ldi	r23, 0x00	; 0
     b86:	84 2b       	or	r24, r20
     b88:	95 2b       	or	r25, r21
     b8a:	a6 2b       	or	r26, r22
     b8c:	b7 2b       	or	r27, r23
     b8e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     b92:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     b96:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     b9a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     b9e:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0xa>
     ba2:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0xb>
     ba6:	30 97       	sbiw	r30, 0x00	; 0
     ba8:	39 f0       	breq	.+14     	; 0xbb8 <__vector_10+0xb2>
     baa:	65 e0       	ldi	r22, 0x05	; 5
     bac:	70 e0       	ldi	r23, 0x00	; 0
     bae:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0xa>
     bb2:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0xb>
     bb6:	09 95       	icall
     bb8:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
     bbc:	ff 91       	pop	r31
     bbe:	ef 91       	pop	r30
     bc0:	bf 91       	pop	r27
     bc2:	af 91       	pop	r26
     bc4:	9f 91       	pop	r25
     bc6:	8f 91       	pop	r24
     bc8:	7f 91       	pop	r23
     bca:	6f 91       	pop	r22
     bcc:	5f 91       	pop	r21
     bce:	4f 91       	pop	r20
     bd0:	3f 91       	pop	r19
     bd2:	2f 91       	pop	r18
     bd4:	0f 90       	pop	r0
     bd6:	0f be       	out	0x3f, r0	; 63
     bd8:	0f 90       	pop	r0
     bda:	1f 90       	pop	r1
     bdc:	18 95       	reti

00000bde <__vector_11>:
     bde:	1f 92       	push	r1
     be0:	0f 92       	push	r0
     be2:	0f b6       	in	r0, 0x3f	; 63
     be4:	0f 92       	push	r0
     be6:	11 24       	eor	r1, r1
     be8:	2f 93       	push	r18
     bea:	3f 93       	push	r19
     bec:	4f 93       	push	r20
     bee:	5f 93       	push	r21
     bf0:	6f 93       	push	r22
     bf2:	7f 93       	push	r23
     bf4:	8f 93       	push	r24
     bf6:	9f 93       	push	r25
     bf8:	af 93       	push	r26
     bfa:	bf 93       	push	r27
     bfc:	ef 93       	push	r30
     bfe:	ff 93       	push	r31
     c00:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     c04:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     c08:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c0c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c10:	c9 01       	movw	r24, r18
     c12:	03 2e       	mov	r0, r19
     c14:	00 0c       	add	r0, r0
     c16:	aa 0b       	sbc	r26, r26
     c18:	bb 0b       	sbc	r27, r27
     c1a:	dc 01       	movw	r26, r24
     c1c:	99 27       	eor	r25, r25
     c1e:	88 27       	eor	r24, r24
     c20:	60 e0       	ldi	r22, 0x00	; 0
     c22:	70 e0       	ldi	r23, 0x00	; 0
     c24:	84 2b       	or	r24, r20
     c26:	95 2b       	or	r25, r21
     c28:	a6 2b       	or	r26, r22
     c2a:	b7 2b       	or	r27, r23
     c2c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     c30:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     c34:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     c38:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     c3c:	b0 9b       	sbis	0x16, 0	; 22
     c3e:	1b c0       	rjmp	.+54     	; 0xc76 <__vector_11+0x98>
     c40:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c44:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c48:	c9 01       	movw	r24, r18
     c4a:	01 96       	adiw	r24, 0x01	; 1
     c4c:	09 2e       	mov	r0, r25
     c4e:	00 0c       	add	r0, r0
     c50:	aa 0b       	sbc	r26, r26
     c52:	bb 0b       	sbc	r27, r27
     c54:	dc 01       	movw	r26, r24
     c56:	99 27       	eor	r25, r25
     c58:	88 27       	eor	r24, r24
     c5a:	60 e0       	ldi	r22, 0x00	; 0
     c5c:	70 e0       	ldi	r23, 0x00	; 0
     c5e:	84 2b       	or	r24, r20
     c60:	95 2b       	or	r25, r21
     c62:	a6 2b       	or	r26, r22
     c64:	b7 2b       	or	r27, r23
     c66:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     c6a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     c6e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     c72:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     c76:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xc>
     c7a:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xd>
     c7e:	30 97       	sbiw	r30, 0x00	; 0
     c80:	39 f0       	breq	.+14     	; 0xc90 <__vector_11+0xb2>
     c82:	66 e0       	ldi	r22, 0x06	; 6
     c84:	70 e0       	ldi	r23, 0x00	; 0
     c86:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xc>
     c8a:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xd>
     c8e:	09 95       	icall
     c90:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
     c94:	ff 91       	pop	r31
     c96:	ef 91       	pop	r30
     c98:	bf 91       	pop	r27
     c9a:	af 91       	pop	r26
     c9c:	9f 91       	pop	r25
     c9e:	8f 91       	pop	r24
     ca0:	7f 91       	pop	r23
     ca2:	6f 91       	pop	r22
     ca4:	5f 91       	pop	r21
     ca6:	4f 91       	pop	r20
     ca8:	3f 91       	pop	r19
     caa:	2f 91       	pop	r18
     cac:	0f 90       	pop	r0
     cae:	0f be       	out	0x3f, r0	; 63
     cb0:	0f 90       	pop	r0
     cb2:	1f 90       	pop	r1
     cb4:	18 95       	reti

00000cb6 <__vector_12>:
     cb6:	1f 92       	push	r1
     cb8:	0f 92       	push	r0
     cba:	0f b6       	in	r0, 0x3f	; 63
     cbc:	0f 92       	push	r0
     cbe:	11 24       	eor	r1, r1
     cc0:	2f 93       	push	r18
     cc2:	3f 93       	push	r19
     cc4:	4f 93       	push	r20
     cc6:	5f 93       	push	r21
     cc8:	6f 93       	push	r22
     cca:	7f 93       	push	r23
     ccc:	8f 93       	push	r24
     cce:	9f 93       	push	r25
     cd0:	af 93       	push	r26
     cd2:	bf 93       	push	r27
     cd4:	ef 93       	push	r30
     cd6:	ff 93       	push	r31
     cd8:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     cdc:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     ce0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     ce4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     ce8:	c9 01       	movw	r24, r18
     cea:	03 2e       	mov	r0, r19
     cec:	00 0c       	add	r0, r0
     cee:	aa 0b       	sbc	r26, r26
     cf0:	bb 0b       	sbc	r27, r27
     cf2:	dc 01       	movw	r26, r24
     cf4:	99 27       	eor	r25, r25
     cf6:	88 27       	eor	r24, r24
     cf8:	60 e0       	ldi	r22, 0x00	; 0
     cfa:	70 e0       	ldi	r23, 0x00	; 0
     cfc:	84 2b       	or	r24, r20
     cfe:	95 2b       	or	r25, r21
     d00:	a6 2b       	or	r26, r22
     d02:	b7 2b       	or	r27, r23
     d04:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     d08:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     d0c:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     d10:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     d14:	b0 9b       	sbis	0x16, 0	; 22
     d16:	1b c0       	rjmp	.+54     	; 0xd4e <__vector_12+0x98>
     d18:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     d1c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     d20:	c9 01       	movw	r24, r18
     d22:	01 96       	adiw	r24, 0x01	; 1
     d24:	09 2e       	mov	r0, r25
     d26:	00 0c       	add	r0, r0
     d28:	aa 0b       	sbc	r26, r26
     d2a:	bb 0b       	sbc	r27, r27
     d2c:	dc 01       	movw	r26, r24
     d2e:	99 27       	eor	r25, r25
     d30:	88 27       	eor	r24, r24
     d32:	60 e0       	ldi	r22, 0x00	; 0
     d34:	70 e0       	ldi	r23, 0x00	; 0
     d36:	84 2b       	or	r24, r20
     d38:	95 2b       	or	r25, r21
     d3a:	a6 2b       	or	r26, r22
     d3c:	b7 2b       	or	r27, r23
     d3e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     d42:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     d46:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     d4a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     d4e:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xe>
     d52:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xf>
     d56:	30 97       	sbiw	r30, 0x00	; 0
     d58:	39 f0       	breq	.+14     	; 0xd68 <__vector_12+0xb2>
     d5a:	67 e0       	ldi	r22, 0x07	; 7
     d5c:	70 e0       	ldi	r23, 0x00	; 0
     d5e:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xe>
     d62:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xf>
     d66:	09 95       	icall
     d68:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
     d6c:	ff 91       	pop	r31
     d6e:	ef 91       	pop	r30
     d70:	bf 91       	pop	r27
     d72:	af 91       	pop	r26
     d74:	9f 91       	pop	r25
     d76:	8f 91       	pop	r24
     d78:	7f 91       	pop	r23
     d7a:	6f 91       	pop	r22
     d7c:	5f 91       	pop	r21
     d7e:	4f 91       	pop	r20
     d80:	3f 91       	pop	r19
     d82:	2f 91       	pop	r18
     d84:	0f 90       	pop	r0
     d86:	0f be       	out	0x3f, r0	; 63
     d88:	0f 90       	pop	r0
     d8a:	1f 90       	pop	r1
     d8c:	18 95       	reti

00000d8e <__vector_13>:
     d8e:	1f 92       	push	r1
     d90:	0f 92       	push	r0
     d92:	0f b6       	in	r0, 0x3f	; 63
     d94:	0f 92       	push	r0
     d96:	11 24       	eor	r1, r1
     d98:	2f 93       	push	r18
     d9a:	3f 93       	push	r19
     d9c:	4f 93       	push	r20
     d9e:	5f 93       	push	r21
     da0:	6f 93       	push	r22
     da2:	7f 93       	push	r23
     da4:	8f 93       	push	r24
     da6:	9f 93       	push	r25
     da8:	af 93       	push	r26
     daa:	bf 93       	push	r27
     dac:	ef 93       	push	r30
     dae:	ff 93       	push	r31
     db0:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     db4:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     db8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     dbc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     dc0:	c9 01       	movw	r24, r18
     dc2:	03 2e       	mov	r0, r19
     dc4:	00 0c       	add	r0, r0
     dc6:	aa 0b       	sbc	r26, r26
     dc8:	bb 0b       	sbc	r27, r27
     dca:	dc 01       	movw	r26, r24
     dcc:	99 27       	eor	r25, r25
     dce:	88 27       	eor	r24, r24
     dd0:	60 e0       	ldi	r22, 0x00	; 0
     dd2:	70 e0       	ldi	r23, 0x00	; 0
     dd4:	84 2b       	or	r24, r20
     dd6:	95 2b       	or	r25, r21
     dd8:	a6 2b       	or	r26, r22
     dda:	b7 2b       	or	r27, r23
     ddc:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     de0:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     de4:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     de8:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     dec:	b0 9b       	sbis	0x16, 0	; 22
     dee:	1b c0       	rjmp	.+54     	; 0xe26 <__vector_13+0x98>
     df0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     df4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     df8:	c9 01       	movw	r24, r18
     dfa:	01 96       	adiw	r24, 0x01	; 1
     dfc:	09 2e       	mov	r0, r25
     dfe:	00 0c       	add	r0, r0
     e00:	aa 0b       	sbc	r26, r26
     e02:	bb 0b       	sbc	r27, r27
     e04:	dc 01       	movw	r26, r24
     e06:	99 27       	eor	r25, r25
     e08:	88 27       	eor	r24, r24
     e0a:	60 e0       	ldi	r22, 0x00	; 0
     e0c:	70 e0       	ldi	r23, 0x00	; 0
     e0e:	84 2b       	or	r24, r20
     e10:	95 2b       	or	r25, r21
     e12:	a6 2b       	or	r26, r22
     e14:	b7 2b       	or	r27, r23
     e16:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     e1a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     e1e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     e22:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     e26:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0x10>
     e2a:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0x11>
     e2e:	30 97       	sbiw	r30, 0x00	; 0
     e30:	39 f0       	breq	.+14     	; 0xe40 <__vector_13+0xb2>
     e32:	68 e0       	ldi	r22, 0x08	; 8
     e34:	70 e0       	ldi	r23, 0x00	; 0
     e36:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0x10>
     e3a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0x11>
     e3e:	09 95       	icall
     e40:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
     e44:	ff 91       	pop	r31
     e46:	ef 91       	pop	r30
     e48:	bf 91       	pop	r27
     e4a:	af 91       	pop	r26
     e4c:	9f 91       	pop	r25
     e4e:	8f 91       	pop	r24
     e50:	7f 91       	pop	r23
     e52:	6f 91       	pop	r22
     e54:	5f 91       	pop	r21
     e56:	4f 91       	pop	r20
     e58:	3f 91       	pop	r19
     e5a:	2f 91       	pop	r18
     e5c:	0f 90       	pop	r0
     e5e:	0f be       	out	0x3f, r0	; 63
     e60:	0f 90       	pop	r0
     e62:	1f 90       	pop	r1
     e64:	18 95       	reti

00000e66 <__vector_14>:
     e66:	1f 92       	push	r1
     e68:	0f 92       	push	r0
     e6a:	0f b6       	in	r0, 0x3f	; 63
     e6c:	0f 92       	push	r0
     e6e:	11 24       	eor	r1, r1
     e70:	2f 93       	push	r18
     e72:	3f 93       	push	r19
     e74:	4f 93       	push	r20
     e76:	5f 93       	push	r21
     e78:	6f 93       	push	r22
     e7a:	7f 93       	push	r23
     e7c:	8f 93       	push	r24
     e7e:	9f 93       	push	r25
     e80:	af 93       	push	r26
     e82:	bf 93       	push	r27
     e84:	ef 93       	push	r30
     e86:	ff 93       	push	r31
     e88:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     e8c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     e90:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e94:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e98:	c9 01       	movw	r24, r18
     e9a:	03 2e       	mov	r0, r19
     e9c:	00 0c       	add	r0, r0
     e9e:	aa 0b       	sbc	r26, r26
     ea0:	bb 0b       	sbc	r27, r27
     ea2:	dc 01       	movw	r26, r24
     ea4:	99 27       	eor	r25, r25
     ea6:	88 27       	eor	r24, r24
     ea8:	60 e0       	ldi	r22, 0x00	; 0
     eaa:	70 e0       	ldi	r23, 0x00	; 0
     eac:	84 2b       	or	r24, r20
     eae:	95 2b       	or	r25, r21
     eb0:	a6 2b       	or	r26, r22
     eb2:	b7 2b       	or	r27, r23
     eb4:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     eb8:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     ebc:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     ec0:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     ec4:	b0 9b       	sbis	0x16, 0	; 22
     ec6:	1b c0       	rjmp	.+54     	; 0xefe <__vector_14+0x98>
     ec8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     ecc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     ed0:	c9 01       	movw	r24, r18
     ed2:	01 96       	adiw	r24, 0x01	; 1
     ed4:	09 2e       	mov	r0, r25
     ed6:	00 0c       	add	r0, r0
     ed8:	aa 0b       	sbc	r26, r26
     eda:	bb 0b       	sbc	r27, r27
     edc:	dc 01       	movw	r26, r24
     ede:	99 27       	eor	r25, r25
     ee0:	88 27       	eor	r24, r24
     ee2:	60 e0       	ldi	r22, 0x00	; 0
     ee4:	70 e0       	ldi	r23, 0x00	; 0
     ee6:	84 2b       	or	r24, r20
     ee8:	95 2b       	or	r25, r21
     eea:	a6 2b       	or	r26, r22
     eec:	b7 2b       	or	r27, r23
     eee:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     ef2:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     ef6:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     efa:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     efe:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x12>
     f02:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x13>
     f06:	30 97       	sbiw	r30, 0x00	; 0
     f08:	39 f0       	breq	.+14     	; 0xf18 <__vector_14+0xb2>
     f0a:	69 e0       	ldi	r22, 0x09	; 9
     f0c:	70 e0       	ldi	r23, 0x00	; 0
     f0e:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x12>
     f12:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x13>
     f16:	09 95       	icall
     f18:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
     f1c:	ff 91       	pop	r31
     f1e:	ef 91       	pop	r30
     f20:	bf 91       	pop	r27
     f22:	af 91       	pop	r26
     f24:	9f 91       	pop	r25
     f26:	8f 91       	pop	r24
     f28:	7f 91       	pop	r23
     f2a:	6f 91       	pop	r22
     f2c:	5f 91       	pop	r21
     f2e:	4f 91       	pop	r20
     f30:	3f 91       	pop	r19
     f32:	2f 91       	pop	r18
     f34:	0f 90       	pop	r0
     f36:	0f be       	out	0x3f, r0	; 63
     f38:	0f 90       	pop	r0
     f3a:	1f 90       	pop	r1
     f3c:	18 95       	reti

00000f3e <__vector_15>:
     f3e:	1f 92       	push	r1
     f40:	0f 92       	push	r0
     f42:	0f b6       	in	r0, 0x3f	; 63
     f44:	0f 92       	push	r0
     f46:	11 24       	eor	r1, r1
     f48:	2f 93       	push	r18
     f4a:	3f 93       	push	r19
     f4c:	4f 93       	push	r20
     f4e:	5f 93       	push	r21
     f50:	6f 93       	push	r22
     f52:	7f 93       	push	r23
     f54:	8f 93       	push	r24
     f56:	9f 93       	push	r25
     f58:	af 93       	push	r26
     f5a:	bf 93       	push	r27
     f5c:	ef 93       	push	r30
     f5e:	ff 93       	push	r31
     f60:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
     f64:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
     f68:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f6c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f70:	c9 01       	movw	r24, r18
     f72:	03 2e       	mov	r0, r19
     f74:	00 0c       	add	r0, r0
     f76:	aa 0b       	sbc	r26, r26
     f78:	bb 0b       	sbc	r27, r27
     f7a:	dc 01       	movw	r26, r24
     f7c:	99 27       	eor	r25, r25
     f7e:	88 27       	eor	r24, r24
     f80:	60 e0       	ldi	r22, 0x00	; 0
     f82:	70 e0       	ldi	r23, 0x00	; 0
     f84:	84 2b       	or	r24, r20
     f86:	95 2b       	or	r25, r21
     f88:	a6 2b       	or	r26, r22
     f8a:	b7 2b       	or	r27, r23
     f8c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     f90:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     f94:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     f98:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     f9c:	b0 9b       	sbis	0x16, 0	; 22
     f9e:	1b c0       	rjmp	.+54     	; 0xfd6 <__vector_15+0x98>
     fa0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     fa4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     fa8:	c9 01       	movw	r24, r18
     faa:	01 96       	adiw	r24, 0x01	; 1
     fac:	09 2e       	mov	r0, r25
     fae:	00 0c       	add	r0, r0
     fb0:	aa 0b       	sbc	r26, r26
     fb2:	bb 0b       	sbc	r27, r27
     fb4:	dc 01       	movw	r26, r24
     fb6:	99 27       	eor	r25, r25
     fb8:	88 27       	eor	r24, r24
     fba:	60 e0       	ldi	r22, 0x00	; 0
     fbc:	70 e0       	ldi	r23, 0x00	; 0
     fbe:	84 2b       	or	r24, r20
     fc0:	95 2b       	or	r25, r21
     fc2:	a6 2b       	or	r26, r22
     fc4:	b7 2b       	or	r27, r23
     fc6:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
     fca:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
     fce:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
     fd2:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
     fd6:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x14>
     fda:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x15>
     fde:	30 97       	sbiw	r30, 0x00	; 0
     fe0:	39 f0       	breq	.+14     	; 0xff0 <__vector_15+0xb2>
     fe2:	6a e0       	ldi	r22, 0x0A	; 10
     fe4:	70 e0       	ldi	r23, 0x00	; 0
     fe6:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x14>
     fea:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x15>
     fee:	09 95       	icall
     ff0:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
     ff4:	ff 91       	pop	r31
     ff6:	ef 91       	pop	r30
     ff8:	bf 91       	pop	r27
     ffa:	af 91       	pop	r26
     ffc:	9f 91       	pop	r25
     ffe:	8f 91       	pop	r24
    1000:	7f 91       	pop	r23
    1002:	6f 91       	pop	r22
    1004:	5f 91       	pop	r21
    1006:	4f 91       	pop	r20
    1008:	3f 91       	pop	r19
    100a:	2f 91       	pop	r18
    100c:	0f 90       	pop	r0
    100e:	0f be       	out	0x3f, r0	; 63
    1010:	0f 90       	pop	r0
    1012:	1f 90       	pop	r1
    1014:	18 95       	reti

00001016 <__vector_16>:
    1016:	1f 92       	push	r1
    1018:	0f 92       	push	r0
    101a:	0f b6       	in	r0, 0x3f	; 63
    101c:	0f 92       	push	r0
    101e:	11 24       	eor	r1, r1
    1020:	2f 93       	push	r18
    1022:	3f 93       	push	r19
    1024:	4f 93       	push	r20
    1026:	5f 93       	push	r21
    1028:	6f 93       	push	r22
    102a:	7f 93       	push	r23
    102c:	8f 93       	push	r24
    102e:	9f 93       	push	r25
    1030:	af 93       	push	r26
    1032:	bf 93       	push	r27
    1034:	ef 93       	push	r30
    1036:	ff 93       	push	r31
    1038:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    103c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1040:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1044:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1048:	c9 01       	movw	r24, r18
    104a:	03 2e       	mov	r0, r19
    104c:	00 0c       	add	r0, r0
    104e:	aa 0b       	sbc	r26, r26
    1050:	bb 0b       	sbc	r27, r27
    1052:	dc 01       	movw	r26, r24
    1054:	99 27       	eor	r25, r25
    1056:	88 27       	eor	r24, r24
    1058:	60 e0       	ldi	r22, 0x00	; 0
    105a:	70 e0       	ldi	r23, 0x00	; 0
    105c:	84 2b       	or	r24, r20
    105e:	95 2b       	or	r25, r21
    1060:	a6 2b       	or	r26, r22
    1062:	b7 2b       	or	r27, r23
    1064:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1068:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    106c:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1070:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1074:	b0 9b       	sbis	0x16, 0	; 22
    1076:	1b c0       	rjmp	.+54     	; 0x10ae <__vector_16+0x98>
    1078:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    107c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1080:	c9 01       	movw	r24, r18
    1082:	01 96       	adiw	r24, 0x01	; 1
    1084:	09 2e       	mov	r0, r25
    1086:	00 0c       	add	r0, r0
    1088:	aa 0b       	sbc	r26, r26
    108a:	bb 0b       	sbc	r27, r27
    108c:	dc 01       	movw	r26, r24
    108e:	99 27       	eor	r25, r25
    1090:	88 27       	eor	r24, r24
    1092:	60 e0       	ldi	r22, 0x00	; 0
    1094:	70 e0       	ldi	r23, 0x00	; 0
    1096:	84 2b       	or	r24, r20
    1098:	95 2b       	or	r25, r21
    109a:	a6 2b       	or	r26, r22
    109c:	b7 2b       	or	r27, r23
    109e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    10a2:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    10a6:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    10aa:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    10ae:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x16>
    10b2:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x17>
    10b6:	30 97       	sbiw	r30, 0x00	; 0
    10b8:	39 f0       	breq	.+14     	; 0x10c8 <__vector_16+0xb2>
    10ba:	6b e0       	ldi	r22, 0x0B	; 11
    10bc:	70 e0       	ldi	r23, 0x00	; 0
    10be:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x16>
    10c2:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x17>
    10c6:	09 95       	icall
    10c8:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
    10cc:	ff 91       	pop	r31
    10ce:	ef 91       	pop	r30
    10d0:	bf 91       	pop	r27
    10d2:	af 91       	pop	r26
    10d4:	9f 91       	pop	r25
    10d6:	8f 91       	pop	r24
    10d8:	7f 91       	pop	r23
    10da:	6f 91       	pop	r22
    10dc:	5f 91       	pop	r21
    10de:	4f 91       	pop	r20
    10e0:	3f 91       	pop	r19
    10e2:	2f 91       	pop	r18
    10e4:	0f 90       	pop	r0
    10e6:	0f be       	out	0x3f, r0	; 63
    10e8:	0f 90       	pop	r0
    10ea:	1f 90       	pop	r1
    10ec:	18 95       	reti

000010ee <__vector_17>:
    10ee:	1f 92       	push	r1
    10f0:	0f 92       	push	r0
    10f2:	0f b6       	in	r0, 0x3f	; 63
    10f4:	0f 92       	push	r0
    10f6:	11 24       	eor	r1, r1
    10f8:	2f 93       	push	r18
    10fa:	3f 93       	push	r19
    10fc:	4f 93       	push	r20
    10fe:	5f 93       	push	r21
    1100:	6f 93       	push	r22
    1102:	7f 93       	push	r23
    1104:	8f 93       	push	r24
    1106:	9f 93       	push	r25
    1108:	af 93       	push	r26
    110a:	bf 93       	push	r27
    110c:	ef 93       	push	r30
    110e:	ff 93       	push	r31
    1110:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    1114:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1118:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    111c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1120:	c9 01       	movw	r24, r18
    1122:	03 2e       	mov	r0, r19
    1124:	00 0c       	add	r0, r0
    1126:	aa 0b       	sbc	r26, r26
    1128:	bb 0b       	sbc	r27, r27
    112a:	dc 01       	movw	r26, r24
    112c:	99 27       	eor	r25, r25
    112e:	88 27       	eor	r24, r24
    1130:	60 e0       	ldi	r22, 0x00	; 0
    1132:	70 e0       	ldi	r23, 0x00	; 0
    1134:	84 2b       	or	r24, r20
    1136:	95 2b       	or	r25, r21
    1138:	a6 2b       	or	r26, r22
    113a:	b7 2b       	or	r27, r23
    113c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1140:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    1144:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1148:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    114c:	b0 9b       	sbis	0x16, 0	; 22
    114e:	1b c0       	rjmp	.+54     	; 0x1186 <__vector_17+0x98>
    1150:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1154:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1158:	c9 01       	movw	r24, r18
    115a:	01 96       	adiw	r24, 0x01	; 1
    115c:	09 2e       	mov	r0, r25
    115e:	00 0c       	add	r0, r0
    1160:	aa 0b       	sbc	r26, r26
    1162:	bb 0b       	sbc	r27, r27
    1164:	dc 01       	movw	r26, r24
    1166:	99 27       	eor	r25, r25
    1168:	88 27       	eor	r24, r24
    116a:	60 e0       	ldi	r22, 0x00	; 0
    116c:	70 e0       	ldi	r23, 0x00	; 0
    116e:	84 2b       	or	r24, r20
    1170:	95 2b       	or	r25, r21
    1172:	a6 2b       	or	r26, r22
    1174:	b7 2b       	or	r27, r23
    1176:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    117a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    117e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1182:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1186:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x18>
    118a:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x19>
    118e:	30 97       	sbiw	r30, 0x00	; 0
    1190:	39 f0       	breq	.+14     	; 0x11a0 <__vector_17+0xb2>
    1192:	6c e0       	ldi	r22, 0x0C	; 12
    1194:	70 e0       	ldi	r23, 0x00	; 0
    1196:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x18>
    119a:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x19>
    119e:	09 95       	icall
    11a0:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
    11a4:	ff 91       	pop	r31
    11a6:	ef 91       	pop	r30
    11a8:	bf 91       	pop	r27
    11aa:	af 91       	pop	r26
    11ac:	9f 91       	pop	r25
    11ae:	8f 91       	pop	r24
    11b0:	7f 91       	pop	r23
    11b2:	6f 91       	pop	r22
    11b4:	5f 91       	pop	r21
    11b6:	4f 91       	pop	r20
    11b8:	3f 91       	pop	r19
    11ba:	2f 91       	pop	r18
    11bc:	0f 90       	pop	r0
    11be:	0f be       	out	0x3f, r0	; 63
    11c0:	0f 90       	pop	r0
    11c2:	1f 90       	pop	r1
    11c4:	18 95       	reti

000011c6 <__vector_18>:
    11c6:	1f 92       	push	r1
    11c8:	0f 92       	push	r0
    11ca:	0f b6       	in	r0, 0x3f	; 63
    11cc:	0f 92       	push	r0
    11ce:	11 24       	eor	r1, r1
    11d0:	2f 93       	push	r18
    11d2:	3f 93       	push	r19
    11d4:	4f 93       	push	r20
    11d6:	5f 93       	push	r21
    11d8:	6f 93       	push	r22
    11da:	7f 93       	push	r23
    11dc:	8f 93       	push	r24
    11de:	9f 93       	push	r25
    11e0:	af 93       	push	r26
    11e2:	bf 93       	push	r27
    11e4:	ef 93       	push	r30
    11e6:	ff 93       	push	r31
    11e8:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    11ec:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    11f0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11f4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11f8:	c9 01       	movw	r24, r18
    11fa:	03 2e       	mov	r0, r19
    11fc:	00 0c       	add	r0, r0
    11fe:	aa 0b       	sbc	r26, r26
    1200:	bb 0b       	sbc	r27, r27
    1202:	dc 01       	movw	r26, r24
    1204:	99 27       	eor	r25, r25
    1206:	88 27       	eor	r24, r24
    1208:	60 e0       	ldi	r22, 0x00	; 0
    120a:	70 e0       	ldi	r23, 0x00	; 0
    120c:	84 2b       	or	r24, r20
    120e:	95 2b       	or	r25, r21
    1210:	a6 2b       	or	r26, r22
    1212:	b7 2b       	or	r27, r23
    1214:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1218:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    121c:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1220:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1224:	b0 9b       	sbis	0x16, 0	; 22
    1226:	1b c0       	rjmp	.+54     	; 0x125e <__vector_18+0x98>
    1228:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    122c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1230:	c9 01       	movw	r24, r18
    1232:	01 96       	adiw	r24, 0x01	; 1
    1234:	09 2e       	mov	r0, r25
    1236:	00 0c       	add	r0, r0
    1238:	aa 0b       	sbc	r26, r26
    123a:	bb 0b       	sbc	r27, r27
    123c:	dc 01       	movw	r26, r24
    123e:	99 27       	eor	r25, r25
    1240:	88 27       	eor	r24, r24
    1242:	60 e0       	ldi	r22, 0x00	; 0
    1244:	70 e0       	ldi	r23, 0x00	; 0
    1246:	84 2b       	or	r24, r20
    1248:	95 2b       	or	r25, r21
    124a:	a6 2b       	or	r26, r22
    124c:	b7 2b       	or	r27, r23
    124e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1252:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    1256:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    125a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    125e:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x1a>
    1262:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x1b>
    1266:	30 97       	sbiw	r30, 0x00	; 0
    1268:	39 f0       	breq	.+14     	; 0x1278 <__vector_18+0xb2>
    126a:	6d e0       	ldi	r22, 0x0D	; 13
    126c:	70 e0       	ldi	r23, 0x00	; 0
    126e:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x1a>
    1272:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x1b>
    1276:	09 95       	icall
    1278:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
    127c:	ff 91       	pop	r31
    127e:	ef 91       	pop	r30
    1280:	bf 91       	pop	r27
    1282:	af 91       	pop	r26
    1284:	9f 91       	pop	r25
    1286:	8f 91       	pop	r24
    1288:	7f 91       	pop	r23
    128a:	6f 91       	pop	r22
    128c:	5f 91       	pop	r21
    128e:	4f 91       	pop	r20
    1290:	3f 91       	pop	r19
    1292:	2f 91       	pop	r18
    1294:	0f 90       	pop	r0
    1296:	0f be       	out	0x3f, r0	; 63
    1298:	0f 90       	pop	r0
    129a:	1f 90       	pop	r1
    129c:	18 95       	reti

0000129e <__vector_19>:
    129e:	1f 92       	push	r1
    12a0:	0f 92       	push	r0
    12a2:	0f b6       	in	r0, 0x3f	; 63
    12a4:	0f 92       	push	r0
    12a6:	11 24       	eor	r1, r1
    12a8:	2f 93       	push	r18
    12aa:	3f 93       	push	r19
    12ac:	4f 93       	push	r20
    12ae:	5f 93       	push	r21
    12b0:	6f 93       	push	r22
    12b2:	7f 93       	push	r23
    12b4:	8f 93       	push	r24
    12b6:	9f 93       	push	r25
    12b8:	af 93       	push	r26
    12ba:	bf 93       	push	r27
    12bc:	ef 93       	push	r30
    12be:	ff 93       	push	r31
    12c0:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    12c4:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    12c8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    12cc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    12d0:	c9 01       	movw	r24, r18
    12d2:	03 2e       	mov	r0, r19
    12d4:	00 0c       	add	r0, r0
    12d6:	aa 0b       	sbc	r26, r26
    12d8:	bb 0b       	sbc	r27, r27
    12da:	dc 01       	movw	r26, r24
    12dc:	99 27       	eor	r25, r25
    12de:	88 27       	eor	r24, r24
    12e0:	60 e0       	ldi	r22, 0x00	; 0
    12e2:	70 e0       	ldi	r23, 0x00	; 0
    12e4:	84 2b       	or	r24, r20
    12e6:	95 2b       	or	r25, r21
    12e8:	a6 2b       	or	r26, r22
    12ea:	b7 2b       	or	r27, r23
    12ec:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    12f0:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    12f4:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    12f8:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    12fc:	b0 9b       	sbis	0x16, 0	; 22
    12fe:	1b c0       	rjmp	.+54     	; 0x1336 <__vector_19+0x98>
    1300:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1304:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1308:	c9 01       	movw	r24, r18
    130a:	01 96       	adiw	r24, 0x01	; 1
    130c:	09 2e       	mov	r0, r25
    130e:	00 0c       	add	r0, r0
    1310:	aa 0b       	sbc	r26, r26
    1312:	bb 0b       	sbc	r27, r27
    1314:	dc 01       	movw	r26, r24
    1316:	99 27       	eor	r25, r25
    1318:	88 27       	eor	r24, r24
    131a:	60 e0       	ldi	r22, 0x00	; 0
    131c:	70 e0       	ldi	r23, 0x00	; 0
    131e:	84 2b       	or	r24, r20
    1320:	95 2b       	or	r25, r21
    1322:	a6 2b       	or	r26, r22
    1324:	b7 2b       	or	r27, r23
    1326:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    132a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    132e:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1332:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1336:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1c>
    133a:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1d>
    133e:	30 97       	sbiw	r30, 0x00	; 0
    1340:	39 f0       	breq	.+14     	; 0x1350 <__vector_19+0xb2>
    1342:	6e e0       	ldi	r22, 0x0E	; 14
    1344:	70 e0       	ldi	r23, 0x00	; 0
    1346:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1c>
    134a:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1d>
    134e:	09 95       	icall
    1350:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
    1354:	ff 91       	pop	r31
    1356:	ef 91       	pop	r30
    1358:	bf 91       	pop	r27
    135a:	af 91       	pop	r26
    135c:	9f 91       	pop	r25
    135e:	8f 91       	pop	r24
    1360:	7f 91       	pop	r23
    1362:	6f 91       	pop	r22
    1364:	5f 91       	pop	r21
    1366:	4f 91       	pop	r20
    1368:	3f 91       	pop	r19
    136a:	2f 91       	pop	r18
    136c:	0f 90       	pop	r0
    136e:	0f be       	out	0x3f, r0	; 63
    1370:	0f 90       	pop	r0
    1372:	1f 90       	pop	r1
    1374:	18 95       	reti

00001376 <__vector_20>:
    1376:	1f 92       	push	r1
    1378:	0f 92       	push	r0
    137a:	0f b6       	in	r0, 0x3f	; 63
    137c:	0f 92       	push	r0
    137e:	11 24       	eor	r1, r1
    1380:	2f 93       	push	r18
    1382:	3f 93       	push	r19
    1384:	4f 93       	push	r20
    1386:	5f 93       	push	r21
    1388:	6f 93       	push	r22
    138a:	7f 93       	push	r23
    138c:	8f 93       	push	r24
    138e:	9f 93       	push	r25
    1390:	af 93       	push	r26
    1392:	bf 93       	push	r27
    1394:	ef 93       	push	r30
    1396:	ff 93       	push	r31
    1398:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    139c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    13a0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    13a4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    13a8:	c9 01       	movw	r24, r18
    13aa:	03 2e       	mov	r0, r19
    13ac:	00 0c       	add	r0, r0
    13ae:	aa 0b       	sbc	r26, r26
    13b0:	bb 0b       	sbc	r27, r27
    13b2:	dc 01       	movw	r26, r24
    13b4:	99 27       	eor	r25, r25
    13b6:	88 27       	eor	r24, r24
    13b8:	60 e0       	ldi	r22, 0x00	; 0
    13ba:	70 e0       	ldi	r23, 0x00	; 0
    13bc:	84 2b       	or	r24, r20
    13be:	95 2b       	or	r25, r21
    13c0:	a6 2b       	or	r26, r22
    13c2:	b7 2b       	or	r27, r23
    13c4:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    13c8:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    13cc:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    13d0:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    13d4:	b0 9b       	sbis	0x16, 0	; 22
    13d6:	1b c0       	rjmp	.+54     	; 0x140e <__vector_20+0x98>
    13d8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    13dc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    13e0:	c9 01       	movw	r24, r18
    13e2:	01 96       	adiw	r24, 0x01	; 1
    13e4:	09 2e       	mov	r0, r25
    13e6:	00 0c       	add	r0, r0
    13e8:	aa 0b       	sbc	r26, r26
    13ea:	bb 0b       	sbc	r27, r27
    13ec:	dc 01       	movw	r26, r24
    13ee:	99 27       	eor	r25, r25
    13f0:	88 27       	eor	r24, r24
    13f2:	60 e0       	ldi	r22, 0x00	; 0
    13f4:	70 e0       	ldi	r23, 0x00	; 0
    13f6:	84 2b       	or	r24, r20
    13f8:	95 2b       	or	r25, r21
    13fa:	a6 2b       	or	r26, r22
    13fc:	b7 2b       	or	r27, r23
    13fe:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1402:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    1406:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    140a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    140e:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1e>
    1412:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1f>
    1416:	30 97       	sbiw	r30, 0x00	; 0
    1418:	39 f0       	breq	.+14     	; 0x1428 <__vector_20+0xb2>
    141a:	6f e0       	ldi	r22, 0x0F	; 15
    141c:	70 e0       	ldi	r23, 0x00	; 0
    141e:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1e>
    1422:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1f>
    1426:	09 95       	icall
    1428:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
    142c:	ff 91       	pop	r31
    142e:	ef 91       	pop	r30
    1430:	bf 91       	pop	r27
    1432:	af 91       	pop	r26
    1434:	9f 91       	pop	r25
    1436:	8f 91       	pop	r24
    1438:	7f 91       	pop	r23
    143a:	6f 91       	pop	r22
    143c:	5f 91       	pop	r21
    143e:	4f 91       	pop	r20
    1440:	3f 91       	pop	r19
    1442:	2f 91       	pop	r18
    1444:	0f 90       	pop	r0
    1446:	0f be       	out	0x3f, r0	; 63
    1448:	0f 90       	pop	r0
    144a:	1f 90       	pop	r1
    144c:	18 95       	reti

0000144e <__vector_21>:
    144e:	1f 92       	push	r1
    1450:	0f 92       	push	r0
    1452:	0f b6       	in	r0, 0x3f	; 63
    1454:	0f 92       	push	r0
    1456:	11 24       	eor	r1, r1
    1458:	2f 93       	push	r18
    145a:	3f 93       	push	r19
    145c:	4f 93       	push	r20
    145e:	5f 93       	push	r21
    1460:	6f 93       	push	r22
    1462:	7f 93       	push	r23
    1464:	8f 93       	push	r24
    1466:	9f 93       	push	r25
    1468:	af 93       	push	r26
    146a:	bf 93       	push	r27
    146c:	ef 93       	push	r30
    146e:	ff 93       	push	r31
    1470:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    1474:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1478:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    147c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1480:	c9 01       	movw	r24, r18
    1482:	03 2e       	mov	r0, r19
    1484:	00 0c       	add	r0, r0
    1486:	aa 0b       	sbc	r26, r26
    1488:	bb 0b       	sbc	r27, r27
    148a:	dc 01       	movw	r26, r24
    148c:	99 27       	eor	r25, r25
    148e:	88 27       	eor	r24, r24
    1490:	60 e0       	ldi	r22, 0x00	; 0
    1492:	70 e0       	ldi	r23, 0x00	; 0
    1494:	84 2b       	or	r24, r20
    1496:	95 2b       	or	r25, r21
    1498:	a6 2b       	or	r26, r22
    149a:	b7 2b       	or	r27, r23
    149c:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    14a0:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    14a4:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    14a8:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    14ac:	b0 9b       	sbis	0x16, 0	; 22
    14ae:	1b c0       	rjmp	.+54     	; 0x14e6 <__vector_21+0x98>
    14b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    14b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    14b8:	c9 01       	movw	r24, r18
    14ba:	01 96       	adiw	r24, 0x01	; 1
    14bc:	09 2e       	mov	r0, r25
    14be:	00 0c       	add	r0, r0
    14c0:	aa 0b       	sbc	r26, r26
    14c2:	bb 0b       	sbc	r27, r27
    14c4:	dc 01       	movw	r26, r24
    14c6:	99 27       	eor	r25, r25
    14c8:	88 27       	eor	r24, r24
    14ca:	60 e0       	ldi	r22, 0x00	; 0
    14cc:	70 e0       	ldi	r23, 0x00	; 0
    14ce:	84 2b       	or	r24, r20
    14d0:	95 2b       	or	r25, r21
    14d2:	a6 2b       	or	r26, r22
    14d4:	b7 2b       	or	r27, r23
    14d6:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    14da:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    14de:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    14e2:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    14e6:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x20>
    14ea:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x21>
    14ee:	30 97       	sbiw	r30, 0x00	; 0
    14f0:	39 f0       	breq	.+14     	; 0x1500 <__vector_21+0xb2>
    14f2:	60 e1       	ldi	r22, 0x10	; 16
    14f4:	70 e0       	ldi	r23, 0x00	; 0
    14f6:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x20>
    14fa:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x21>
    14fe:	09 95       	icall
    1500:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
    1504:	ff 91       	pop	r31
    1506:	ef 91       	pop	r30
    1508:	bf 91       	pop	r27
    150a:	af 91       	pop	r26
    150c:	9f 91       	pop	r25
    150e:	8f 91       	pop	r24
    1510:	7f 91       	pop	r23
    1512:	6f 91       	pop	r22
    1514:	5f 91       	pop	r21
    1516:	4f 91       	pop	r20
    1518:	3f 91       	pop	r19
    151a:	2f 91       	pop	r18
    151c:	0f 90       	pop	r0
    151e:	0f be       	out	0x3f, r0	; 63
    1520:	0f 90       	pop	r0
    1522:	1f 90       	pop	r1
    1524:	18 95       	reti

00001526 <__vector_22>:
    1526:	1f 92       	push	r1
    1528:	0f 92       	push	r0
    152a:	0f b6       	in	r0, 0x3f	; 63
    152c:	0f 92       	push	r0
    152e:	11 24       	eor	r1, r1
    1530:	2f 93       	push	r18
    1532:	3f 93       	push	r19
    1534:	4f 93       	push	r20
    1536:	5f 93       	push	r21
    1538:	6f 93       	push	r22
    153a:	7f 93       	push	r23
    153c:	8f 93       	push	r24
    153e:	9f 93       	push	r25
    1540:	af 93       	push	r26
    1542:	bf 93       	push	r27
    1544:	ef 93       	push	r30
    1546:	ff 93       	push	r31
    1548:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    154c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1550:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1554:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1558:	c9 01       	movw	r24, r18
    155a:	03 2e       	mov	r0, r19
    155c:	00 0c       	add	r0, r0
    155e:	aa 0b       	sbc	r26, r26
    1560:	bb 0b       	sbc	r27, r27
    1562:	dc 01       	movw	r26, r24
    1564:	99 27       	eor	r25, r25
    1566:	88 27       	eor	r24, r24
    1568:	60 e0       	ldi	r22, 0x00	; 0
    156a:	70 e0       	ldi	r23, 0x00	; 0
    156c:	84 2b       	or	r24, r20
    156e:	95 2b       	or	r25, r21
    1570:	a6 2b       	or	r26, r22
    1572:	b7 2b       	or	r27, r23
    1574:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    1578:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    157c:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    1580:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    1584:	b0 9b       	sbis	0x16, 0	; 22
    1586:	1b c0       	rjmp	.+54     	; 0x15be <__vector_22+0x98>
    1588:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    158c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1590:	c9 01       	movw	r24, r18
    1592:	01 96       	adiw	r24, 0x01	; 1
    1594:	09 2e       	mov	r0, r25
    1596:	00 0c       	add	r0, r0
    1598:	aa 0b       	sbc	r26, r26
    159a:	bb 0b       	sbc	r27, r27
    159c:	dc 01       	movw	r26, r24
    159e:	99 27       	eor	r25, r25
    15a0:	88 27       	eor	r24, r24
    15a2:	60 e0       	ldi	r22, 0x00	; 0
    15a4:	70 e0       	ldi	r23, 0x00	; 0
    15a6:	84 2b       	or	r24, r20
    15a8:	95 2b       	or	r25, r21
    15aa:	a6 2b       	or	r26, r22
    15ac:	b7 2b       	or	r27, r23
    15ae:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <timestamp>
    15b2:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <timestamp+0x1>
    15b6:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <timestamp+0x2>
    15ba:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <timestamp+0x3>
    15be:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x22>
    15c2:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x23>
    15c6:	30 97       	sbiw	r30, 0x00	; 0
    15c8:	39 f0       	breq	.+14     	; 0x15d8 <__vector_22+0xb2>
    15ca:	61 e1       	ldi	r22, 0x11	; 17
    15cc:	70 e0       	ldi	r23, 0x00	; 0
    15ce:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x22>
    15d2:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x23>
    15d6:	09 95       	icall
    15d8:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
    15dc:	ff 91       	pop	r31
    15de:	ef 91       	pop	r30
    15e0:	bf 91       	pop	r27
    15e2:	af 91       	pop	r26
    15e4:	9f 91       	pop	r25
    15e6:	8f 91       	pop	r24
    15e8:	7f 91       	pop	r23
    15ea:	6f 91       	pop	r22
    15ec:	5f 91       	pop	r21
    15ee:	4f 91       	pop	r20
    15f0:	3f 91       	pop	r19
    15f2:	2f 91       	pop	r18
    15f4:	0f 90       	pop	r0
    15f6:	0f be       	out	0x3f, r0	; 63
    15f8:	0f 90       	pop	r0
    15fa:	1f 90       	pop	r1
    15fc:	18 95       	reti

000015fe <enqueueByDeadline>:
    15fe:	ef 92       	push	r14
    1600:	ff 92       	push	r15
    1602:	0f 93       	push	r16
    1604:	1f 93       	push	r17
    1606:	cf 93       	push	r28
    1608:	df 93       	push	r29
    160a:	7b 01       	movw	r14, r22
    160c:	eb 01       	movw	r28, r22
    160e:	a8 81       	ld	r26, Y
    1610:	b9 81       	ldd	r27, Y+1	; 0x01
    1612:	10 97       	sbiw	r26, 0x00	; 0
    1614:	61 f1       	breq	.+88     	; 0x166e <enqueueByDeadline+0x70>
    1616:	fc 01       	movw	r30, r24
    1618:	06 81       	ldd	r16, Z+6	; 0x06
    161a:	17 81       	ldd	r17, Z+7	; 0x07
    161c:	20 85       	ldd	r18, Z+8	; 0x08
    161e:	31 85       	ldd	r19, Z+9	; 0x09
    1620:	16 96       	adiw	r26, 0x06	; 6
    1622:	4d 91       	ld	r20, X+
    1624:	5d 91       	ld	r21, X+
    1626:	6d 91       	ld	r22, X+
    1628:	7c 91       	ld	r23, X
    162a:	19 97       	sbiw	r26, 0x09	; 9
    162c:	04 17       	cp	r16, r20
    162e:	15 07       	cpc	r17, r21
    1630:	26 07       	cpc	r18, r22
    1632:	37 07       	cpc	r19, r23
    1634:	14 f4       	brge	.+4      	; 0x163a <enqueueByDeadline+0x3c>
    1636:	1b c0       	rjmp	.+54     	; 0x166e <enqueueByDeadline+0x70>
    1638:	df 01       	movw	r26, r30
    163a:	ed 91       	ld	r30, X+
    163c:	fc 91       	ld	r31, X
    163e:	11 97       	sbiw	r26, 0x01	; 1
    1640:	30 97       	sbiw	r30, 0x00	; 0
    1642:	49 f0       	breq	.+18     	; 0x1656 <enqueueByDeadline+0x58>
    1644:	46 81       	ldd	r20, Z+6	; 0x06
    1646:	57 81       	ldd	r21, Z+7	; 0x07
    1648:	60 85       	ldd	r22, Z+8	; 0x08
    164a:	71 85       	ldd	r23, Z+9	; 0x09
    164c:	04 17       	cp	r16, r20
    164e:	15 07       	cpc	r17, r21
    1650:	26 07       	cpc	r18, r22
    1652:	37 07       	cpc	r19, r23
    1654:	8c f7       	brge	.-30     	; 0x1638 <enqueueByDeadline+0x3a>
    1656:	ec 01       	movw	r28, r24
    1658:	f9 83       	std	Y+1, r31	; 0x01
    165a:	e8 83       	st	Y, r30
    165c:	10 97       	sbiw	r26, 0x00	; 0
    165e:	21 f4       	brne	.+8      	; 0x1668 <enqueueByDeadline+0x6a>
    1660:	f7 01       	movw	r30, r14
    1662:	91 83       	std	Z+1, r25	; 0x01
    1664:	80 83       	st	Z, r24
    1666:	07 c0       	rjmp	.+14     	; 0x1676 <enqueueByDeadline+0x78>
    1668:	8d 93       	st	X+, r24
    166a:	9c 93       	st	X, r25
    166c:	04 c0       	rjmp	.+8      	; 0x1676 <enqueueByDeadline+0x78>
    166e:	ec 01       	movw	r28, r24
    1670:	b9 83       	std	Y+1, r27	; 0x01
    1672:	a8 83       	st	Y, r26
    1674:	f5 cf       	rjmp	.-22     	; 0x1660 <enqueueByDeadline+0x62>
    1676:	df 91       	pop	r29
    1678:	cf 91       	pop	r28
    167a:	1f 91       	pop	r17
    167c:	0f 91       	pop	r16
    167e:	ff 90       	pop	r15
    1680:	ef 90       	pop	r14
    1682:	08 95       	ret

00001684 <enqueueByBaseline>:
    1684:	ef 92       	push	r14
    1686:	ff 92       	push	r15
    1688:	0f 93       	push	r16
    168a:	1f 93       	push	r17
    168c:	cf 93       	push	r28
    168e:	df 93       	push	r29
    1690:	7b 01       	movw	r14, r22
    1692:	eb 01       	movw	r28, r22
    1694:	a8 81       	ld	r26, Y
    1696:	b9 81       	ldd	r27, Y+1	; 0x01
    1698:	10 97       	sbiw	r26, 0x00	; 0
    169a:	61 f1       	breq	.+88     	; 0x16f4 <enqueueByBaseline+0x70>
    169c:	fc 01       	movw	r30, r24
    169e:	02 81       	ldd	r16, Z+2	; 0x02
    16a0:	13 81       	ldd	r17, Z+3	; 0x03
    16a2:	24 81       	ldd	r18, Z+4	; 0x04
    16a4:	35 81       	ldd	r19, Z+5	; 0x05
    16a6:	12 96       	adiw	r26, 0x02	; 2
    16a8:	4d 91       	ld	r20, X+
    16aa:	5d 91       	ld	r21, X+
    16ac:	6d 91       	ld	r22, X+
    16ae:	7c 91       	ld	r23, X
    16b0:	15 97       	sbiw	r26, 0x05	; 5
    16b2:	04 17       	cp	r16, r20
    16b4:	15 07       	cpc	r17, r21
    16b6:	26 07       	cpc	r18, r22
    16b8:	37 07       	cpc	r19, r23
    16ba:	14 f4       	brge	.+4      	; 0x16c0 <enqueueByBaseline+0x3c>
    16bc:	1b c0       	rjmp	.+54     	; 0x16f4 <enqueueByBaseline+0x70>
    16be:	df 01       	movw	r26, r30
    16c0:	ed 91       	ld	r30, X+
    16c2:	fc 91       	ld	r31, X
    16c4:	11 97       	sbiw	r26, 0x01	; 1
    16c6:	30 97       	sbiw	r30, 0x00	; 0
    16c8:	49 f0       	breq	.+18     	; 0x16dc <enqueueByBaseline+0x58>
    16ca:	42 81       	ldd	r20, Z+2	; 0x02
    16cc:	53 81       	ldd	r21, Z+3	; 0x03
    16ce:	64 81       	ldd	r22, Z+4	; 0x04
    16d0:	75 81       	ldd	r23, Z+5	; 0x05
    16d2:	04 17       	cp	r16, r20
    16d4:	15 07       	cpc	r17, r21
    16d6:	26 07       	cpc	r18, r22
    16d8:	37 07       	cpc	r19, r23
    16da:	8c f7       	brge	.-30     	; 0x16be <enqueueByBaseline+0x3a>
    16dc:	ec 01       	movw	r28, r24
    16de:	f9 83       	std	Y+1, r31	; 0x01
    16e0:	e8 83       	st	Y, r30
    16e2:	10 97       	sbiw	r26, 0x00	; 0
    16e4:	21 f4       	brne	.+8      	; 0x16ee <enqueueByBaseline+0x6a>
    16e6:	f7 01       	movw	r30, r14
    16e8:	91 83       	std	Z+1, r25	; 0x01
    16ea:	80 83       	st	Z, r24
    16ec:	07 c0       	rjmp	.+14     	; 0x16fc <enqueueByBaseline+0x78>
    16ee:	8d 93       	st	X+, r24
    16f0:	9c 93       	st	X, r25
    16f2:	04 c0       	rjmp	.+8      	; 0x16fc <enqueueByBaseline+0x78>
    16f4:	ec 01       	movw	r28, r24
    16f6:	b9 83       	std	Y+1, r27	; 0x01
    16f8:	a8 83       	st	Y, r26
    16fa:	f5 cf       	rjmp	.-22     	; 0x16e6 <enqueueByBaseline+0x62>
    16fc:	df 91       	pop	r29
    16fe:	cf 91       	pop	r28
    1700:	1f 91       	pop	r17
    1702:	0f 91       	pop	r16
    1704:	ff 90       	pop	r15
    1706:	ef 90       	pop	r14
    1708:	08 95       	ret

0000170a <dequeue>:
    170a:	dc 01       	movw	r26, r24
    170c:	ed 91       	ld	r30, X+
    170e:	fc 91       	ld	r31, X
    1710:	11 97       	sbiw	r26, 0x01	; 1
    1712:	30 97       	sbiw	r30, 0x00	; 0
    1714:	59 f4       	brne	.+22     	; 0x172c <dequeue+0x22>
    1716:	8f ef       	ldi	r24, 0xFF	; 255
    1718:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    171c:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    1720:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    1724:	81 e0       	ldi	r24, 0x01	; 1
    1726:	83 bf       	out	0x33, r24	; 51
    1728:	88 95       	sleep
    172a:	fd cf       	rjmp	.-6      	; 0x1726 <dequeue+0x1c>
    172c:	20 81       	ld	r18, Z
    172e:	31 81       	ldd	r19, Z+1	; 0x01
    1730:	2d 93       	st	X+, r18
    1732:	3c 93       	st	X, r19
    1734:	cf 01       	movw	r24, r30
    1736:	08 95       	ret

00001738 <__vector_9>:
    1738:	1f 92       	push	r1
    173a:	0f 92       	push	r0
    173c:	0f b6       	in	r0, 0x3f	; 63
    173e:	0f 92       	push	r0
    1740:	11 24       	eor	r1, r1
    1742:	2f 93       	push	r18
    1744:	3f 93       	push	r19
    1746:	4f 93       	push	r20
    1748:	5f 93       	push	r21
    174a:	6f 93       	push	r22
    174c:	7f 93       	push	r23
    174e:	8f 93       	push	r24
    1750:	9f 93       	push	r25
    1752:	ef 93       	push	r30
    1754:	ff 93       	push	r31
    1756:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <overflows>
    175a:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <overflows+0x1>
    175e:	01 96       	adiw	r24, 0x01	; 1
    1760:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <overflows+0x1>
    1764:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <overflows>
    1768:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <timerQ>
    176c:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <timerQ+0x1>
    1770:	30 97       	sbiw	r30, 0x00	; 0
    1772:	01 f1       	breq	.+64     	; 0x17b4 <__vector_9+0x7c>
    1774:	42 81       	ldd	r20, Z+2	; 0x02
    1776:	53 81       	ldd	r21, Z+3	; 0x03
    1778:	64 81       	ldd	r22, Z+4	; 0x04
    177a:	75 81       	ldd	r23, Z+5	; 0x05
    177c:	86 17       	cp	r24, r22
    177e:	97 07       	cpc	r25, r23
    1780:	c9 f4       	brne	.+50     	; 0x17b4 <__vector_9+0x7c>
    1782:	ca 01       	movw	r24, r20
    1784:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1788:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    178c:	42 1b       	sub	r20, r18
    178e:	53 0b       	sbc	r21, r19
    1790:	41 30       	cpi	r20, 0x01	; 1
    1792:	51 05       	cpc	r21, r1
    1794:	29 f4       	brne	.+10     	; 0x17a0 <__vector_9+0x68>
    1796:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    179a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    179e:	01 96       	adiw	r24, 0x01	; 1
    17a0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    17a4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    17a8:	ef e6       	ldi	r30, 0x6F	; 111
    17aa:	f0 e0       	ldi	r31, 0x00	; 0
    17ac:	80 81       	ld	r24, Z
    17ae:	82 60       	ori	r24, 0x02	; 2
    17b0:	80 83       	st	Z, r24
    17b2:	05 c0       	rjmp	.+10     	; 0x17be <__vector_9+0x86>
    17b4:	ef e6       	ldi	r30, 0x6F	; 111
    17b6:	f0 e0       	ldi	r31, 0x00	; 0
    17b8:	80 81       	ld	r24, Z
    17ba:	8d 7f       	andi	r24, 0xFD	; 253
    17bc:	80 83       	st	Z, r24
    17be:	ff 91       	pop	r31
    17c0:	ef 91       	pop	r30
    17c2:	9f 91       	pop	r25
    17c4:	8f 91       	pop	r24
    17c6:	7f 91       	pop	r23
    17c8:	6f 91       	pop	r22
    17ca:	5f 91       	pop	r21
    17cc:	4f 91       	pop	r20
    17ce:	3f 91       	pop	r19
    17d0:	2f 91       	pop	r18
    17d2:	0f 90       	pop	r0
    17d4:	0f be       	out	0x3f, r0	; 63
    17d6:	0f 90       	pop	r0
    17d8:	1f 90       	pop	r1
    17da:	18 95       	reti

000017dc <__vector_7>:
    17dc:	1f 92       	push	r1
    17de:	0f 92       	push	r0
    17e0:	0f b6       	in	r0, 0x3f	; 63
    17e2:	0f 92       	push	r0
    17e4:	11 24       	eor	r1, r1
    17e6:	cf 92       	push	r12
    17e8:	df 92       	push	r13
    17ea:	ef 92       	push	r14
    17ec:	ff 92       	push	r15
    17ee:	2f 93       	push	r18
    17f0:	3f 93       	push	r19
    17f2:	4f 93       	push	r20
    17f4:	5f 93       	push	r21
    17f6:	6f 93       	push	r22
    17f8:	7f 93       	push	r23
    17fa:	8f 93       	push	r24
    17fc:	9f 93       	push	r25
    17fe:	af 93       	push	r26
    1800:	bf 93       	push	r27
    1802:	ef 93       	push	r30
    1804:	ff 93       	push	r31
    1806:	c0 90 36 01 	lds	r12, 0x0136	; 0x800136 <overflows>
    180a:	d0 90 37 01 	lds	r13, 0x0137	; 0x800137 <overflows+0x1>
    180e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1812:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1816:	b0 99       	sbic	0x16, 0	; 22
    1818:	0f c0       	rjmp	.+30     	; 0x1838 <__vector_7+0x5c>
    181a:	0d 2c       	mov	r0, r13
    181c:	00 0c       	add	r0, r0
    181e:	ee 08       	sbc	r14, r14
    1820:	ff 08       	sbc	r15, r15
    1822:	d6 01       	movw	r26, r12
    1824:	99 27       	eor	r25, r25
    1826:	88 27       	eor	r24, r24
    1828:	69 01       	movw	r12, r18
    182a:	e1 2c       	mov	r14, r1
    182c:	f1 2c       	mov	r15, r1
    182e:	c8 2a       	or	r12, r24
    1830:	d9 2a       	or	r13, r25
    1832:	ea 2a       	or	r14, r26
    1834:	fb 2a       	or	r15, r27
    1836:	15 c0       	rjmp	.+42     	; 0x1862 <__vector_7+0x86>
    1838:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    183c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1840:	8f ef       	ldi	r24, 0xFF	; 255
    1842:	c8 1a       	sub	r12, r24
    1844:	d8 0a       	sbc	r13, r24
    1846:	0d 2c       	mov	r0, r13
    1848:	00 0c       	add	r0, r0
    184a:	ee 08       	sbc	r14, r14
    184c:	ff 08       	sbc	r15, r15
    184e:	d6 01       	movw	r26, r12
    1850:	99 27       	eor	r25, r25
    1852:	88 27       	eor	r24, r24
    1854:	69 01       	movw	r12, r18
    1856:	e1 2c       	mov	r14, r1
    1858:	f1 2c       	mov	r15, r1
    185a:	c8 2a       	or	r12, r24
    185c:	d9 2a       	or	r13, r25
    185e:	ea 2a       	or	r14, r26
    1860:	fb 2a       	or	r15, r27
    1862:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <timerQ>
    1866:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <timerQ+0x1>
    186a:	30 97       	sbiw	r30, 0x00	; 0
    186c:	09 f4       	brne	.+2      	; 0x1870 <__vector_7+0x94>
    186e:	42 c0       	rjmp	.+132    	; 0x18f4 <__vector_7+0x118>
    1870:	82 81       	ldd	r24, Z+2	; 0x02
    1872:	93 81       	ldd	r25, Z+3	; 0x03
    1874:	a4 81       	ldd	r26, Z+4	; 0x04
    1876:	b5 81       	ldd	r27, Z+5	; 0x05
    1878:	8c 19       	sub	r24, r12
    187a:	9d 09       	sbc	r25, r13
    187c:	ae 09       	sbc	r26, r14
    187e:	bf 09       	sbc	r27, r15
    1880:	18 16       	cp	r1, r24
    1882:	19 06       	cpc	r1, r25
    1884:	1a 06       	cpc	r1, r26
    1886:	1b 06       	cpc	r1, r27
    1888:	ec f1       	brlt	.+122    	; 0x1904 <__vector_7+0x128>
    188a:	8c e3       	ldi	r24, 0x3C	; 60
    188c:	91 e0       	ldi	r25, 0x01	; 1
    188e:	0e 94 85 0b 	call	0x170a	; 0x170a <dequeue>
    1892:	6e e3       	ldi	r22, 0x3E	; 62
    1894:	71 e0       	ldi	r23, 0x01	; 1
    1896:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <enqueueByDeadline>
    189a:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <timerQ>
    189e:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <timerQ+0x1>
    18a2:	30 97       	sbiw	r30, 0x00	; 0
    18a4:	39 f1       	breq	.+78     	; 0x18f4 <__vector_7+0x118>
    18a6:	82 81       	ldd	r24, Z+2	; 0x02
    18a8:	93 81       	ldd	r25, Z+3	; 0x03
    18aa:	a4 81       	ldd	r26, Z+4	; 0x04
    18ac:	b5 81       	ldd	r27, Z+5	; 0x05
    18ae:	8c 19       	sub	r24, r12
    18b0:	9d 09       	sbc	r25, r13
    18b2:	ae 09       	sbc	r26, r14
    18b4:	bf 09       	sbc	r27, r15
    18b6:	18 16       	cp	r1, r24
    18b8:	19 06       	cpc	r1, r25
    18ba:	1a 06       	cpc	r1, r26
    18bc:	1b 06       	cpc	r1, r27
    18be:	2c f7       	brge	.-54     	; 0x188a <__vector_7+0xae>
    18c0:	21 c0       	rjmp	.+66     	; 0x1904 <__vector_7+0x128>
    18c2:	9c 01       	movw	r18, r24
    18c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    18c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    18cc:	84 1b       	sub	r24, r20
    18ce:	95 0b       	sbc	r25, r21
    18d0:	01 97       	sbiw	r24, 0x01	; 1
    18d2:	31 f4       	brne	.+12     	; 0x18e0 <__vector_7+0x104>
    18d4:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    18d8:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    18dc:	2f 5f       	subi	r18, 0xFF	; 255
    18de:	3f 4f       	sbci	r19, 0xFF	; 255
    18e0:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    18e4:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    18e8:	ef e6       	ldi	r30, 0x6F	; 111
    18ea:	f0 e0       	ldi	r31, 0x00	; 0
    18ec:	80 81       	ld	r24, Z
    18ee:	82 60       	ori	r24, 0x02	; 2
    18f0:	80 83       	st	Z, r24
    18f2:	05 c0       	rjmp	.+10     	; 0x18fe <__vector_7+0x122>
    18f4:	ef e6       	ldi	r30, 0x6F	; 111
    18f6:	f0 e0       	ldi	r31, 0x00	; 0
    18f8:	80 81       	ld	r24, Z
    18fa:	8d 7f       	andi	r24, 0xFD	; 253
    18fc:	80 83       	st	Z, r24
    18fe:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
    1902:	0c c0       	rjmp	.+24     	; 0x191c <__vector_7+0x140>
    1904:	82 81       	ldd	r24, Z+2	; 0x02
    1906:	93 81       	ldd	r25, Z+3	; 0x03
    1908:	a4 81       	ldd	r26, Z+4	; 0x04
    190a:	b5 81       	ldd	r27, Z+5	; 0x05
    190c:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    1910:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1914:	2a 17       	cp	r18, r26
    1916:	3b 07       	cpc	r19, r27
    1918:	69 f7       	brne	.-38     	; 0x18f4 <__vector_7+0x118>
    191a:	d3 cf       	rjmp	.-90     	; 0x18c2 <__vector_7+0xe6>
    191c:	ff 91       	pop	r31
    191e:	ef 91       	pop	r30
    1920:	bf 91       	pop	r27
    1922:	af 91       	pop	r26
    1924:	9f 91       	pop	r25
    1926:	8f 91       	pop	r24
    1928:	7f 91       	pop	r23
    192a:	6f 91       	pop	r22
    192c:	5f 91       	pop	r21
    192e:	4f 91       	pop	r20
    1930:	3f 91       	pop	r19
    1932:	2f 91       	pop	r18
    1934:	ff 90       	pop	r15
    1936:	ef 90       	pop	r14
    1938:	df 90       	pop	r13
    193a:	cf 90       	pop	r12
    193c:	0f 90       	pop	r0
    193e:	0f be       	out	0x3f, r0	; 63
    1940:	0f 90       	pop	r0
    1942:	1f 90       	pop	r1
    1944:	18 95       	reti

00001946 <async>:
    1946:	3f 92       	push	r3
    1948:	4f 92       	push	r4
    194a:	5f 92       	push	r5
    194c:	6f 92       	push	r6
    194e:	7f 92       	push	r7
    1950:	8f 92       	push	r8
    1952:	9f 92       	push	r9
    1954:	af 92       	push	r10
    1956:	bf 92       	push	r11
    1958:	cf 92       	push	r12
    195a:	df 92       	push	r13
    195c:	ef 92       	push	r14
    195e:	ff 92       	push	r15
    1960:	0f 93       	push	r16
    1962:	1f 93       	push	r17
    1964:	cf 93       	push	r28
    1966:	df 93       	push	r29
    1968:	2b 01       	movw	r4, r22
    196a:	3c 01       	movw	r6, r24
    196c:	49 01       	movw	r8, r18
    196e:	5a 01       	movw	r10, r20
    1970:	8f b7       	in	r24, 0x3f	; 63
    1972:	80 78       	andi	r24, 0x80	; 128
    1974:	38 2e       	mov	r3, r24
    1976:	f8 94       	cli
    1978:	8c e2       	ldi	r24, 0x2C	; 44
    197a:	91 e0       	ldi	r25, 0x01	; 1
    197c:	0e 94 85 0b 	call	0x170a	; 0x170a <dequeue>
    1980:	ec 01       	movw	r28, r24
    1982:	1b 87       	std	Y+11, r17	; 0x0b
    1984:	0a 87       	std	Y+10, r16	; 0x0a
    1986:	fd 86       	std	Y+13, r15	; 0x0d
    1988:	ec 86       	std	Y+12, r14	; 0x0c
    198a:	df 86       	std	Y+15, r13	; 0x0f
    198c:	ce 86       	std	Y+14, r12	; 0x0e
    198e:	33 20       	and	r3, r3
    1990:	61 f0       	breq	.+24     	; 0x19aa <async+0x64>
    1992:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <current>
    1996:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <current+0x1>
    199a:	02 80       	ldd	r0, Z+2	; 0x02
    199c:	f3 81       	ldd	r31, Z+3	; 0x03
    199e:	e0 2d       	mov	r30, r0
    19a0:	82 81       	ldd	r24, Z+2	; 0x02
    19a2:	93 81       	ldd	r25, Z+3	; 0x03
    19a4:	a4 81       	ldd	r26, Z+4	; 0x04
    19a6:	b5 81       	ldd	r27, Z+5	; 0x05
    19a8:	08 c0       	rjmp	.+16     	; 0x19ba <async+0x74>
    19aa:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <timestamp>
    19ae:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <timestamp+0x1>
    19b2:	a0 91 3a 01 	lds	r26, 0x013A	; 0x80013a <timestamp+0x2>
    19b6:	b0 91 3b 01 	lds	r27, 0x013B	; 0x80013b <timestamp+0x3>
    19ba:	48 0e       	add	r4, r24
    19bc:	59 1e       	adc	r5, r25
    19be:	6a 1e       	adc	r6, r26
    19c0:	7b 1e       	adc	r7, r27
    19c2:	4a 82       	std	Y+2, r4	; 0x02
    19c4:	5b 82       	std	Y+3, r5	; 0x03
    19c6:	6c 82       	std	Y+4, r6	; 0x04
    19c8:	7d 82       	std	Y+5, r7	; 0x05
    19ca:	18 14       	cp	r1, r8
    19cc:	19 04       	cpc	r1, r9
    19ce:	1a 04       	cpc	r1, r10
    19d0:	1b 04       	cpc	r1, r11
    19d2:	44 f0       	brlt	.+16     	; 0x19e4 <async+0x9e>
    19d4:	0f 2e       	mov	r0, r31
    19d6:	88 24       	eor	r8, r8
    19d8:	8a 94       	dec	r8
    19da:	98 2c       	mov	r9, r8
    19dc:	a8 2c       	mov	r10, r8
    19de:	ff e7       	ldi	r31, 0x7F	; 127
    19e0:	bf 2e       	mov	r11, r31
    19e2:	f0 2d       	mov	r31, r0
    19e4:	84 0c       	add	r8, r4
    19e6:	95 1c       	adc	r9, r5
    19e8:	a6 1c       	adc	r10, r6
    19ea:	b7 1c       	adc	r11, r7
    19ec:	8e 82       	std	Y+6, r8	; 0x06
    19ee:	9f 82       	std	Y+7, r9	; 0x07
    19f0:	a8 86       	std	Y+8, r10	; 0x08
    19f2:	b9 86       	std	Y+9, r11	; 0x09
    19f4:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <overflows>
    19f8:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <overflows+0x1>
    19fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a00:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a04:	b0 99       	sbic	0x16, 0	; 22
    1a06:	0e c0       	rjmp	.+28     	; 0x1a24 <async+0xde>
    1a08:	09 2e       	mov	r0, r25
    1a0a:	00 0c       	add	r0, r0
    1a0c:	aa 0b       	sbc	r26, r26
    1a0e:	bb 0b       	sbc	r27, r27
    1a10:	dc 01       	movw	r26, r24
    1a12:	99 27       	eor	r25, r25
    1a14:	88 27       	eor	r24, r24
    1a16:	60 e0       	ldi	r22, 0x00	; 0
    1a18:	70 e0       	ldi	r23, 0x00	; 0
    1a1a:	84 2b       	or	r24, r20
    1a1c:	95 2b       	or	r25, r21
    1a1e:	a6 2b       	or	r26, r22
    1a20:	b7 2b       	or	r27, r23
    1a22:	13 c0       	rjmp	.+38     	; 0x1a4a <async+0x104>
    1a24:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a28:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a2c:	01 96       	adiw	r24, 0x01	; 1
    1a2e:	09 2e       	mov	r0, r25
    1a30:	00 0c       	add	r0, r0
    1a32:	aa 0b       	sbc	r26, r26
    1a34:	bb 0b       	sbc	r27, r27
    1a36:	dc 01       	movw	r26, r24
    1a38:	99 27       	eor	r25, r25
    1a3a:	88 27       	eor	r24, r24
    1a3c:	a9 01       	movw	r20, r18
    1a3e:	60 e0       	ldi	r22, 0x00	; 0
    1a40:	70 e0       	ldi	r23, 0x00	; 0
    1a42:	84 2b       	or	r24, r20
    1a44:	95 2b       	or	r25, r21
    1a46:	a6 2b       	or	r26, r22
    1a48:	b7 2b       	or	r27, r23
    1a4a:	48 1a       	sub	r4, r24
    1a4c:	59 0a       	sbc	r5, r25
    1a4e:	6a 0a       	sbc	r6, r26
    1a50:	7b 0a       	sbc	r7, r27
    1a52:	14 14       	cp	r1, r4
    1a54:	15 04       	cpc	r1, r5
    1a56:	16 04       	cpc	r1, r6
    1a58:	17 04       	cpc	r1, r7
    1a5a:	ac f5       	brge	.+106    	; 0x1ac6 <async+0x180>
    1a5c:	6c e3       	ldi	r22, 0x3C	; 60
    1a5e:	71 e0       	ldi	r23, 0x01	; 1
    1a60:	ce 01       	movw	r24, r28
    1a62:	0e 94 42 0b 	call	0x1684	; 0x1684 <enqueueByBaseline>
    1a66:	e0 91 3c 01 	lds	r30, 0x013C	; 0x80013c <timerQ>
    1a6a:	f0 91 3d 01 	lds	r31, 0x013D	; 0x80013d <timerQ+0x1>
    1a6e:	30 97       	sbiw	r30, 0x00	; 0
    1a70:	21 f1       	breq	.+72     	; 0x1aba <async+0x174>
    1a72:	82 81       	ldd	r24, Z+2	; 0x02
    1a74:	93 81       	ldd	r25, Z+3	; 0x03
    1a76:	a4 81       	ldd	r26, Z+4	; 0x04
    1a78:	b5 81       	ldd	r27, Z+5	; 0x05
    1a7a:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <overflows>
    1a7e:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <overflows+0x1>
    1a82:	2a 17       	cp	r18, r26
    1a84:	3b 07       	cpc	r19, r27
    1a86:	c9 f4       	brne	.+50     	; 0x1aba <async+0x174>
    1a88:	9c 01       	movw	r18, r24
    1a8a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a8e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a92:	84 1b       	sub	r24, r20
    1a94:	95 0b       	sbc	r25, r21
    1a96:	01 97       	sbiw	r24, 0x01	; 1
    1a98:	31 f4       	brne	.+12     	; 0x1aa6 <async+0x160>
    1a9a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a9e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1aa2:	2f 5f       	subi	r18, 0xFF	; 255
    1aa4:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa6:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1aaa:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1aae:	ef e6       	ldi	r30, 0x6F	; 111
    1ab0:	f0 e0       	ldi	r31, 0x00	; 0
    1ab2:	80 81       	ld	r24, Z
    1ab4:	82 60       	ori	r24, 0x02	; 2
    1ab6:	80 83       	st	Z, r24
    1ab8:	41 c0       	rjmp	.+130    	; 0x1b3c <async+0x1f6>
    1aba:	ef e6       	ldi	r30, 0x6F	; 111
    1abc:	f0 e0       	ldi	r31, 0x00	; 0
    1abe:	80 81       	ld	r24, Z
    1ac0:	8d 7f       	andi	r24, 0xFD	; 253
    1ac2:	80 83       	st	Z, r24
    1ac4:	3b c0       	rjmp	.+118    	; 0x1b3c <async+0x1f6>
    1ac6:	6e e3       	ldi	r22, 0x3E	; 62
    1ac8:	71 e0       	ldi	r23, 0x01	; 1
    1aca:	ce 01       	movw	r24, r28
    1acc:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <enqueueByDeadline>
    1ad0:	33 20       	and	r3, r3
    1ad2:	b9 f1       	breq	.+110    	; 0x1b42 <async+0x1fc>
    1ad4:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <threadPool>
    1ad8:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <threadPool+0x1>
    1adc:	00 97       	sbiw	r24, 0x00	; 0
    1ade:	81 f1       	breq	.+96     	; 0x1b40 <async+0x1fa>
    1ae0:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <activeStack>
    1ae4:	f0 91 29 01 	lds	r31, 0x0129	; 0x800129 <activeStack+0x1>
    1ae8:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <msgQ>
    1aec:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <msgQ+0x1>
    1af0:	02 81       	ldd	r16, Z+2	; 0x02
    1af2:	13 81       	ldd	r17, Z+3	; 0x03
    1af4:	d9 01       	movw	r26, r18
    1af6:	16 96       	adiw	r26, 0x06	; 6
    1af8:	4d 91       	ld	r20, X+
    1afa:	5d 91       	ld	r21, X+
    1afc:	6d 91       	ld	r22, X+
    1afe:	7c 91       	ld	r23, X
    1b00:	19 97       	sbiw	r26, 0x09	; 9
    1b02:	d8 01       	movw	r26, r16
    1b04:	16 96       	adiw	r26, 0x06	; 6
    1b06:	0d 91       	ld	r16, X+
    1b08:	1d 91       	ld	r17, X+
    1b0a:	2d 91       	ld	r18, X+
    1b0c:	3c 91       	ld	r19, X
    1b0e:	19 97       	sbiw	r26, 0x09	; 9
    1b10:	40 1b       	sub	r20, r16
    1b12:	51 0b       	sbc	r21, r17
    1b14:	62 0b       	sbc	r22, r18
    1b16:	73 0b       	sbc	r23, r19
    1b18:	9a f4       	brpl	.+38     	; 0x1b40 <async+0x1fa>
    1b1a:	dc 01       	movw	r26, r24
    1b1c:	2d 91       	ld	r18, X+
    1b1e:	3c 91       	ld	r19, X
    1b20:	11 97       	sbiw	r26, 0x01	; 1
    1b22:	30 93 2b 01 	sts	0x012B, r19	; 0x80012b <threadPool+0x1>
    1b26:	20 93 2a 01 	sts	0x012A, r18	; 0x80012a <threadPool>
    1b2a:	ed 93       	st	X+, r30
    1b2c:	fc 93       	st	X, r31
    1b2e:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <activeStack+0x1>
    1b32:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <activeStack>
    1b36:	0e 94 0c 03 	call	0x618	; 0x618 <dispatch>
    1b3a:	02 c0       	rjmp	.+4      	; 0x1b40 <async+0x1fa>
    1b3c:	33 20       	and	r3, r3
    1b3e:	09 f0       	breq	.+2      	; 0x1b42 <async+0x1fc>
    1b40:	78 94       	sei
    1b42:	ce 01       	movw	r24, r28
    1b44:	df 91       	pop	r29
    1b46:	cf 91       	pop	r28
    1b48:	1f 91       	pop	r17
    1b4a:	0f 91       	pop	r16
    1b4c:	ff 90       	pop	r15
    1b4e:	ef 90       	pop	r14
    1b50:	df 90       	pop	r13
    1b52:	cf 90       	pop	r12
    1b54:	bf 90       	pop	r11
    1b56:	af 90       	pop	r10
    1b58:	9f 90       	pop	r9
    1b5a:	8f 90       	pop	r8
    1b5c:	7f 90       	pop	r7
    1b5e:	6f 90       	pop	r6
    1b60:	5f 90       	pop	r5
    1b62:	4f 90       	pop	r4
    1b64:	3f 90       	pop	r3
    1b66:	08 95       	ret

00001b68 <sync>:
    1b68:	af 92       	push	r10
    1b6a:	bf 92       	push	r11
    1b6c:	cf 92       	push	r12
    1b6e:	df 92       	push	r13
    1b70:	ff 92       	push	r15
    1b72:	0f 93       	push	r16
    1b74:	1f 93       	push	r17
    1b76:	cf 93       	push	r28
    1b78:	df 93       	push	r29
    1b7a:	8c 01       	movw	r16, r24
    1b7c:	6b 01       	movw	r12, r22
    1b7e:	5a 01       	movw	r10, r20
    1b80:	8f b7       	in	r24, 0x3f	; 63
    1b82:	80 78       	andi	r24, 0x80	; 128
    1b84:	f8 2e       	mov	r15, r24
    1b86:	f8 94       	cli
    1b88:	d8 01       	movw	r26, r16
    1b8a:	cd 91       	ld	r28, X+
    1b8c:	dc 91       	ld	r29, X
    1b8e:	20 97       	sbiw	r28, 0x00	; 0
    1b90:	71 f1       	breq	.+92     	; 0x1bee <sync+0x86>
    1b92:	ac 81       	ldd	r26, Y+4	; 0x04
    1b94:	bd 81       	ldd	r27, Y+5	; 0x05
    1b96:	10 97       	sbiw	r26, 0x00	; 0
    1b98:	31 f0       	breq	.+12     	; 0x1ba6 <sync+0x3e>
    1b9a:	cd 91       	ld	r28, X+
    1b9c:	dc 91       	ld	r29, X
    1b9e:	ac 81       	ldd	r26, Y+4	; 0x04
    1ba0:	bd 81       	ldd	r27, Y+5	; 0x05
    1ba2:	10 97       	sbiw	r26, 0x00	; 0
    1ba4:	d1 f7       	brne	.-12     	; 0x1b9a <sync+0x32>
    1ba6:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <current>
    1baa:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <current+0x1>
    1bae:	ce 17       	cp	r28, r30
    1bb0:	df 07       	cpc	r29, r31
    1bb2:	21 f0       	breq	.+8      	; 0x1bbc <sync+0x54>
    1bb4:	ff 20       	and	r15, r15
    1bb6:	09 f4       	brne	.+2      	; 0x1bba <sync+0x52>
    1bb8:	4d c0       	rjmp	.+154    	; 0x1c54 <sync+0xec>
    1bba:	07 c0       	rjmp	.+14     	; 0x1bca <sync+0x62>
    1bbc:	ff 20       	and	r15, r15
    1bbe:	09 f4       	brne	.+2      	; 0x1bc2 <sync+0x5a>
    1bc0:	4c c0       	rjmp	.+152    	; 0x1c5a <sync+0xf2>
    1bc2:	78 94       	sei
    1bc4:	8f ef       	ldi	r24, 0xFF	; 255
    1bc6:	9f ef       	ldi	r25, 0xFF	; 255
    1bc8:	66 c0       	rjmp	.+204    	; 0x1c96 <sync+0x12e>
    1bca:	d8 01       	movw	r26, r16
    1bcc:	12 96       	adiw	r26, 0x02	; 2
    1bce:	8d 91       	ld	r24, X+
    1bd0:	9c 91       	ld	r25, X
    1bd2:	13 97       	sbiw	r26, 0x03	; 3
    1bd4:	00 97       	sbiw	r24, 0x00	; 0
    1bd6:	09 f4       	brne	.+2      	; 0x1bda <sync+0x72>
    1bd8:	46 c0       	rjmp	.+140    	; 0x1c66 <sync+0xfe>
    1bda:	dc 01       	movw	r26, r24
    1bdc:	15 96       	adiw	r26, 0x05	; 5
    1bde:	1c 92       	st	X, r1
    1be0:	1e 92       	st	-X, r1
    1be2:	14 97       	sbiw	r26, 0x04	; 4
    1be4:	40 c0       	rjmp	.+128    	; 0x1c66 <sync+0xfe>
    1be6:	78 94       	sei
    1be8:	80 e0       	ldi	r24, 0x00	; 0
    1bea:	90 e0       	ldi	r25, 0x00	; 0
    1bec:	54 c0       	rjmp	.+168    	; 0x1c96 <sync+0x12e>
    1bee:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <current>
    1bf2:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <current+0x1>
    1bf6:	f8 01       	movw	r30, r16
    1bf8:	91 83       	std	Z+1, r25	; 0x01
    1bfa:	80 83       	st	Z, r24
    1bfc:	ff 20       	and	r15, r15
    1bfe:	41 f0       	breq	.+16     	; 0x1c10 <sync+0xa8>
    1c00:	d8 01       	movw	r26, r16
    1c02:	12 96       	adiw	r26, 0x02	; 2
    1c04:	8d 91       	ld	r24, X+
    1c06:	9c 91       	ld	r25, X
    1c08:	13 97       	sbiw	r26, 0x03	; 3
    1c0a:	01 97       	sbiw	r24, 0x01	; 1
    1c0c:	09 f0       	breq	.+2      	; 0x1c10 <sync+0xa8>
    1c0e:	78 94       	sei
    1c10:	b5 01       	movw	r22, r10
    1c12:	c8 01       	movw	r24, r16
    1c14:	f6 01       	movw	r30, r12
    1c16:	09 95       	icall
    1c18:	d8 2f       	mov	r29, r24
    1c1a:	c9 2f       	mov	r28, r25
    1c1c:	8f b7       	in	r24, 0x3f	; 63
    1c1e:	f8 94       	cli
    1c20:	d8 01       	movw	r26, r16
    1c22:	11 96       	adiw	r26, 0x01	; 1
    1c24:	1c 92       	st	X, r1
    1c26:	1e 92       	st	-X, r1
    1c28:	12 96       	adiw	r26, 0x02	; 2
    1c2a:	8d 91       	ld	r24, X+
    1c2c:	9c 91       	ld	r25, X
    1c2e:	13 97       	sbiw	r26, 0x03	; 3
    1c30:	82 30       	cpi	r24, 0x02	; 2
    1c32:	91 05       	cpc	r25, r1
    1c34:	48 f0       	brcs	.+18     	; 0x1c48 <sync+0xe0>
    1c36:	13 96       	adiw	r26, 0x03	; 3
    1c38:	1c 92       	st	X, r1
    1c3a:	1e 92       	st	-X, r1
    1c3c:	12 97       	sbiw	r26, 0x02	; 2
    1c3e:	fc 01       	movw	r30, r24
    1c40:	15 82       	std	Z+5, r1	; 0x05
    1c42:	14 82       	std	Z+4, r1	; 0x04
    1c44:	0e 94 0c 03 	call	0x618	; 0x618 <dispatch>
    1c48:	ff 20       	and	r15, r15
    1c4a:	51 f0       	breq	.+20     	; 0x1c60 <sync+0xf8>
    1c4c:	78 94       	sei
    1c4e:	8d 2f       	mov	r24, r29
    1c50:	9c 2f       	mov	r25, r28
    1c52:	21 c0       	rjmp	.+66     	; 0x1c96 <sync+0x12e>
    1c54:	8f ef       	ldi	r24, 0xFF	; 255
    1c56:	9f ef       	ldi	r25, 0xFF	; 255
    1c58:	1e c0       	rjmp	.+60     	; 0x1c96 <sync+0x12e>
    1c5a:	8f ef       	ldi	r24, 0xFF	; 255
    1c5c:	9f ef       	ldi	r25, 0xFF	; 255
    1c5e:	1b c0       	rjmp	.+54     	; 0x1c96 <sync+0x12e>
    1c60:	8d 2f       	mov	r24, r29
    1c62:	9c 2f       	mov	r25, r28
    1c64:	18 c0       	rjmp	.+48     	; 0x1c96 <sync+0x12e>
    1c66:	d8 01       	movw	r26, r16
    1c68:	13 96       	adiw	r26, 0x03	; 3
    1c6a:	fc 93       	st	X, r31
    1c6c:	ee 93       	st	-X, r30
    1c6e:	12 97       	sbiw	r26, 0x02	; 2
    1c70:	15 83       	std	Z+5, r17	; 0x05
    1c72:	04 83       	std	Z+4, r16	; 0x04
    1c74:	ce 01       	movw	r24, r28
    1c76:	0e 94 0c 03 	call	0x618	; 0x618 <dispatch>
    1c7a:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <current>
    1c7e:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <current+0x1>
    1c82:	82 81       	ldd	r24, Z+2	; 0x02
    1c84:	93 81       	ldd	r25, Z+3	; 0x03
    1c86:	89 2b       	or	r24, r25
    1c88:	09 f4       	brne	.+2      	; 0x1c8c <sync+0x124>
    1c8a:	ad cf       	rjmp	.-166    	; 0x1be6 <sync+0x7e>
    1c8c:	cf 01       	movw	r24, r30
    1c8e:	f8 01       	movw	r30, r16
    1c90:	91 83       	std	Z+1, r25	; 0x01
    1c92:	80 83       	st	Z, r24
    1c94:	b5 cf       	rjmp	.-150    	; 0x1c00 <sync+0x98>
    1c96:	df 91       	pop	r29
    1c98:	cf 91       	pop	r28
    1c9a:	1f 91       	pop	r17
    1c9c:	0f 91       	pop	r16
    1c9e:	ff 90       	pop	r15
    1ca0:	df 90       	pop	r13
    1ca2:	cf 90       	pop	r12
    1ca4:	bf 90       	pop	r11
    1ca6:	af 90       	pop	r10
    1ca8:	08 95       	ret

00001caa <run>:
    1caa:	00 91 26 01 	lds	r16, 0x0126	; 0x800126 <current>
    1cae:	10 91 27 01 	lds	r17, 0x0127	; 0x800127 <current+0x1>
    1cb2:	8e e3       	ldi	r24, 0x3E	; 62
    1cb4:	91 e0       	ldi	r25, 0x01	; 1
    1cb6:	0e 94 85 0b 	call	0x170a	; 0x170a <dequeue>
    1cba:	ec 01       	movw	r28, r24
    1cbc:	d8 01       	movw	r26, r16
    1cbe:	13 96       	adiw	r26, 0x03	; 3
    1cc0:	9c 93       	st	X, r25
    1cc2:	8e 93       	st	-X, r24
    1cc4:	12 97       	sbiw	r26, 0x02	; 2
    1cc6:	78 94       	sei
    1cc8:	4e 85       	ldd	r20, Y+14	; 0x0e
    1cca:	5f 85       	ldd	r21, Y+15	; 0x0f
    1ccc:	6c 85       	ldd	r22, Y+12	; 0x0c
    1cce:	7d 85       	ldd	r23, Y+13	; 0x0d
    1cd0:	8a 85       	ldd	r24, Y+10	; 0x0a
    1cd2:	9b 85       	ldd	r25, Y+11	; 0x0b
    1cd4:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <sync>
    1cd8:	8f b7       	in	r24, 0x3f	; 63
    1cda:	f8 94       	cli
    1cdc:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <msgPool>
    1ce0:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <msgPool+0x1>
    1ce4:	99 83       	std	Y+1, r25	; 0x01
    1ce6:	88 83       	st	Y, r24
    1ce8:	d0 93 2d 01 	sts	0x012D, r29	; 0x80012d <msgPool+0x1>
    1cec:	c0 93 2c 01 	sts	0x012C, r28	; 0x80012c <msgPool>
    1cf0:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <activeStack>
    1cf4:	f0 91 29 01 	lds	r31, 0x0129	; 0x800129 <activeStack+0x1>
    1cf8:	00 81       	ld	r16, Z
    1cfa:	11 81       	ldd	r17, Z+1	; 0x01
    1cfc:	e8 01       	movw	r28, r16
    1cfe:	2a 81       	ldd	r18, Y+2	; 0x02
    1d00:	3b 81       	ldd	r19, Y+3	; 0x03
    1d02:	a0 91 3e 01 	lds	r26, 0x013E	; 0x80013e <msgQ>
    1d06:	b0 91 3f 01 	lds	r27, 0x013F	; 0x80013f <msgQ+0x1>
    1d0a:	10 97       	sbiw	r26, 0x00	; 0
    1d0c:	c1 f0       	breq	.+48     	; 0x1d3e <run+0x94>
    1d0e:	21 15       	cp	r18, r1
    1d10:	31 05       	cpc	r19, r1
    1d12:	59 f2       	breq	.-106    	; 0x1caa <run>
    1d14:	16 96       	adiw	r26, 0x06	; 6
    1d16:	8d 91       	ld	r24, X+
    1d18:	9d 91       	ld	r25, X+
    1d1a:	0d 90       	ld	r0, X+
    1d1c:	bc 91       	ld	r27, X
    1d1e:	a0 2d       	mov	r26, r0
    1d20:	e9 01       	movw	r28, r18
    1d22:	4e 81       	ldd	r20, Y+6	; 0x06
    1d24:	5f 81       	ldd	r21, Y+7	; 0x07
    1d26:	68 85       	ldd	r22, Y+8	; 0x08
    1d28:	79 85       	ldd	r23, Y+9	; 0x09
    1d2a:	84 1b       	sub	r24, r20
    1d2c:	95 0b       	sbc	r25, r21
    1d2e:	a6 0b       	sbc	r26, r22
    1d30:	b7 0b       	sbc	r27, r23
    1d32:	18 16       	cp	r1, r24
    1d34:	19 06       	cpc	r1, r25
    1d36:	1a 06       	cpc	r1, r26
    1d38:	1b 06       	cpc	r1, r27
    1d3a:	0c f0       	brlt	.+2      	; 0x1d3e <run+0x94>
    1d3c:	b6 cf       	rjmp	.-148    	; 0x1caa <run>
    1d3e:	10 93 29 01 	sts	0x0129, r17	; 0x800129 <activeStack+0x1>
    1d42:	00 93 28 01 	sts	0x0128, r16	; 0x800128 <activeStack>
    1d46:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <threadPool>
    1d4a:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <threadPool+0x1>
    1d4e:	91 83       	std	Z+1, r25	; 0x01
    1d50:	80 83       	st	Z, r24
    1d52:	f0 93 2b 01 	sts	0x012B, r31	; 0x80012b <threadPool+0x1>
    1d56:	e0 93 2a 01 	sts	0x012A, r30	; 0x80012a <threadPool>
    1d5a:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <activeStack>
    1d5e:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <activeStack+0x1>
    1d62:	14 96       	adiw	r26, 0x04	; 4
    1d64:	ed 91       	ld	r30, X+
    1d66:	fc 91       	ld	r31, X
    1d68:	15 97       	sbiw	r26, 0x05	; 5
    1d6a:	30 97       	sbiw	r30, 0x00	; 0
    1d6c:	41 f0       	breq	.+16     	; 0x1d7e <run+0xd4>
    1d6e:	a0 81       	ld	r26, Z
    1d70:	b1 81       	ldd	r27, Z+1	; 0x01
    1d72:	14 96       	adiw	r26, 0x04	; 4
    1d74:	ed 91       	ld	r30, X+
    1d76:	fc 91       	ld	r31, X
    1d78:	15 97       	sbiw	r26, 0x05	; 5
    1d7a:	30 97       	sbiw	r30, 0x00	; 0
    1d7c:	c1 f7       	brne	.-16     	; 0x1d6e <run+0xc4>
    1d7e:	cd 01       	movw	r24, r26
    1d80:	0e 94 0c 03 	call	0x618	; 0x618 <dispatch>
    1d84:	92 cf       	rjmp	.-220    	; 0x1caa <run>

00001d86 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    1d86:	42 31       	cpi	r20, 0x12	; 18
    1d88:	b8 f4       	brcc	.+46     	; 0x1db8 <install+0x32>
        char status;
        DISABLE(status);
    1d8a:	2f b7       	in	r18, 0x3f	; 63
    1d8c:	f8 94       	cli
        otable[i] = obj;
    1d8e:	50 e0       	ldi	r21, 0x00	; 0
    1d90:	44 0f       	add	r20, r20
    1d92:	55 1f       	adc	r21, r21
    1d94:	fa 01       	movw	r30, r20
    1d96:	e0 5c       	subi	r30, 0xC0	; 192
    1d98:	fe 4f       	sbci	r31, 0xFE	; 254
    1d9a:	91 83       	std	Z+1, r25	; 0x01
    1d9c:	80 83       	st	Z, r24
        mtable[i] = m;
    1d9e:	fa 01       	movw	r30, r20
    1da0:	e8 52       	subi	r30, 0x28	; 40
    1da2:	fe 4f       	sbci	r31, 0xFE	; 254
    1da4:	71 83       	std	Z+1, r23	; 0x01
    1da6:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1da8:	41 e0       	ldi	r20, 0x01	; 1
    1daa:	50 e0       	ldi	r21, 0x00	; 0
    1dac:	fc 01       	movw	r30, r24
    1dae:	53 83       	std	Z+3, r21	; 0x03
    1db0:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    1db2:	22 23       	and	r18, r18
    1db4:	0c f4       	brge	.+2      	; 0x1db8 <install+0x32>
    1db6:	78 94       	sei
    1db8:	08 95       	ret

00001dba <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1dba:	8c 01       	movw	r16, r24
    1dbc:	eb 01       	movw	r28, r22
    1dbe:	7a 01       	movw	r14, r20
    char status;
    DISABLE(status);
    1dc0:	8f b7       	in	r24, 0x3f	; 63
    1dc2:	f8 94       	cli
    initialize();
    1dc4:	0e 94 a1 02 	call	0x542	; 0x542 <initialize>
    ENABLE(1);
    1dc8:	78 94       	sei
    if (m != NULL)
    1dca:	20 97       	sbiw	r28, 0x00	; 0
    1dcc:	21 f0       	breq	.+8      	; 0x1dd6 <tinytimber+0x1c>
        m(obj, arg);
    1dce:	b7 01       	movw	r22, r14
    1dd0:	c8 01       	movw	r24, r16
    1dd2:	fe 01       	movw	r30, r28
    1dd4:	09 95       	icall
    DISABLE(status);
    1dd6:	8f b7       	in	r24, 0x3f	; 63
    1dd8:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    1dda:	0e 94 2c 03 	call	0x658	; 0x658 <schedule>
    ENABLE(1);
    1dde:	78 94       	sei
    while (1) {
        SLEEP();
    1de0:	81 e0       	ldi	r24, 0x01	; 1
    1de2:	83 bf       	out	0x33, r24	; 51
    1de4:	88 95       	sleep
    1de6:	fd cf       	rjmp	.-6      	; 0x1de2 <tinytimber+0x28>

00001de8 <__divmodsi4>:
    1de8:	05 2e       	mov	r0, r21
    1dea:	97 fb       	bst	r25, 7
    1dec:	1e f4       	brtc	.+6      	; 0x1df4 <__divmodsi4+0xc>
    1dee:	00 94       	com	r0
    1df0:	0e 94 0b 0f 	call	0x1e16	; 0x1e16 <__negsi2>
    1df4:	57 fd       	sbrc	r21, 7
    1df6:	07 d0       	rcall	.+14     	; 0x1e06 <__divmodsi4_neg2>
    1df8:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <__udivmodsi4>
    1dfc:	07 fc       	sbrc	r0, 7
    1dfe:	03 d0       	rcall	.+6      	; 0x1e06 <__divmodsi4_neg2>
    1e00:	4e f4       	brtc	.+18     	; 0x1e14 <__divmodsi4_exit>
    1e02:	0c 94 0b 0f 	jmp	0x1e16	; 0x1e16 <__negsi2>

00001e06 <__divmodsi4_neg2>:
    1e06:	50 95       	com	r21
    1e08:	40 95       	com	r20
    1e0a:	30 95       	com	r19
    1e0c:	21 95       	neg	r18
    1e0e:	3f 4f       	sbci	r19, 0xFF	; 255
    1e10:	4f 4f       	sbci	r20, 0xFF	; 255
    1e12:	5f 4f       	sbci	r21, 0xFF	; 255

00001e14 <__divmodsi4_exit>:
    1e14:	08 95       	ret

00001e16 <__negsi2>:
    1e16:	90 95       	com	r25
    1e18:	80 95       	com	r24
    1e1a:	70 95       	com	r23
    1e1c:	61 95       	neg	r22
    1e1e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e20:	8f 4f       	sbci	r24, 0xFF	; 255
    1e22:	9f 4f       	sbci	r25, 0xFF	; 255
    1e24:	08 95       	ret

00001e26 <__tablejump2__>:
    1e26:	ee 0f       	add	r30, r30
    1e28:	ff 1f       	adc	r31, r31
    1e2a:	05 90       	lpm	r0, Z+
    1e2c:	f4 91       	lpm	r31, Z
    1e2e:	e0 2d       	mov	r30, r0
    1e30:	09 94       	ijmp

00001e32 <__udivmodsi4>:
    1e32:	a1 e2       	ldi	r26, 0x21	; 33
    1e34:	1a 2e       	mov	r1, r26
    1e36:	aa 1b       	sub	r26, r26
    1e38:	bb 1b       	sub	r27, r27
    1e3a:	fd 01       	movw	r30, r26
    1e3c:	0d c0       	rjmp	.+26     	; 0x1e58 <__udivmodsi4_ep>

00001e3e <__udivmodsi4_loop>:
    1e3e:	aa 1f       	adc	r26, r26
    1e40:	bb 1f       	adc	r27, r27
    1e42:	ee 1f       	adc	r30, r30
    1e44:	ff 1f       	adc	r31, r31
    1e46:	a2 17       	cp	r26, r18
    1e48:	b3 07       	cpc	r27, r19
    1e4a:	e4 07       	cpc	r30, r20
    1e4c:	f5 07       	cpc	r31, r21
    1e4e:	20 f0       	brcs	.+8      	; 0x1e58 <__udivmodsi4_ep>
    1e50:	a2 1b       	sub	r26, r18
    1e52:	b3 0b       	sbc	r27, r19
    1e54:	e4 0b       	sbc	r30, r20
    1e56:	f5 0b       	sbc	r31, r21

00001e58 <__udivmodsi4_ep>:
    1e58:	66 1f       	adc	r22, r22
    1e5a:	77 1f       	adc	r23, r23
    1e5c:	88 1f       	adc	r24, r24
    1e5e:	99 1f       	adc	r25, r25
    1e60:	1a 94       	dec	r1
    1e62:	69 f7       	brne	.-38     	; 0x1e3e <__udivmodsi4_loop>
    1e64:	60 95       	com	r22
    1e66:	70 95       	com	r23
    1e68:	80 95       	com	r24
    1e6a:	90 95       	com	r25
    1e6c:	9b 01       	movw	r18, r22
    1e6e:	ac 01       	movw	r20, r24
    1e70:	bd 01       	movw	r22, r26
    1e72:	cf 01       	movw	r24, r30
    1e74:	08 95       	ret

00001e76 <setjmp>:
    1e76:	dc 01       	movw	r26, r24
    1e78:	2d 92       	st	X+, r2
    1e7a:	3d 92       	st	X+, r3
    1e7c:	4d 92       	st	X+, r4
    1e7e:	5d 92       	st	X+, r5
    1e80:	6d 92       	st	X+, r6
    1e82:	7d 92       	st	X+, r7
    1e84:	8d 92       	st	X+, r8
    1e86:	9d 92       	st	X+, r9
    1e88:	ad 92       	st	X+, r10
    1e8a:	bd 92       	st	X+, r11
    1e8c:	cd 92       	st	X+, r12
    1e8e:	dd 92       	st	X+, r13
    1e90:	ed 92       	st	X+, r14
    1e92:	fd 92       	st	X+, r15
    1e94:	0d 93       	st	X+, r16
    1e96:	1d 93       	st	X+, r17
    1e98:	cd 93       	st	X+, r28
    1e9a:	dd 93       	st	X+, r29
    1e9c:	ff 91       	pop	r31
    1e9e:	ef 91       	pop	r30
    1ea0:	8d b7       	in	r24, 0x3d	; 61
    1ea2:	8d 93       	st	X+, r24
    1ea4:	8e b7       	in	r24, 0x3e	; 62
    1ea6:	8d 93       	st	X+, r24
    1ea8:	8f b7       	in	r24, 0x3f	; 63
    1eaa:	8d 93       	st	X+, r24
    1eac:	ed 93       	st	X+, r30
    1eae:	fd 93       	st	X+, r31
    1eb0:	88 27       	eor	r24, r24
    1eb2:	99 27       	eor	r25, r25
    1eb4:	09 94       	ijmp

00001eb6 <longjmp>:
    1eb6:	dc 01       	movw	r26, r24
    1eb8:	cb 01       	movw	r24, r22
    1eba:	81 30       	cpi	r24, 0x01	; 1
    1ebc:	91 05       	cpc	r25, r1
    1ebe:	81 1d       	adc	r24, r1
    1ec0:	2d 90       	ld	r2, X+
    1ec2:	3d 90       	ld	r3, X+
    1ec4:	4d 90       	ld	r4, X+
    1ec6:	5d 90       	ld	r5, X+
    1ec8:	6d 90       	ld	r6, X+
    1eca:	7d 90       	ld	r7, X+
    1ecc:	8d 90       	ld	r8, X+
    1ece:	9d 90       	ld	r9, X+
    1ed0:	ad 90       	ld	r10, X+
    1ed2:	bd 90       	ld	r11, X+
    1ed4:	cd 90       	ld	r12, X+
    1ed6:	dd 90       	ld	r13, X+
    1ed8:	ed 90       	ld	r14, X+
    1eda:	fd 90       	ld	r15, X+
    1edc:	0d 91       	ld	r16, X+
    1ede:	1d 91       	ld	r17, X+
    1ee0:	cd 91       	ld	r28, X+
    1ee2:	dd 91       	ld	r29, X+
    1ee4:	ed 91       	ld	r30, X+
    1ee6:	fd 91       	ld	r31, X+
    1ee8:	0d 90       	ld	r0, X+
    1eea:	f8 94       	cli
    1eec:	fe bf       	out	0x3e, r31	; 62
    1eee:	0f be       	out	0x3f, r0	; 63
    1ef0:	ed bf       	out	0x3d, r30	; 61
    1ef2:	ed 91       	ld	r30, X+
    1ef4:	fd 91       	ld	r31, X+
    1ef6:	09 94       	ijmp

00001ef8 <_exit>:
    1ef8:	f8 94       	cli

00001efa <__stop_program>:
    1efa:	ff cf       	rjmp	.-2      	; 0x1efa <__stop_program>
