
Lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  0000222a  000022be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000222a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035b  00800132  00800132  000022f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000022f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002320  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  00002360  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000028c3  00000000  00000000  00002590  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001016  00000000  00000000  00004e53  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001565  00000000  00000000  00005e69  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b90  00000000  00000000  000073d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000912  00000000  00000000  00007f60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000028a7  00000000  00000000  00008872  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  0000b119  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 c0 04 	jmp	0x980	; 0x980 <__vector_1>
       8:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__vector_2>
       c:	0c 94 98 05 	jmp	0xb30	; 0xb30 <__vector_3>
      10:	0c 94 04 06 	jmp	0xc08	; 0xc08 <__vector_4>
      14:	0c 94 70 06 	jmp	0xce0	; 0xce0 <__vector_5>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 47 0d 	jmp	0x1a8e	; 0x1a8e <__vector_7>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 f5 0c 	jmp	0x19ea	; 0x19ea <__vector_9>
      28:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__vector_10>
      2c:	0c 94 48 07 	jmp	0xe90	; 0xe90 <__vector_11>
      30:	0c 94 b4 07 	jmp	0xf68	; 0xf68 <__vector_12>
      34:	0c 94 20 08 	jmp	0x1040	; 0x1040 <__vector_13>
      38:	0c 94 8c 08 	jmp	0x1118	; 0x1118 <__vector_14>
      3c:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__vector_15>
      40:	0c 94 64 09 	jmp	0x12c8	; 0x12c8 <__vector_16>
      44:	0c 94 d0 09 	jmp	0x13a0	; 0x13a0 <__vector_17>
      48:	0c 94 3c 0a 	jmp	0x1478	; 0x1478 <__vector_18>
      4c:	0c 94 a8 0a 	jmp	0x1550	; 0x1550 <__vector_19>
      50:	0c 94 14 0b 	jmp	0x1628	; 0x1628 <__vector_20>
      54:	0c 94 80 0b 	jmp	0x1700	; 0x1700 <__vector_21>
      58:	0c 94 ec 0b 	jmp	0x17d8	; 0x17d8 <__vector_22>
      5c:	62 00       	.word	0x0062	; ????
      5e:	67 00       	.word	0x0067	; ????
      60:	6c 00       	.word	0x006c	; ????
      62:	71 00       	.word	0x0071	; ????
      64:	76 00       	.word	0x0076	; ????
      66:	7b 00       	.word	0x007b	; ????
      68:	80 00       	.word	0x0080	; ????
      6a:	85 00       	.word	0x0085	; ????
      6c:	8a 00       	.word	0x008a	; ????
      6e:	8f 00       	.word	0x008f	; ????

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	ea e2       	ldi	r30, 0x2A	; 42
      84:	f2 e2       	ldi	r31, 0x22	; 34
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a2 33       	cpi	r26, 0x32	; 50
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	24 e0       	ldi	r18, 0x04	; 4
      94:	a2 e3       	ldi	r26, 0x32	; 50
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	ad 38       	cpi	r26, 0x8D	; 141
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 b0 03 	call	0x760	; 0x760 <main>
      a6:	0c 94 13 11 	jmp	0x2226	; 0x2226 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <writeChar>:
	 }
 }*/

 //function to write a char at a position
 void writeChar(char ch, int pos)
 {
      ae:	cf 93       	push	r28
	 char reg1;
	 char reg2;
	 char reg3;
	 char reg4;

	 	 switch (ch)
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	fc 01       	movw	r30, r24
      b4:	f0 97       	sbiw	r30, 0x30	; 48
      b6:	ea 30       	cpi	r30, 0x0A	; 10
      b8:	f1 05       	cpc	r31, r1
      ba:	a8 f5       	brcc	.+106    	; 0x126 <writeChar+0x78>
      bc:	e2 5d       	subi	r30, 0xD2	; 210
      be:	ff 4f       	sbci	r31, 0xFF	; 255
      c0:	0c 94 80 10 	jmp	0x2100	; 0x2100 <__tablejump2__>
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x05;
		 	 reg4 = 0x01;
      c4:	21 e0       	ldi	r18, 0x01	; 1
	 	 switch (ch)
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x05;
      c6:	35 e0       	ldi	r19, 0x05	; 5

	 	 switch (ch)
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
      c8:	45 e0       	ldi	r20, 0x05	; 5
	 char reg4;

	 	 switch (ch)
	 	 {
		 	 case '0' :
		 	 reg1 = 0x01;
      ca:	c1 e0       	ldi	r28, 0x01	; 1
      cc:	2c c0       	rjmp	.+88     	; 0x126 <writeChar+0x78>
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
      ce:	20 e0       	ldi	r18, 0x00	; 0
		 	 reg4 = 0x01;
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
      d0:	31 e0       	ldi	r19, 0x01	; 1
		 	 reg3 = 0x05;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x01;
      d2:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x05;
		 	 reg3 = 0x05;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '1' :
		 	 reg1 = 0x00;
      d4:	c0 e0       	ldi	r28, 0x00	; 0
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
      d6:	27 c0       	rjmp	.+78     	; 0x126 <writeChar+0x78>
		 	 case '2' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
      d8:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x00;
		 	 break;
		 	 case '2' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
      da:	3e e0       	ldi	r19, 0x0E	; 14
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '2' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
      dc:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '2' :
		 	 reg1 = 0x01;
      de:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
		 	 break;
      e0:	22 c0       	rjmp	.+68     	; 0x126 <writeChar+0x78>
		 	 case '3' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
      e2:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x01;
		 	 break;
		 	 case '3' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
      e4:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '3' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
      e6:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x0E;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '3' :
		 	 reg1 = 0x01;
      e8:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
      ea:	1d c0       	rjmp	.+58     	; 0x126 <writeChar+0x78>
		 	 case '4' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
      ec:	20 e0       	ldi	r18, 0x00	; 0
		 	 reg4 = 0x01;
		 	 break;
		 	 case '4' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
      ee:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '4' :
		 	 reg1 = 0x00;
		 	 reg2 = 0x05;
      f0:	45 e0       	ldi	r20, 0x05	; 5
		 	 reg2 = 0x01;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '4' :
		 	 reg1 = 0x00;
      f2:	c0 e0       	ldi	r28, 0x00	; 0
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
		 	 break;
      f4:	18 c0       	rjmp	.+48     	; 0x126 <writeChar+0x78>
		 	 case '5':
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
      f6:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x00;
		 	 break;
		 	 case '5':
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
      f8:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '5':
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
      fa:	44 e0       	ldi	r20, 0x04	; 4
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '5':
		 	 reg1 = 0x01;
      fc:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
      fe:	13 c0       	rjmp	.+38     	; 0x126 <writeChar+0x78>
		 	 case '6' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
     100:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x01;
		 	 break;
		 	 case '6' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
     102:	3f e0       	ldi	r19, 0x0F	; 15
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '6' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x04;
     104:	44 e0       	ldi	r20, 0x04	; 4
		 	 reg2 = 0x04;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '6' :
		 	 reg1 = 0x01;
     106:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
     108:	0e c0       	rjmp	.+28     	; 0x126 <writeChar+0x78>
		 	 case '7' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
     10a:	20 e0       	ldi	r18, 0x00	; 0
		 	 reg4 = 0x01;
		 	 break;
		 	 case '7' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
     10c:	31 e0       	ldi	r19, 0x01	; 1
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '7' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x01;
     10e:	41 e0       	ldi	r20, 0x01	; 1
		 	 reg2 = 0x04;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '7' :
		 	 reg1 = 0x01;
     110:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
     112:	09 c0       	rjmp	.+18     	; 0x126 <writeChar+0x78>
		 	 case '8' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
     114:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x00;
		 	 break;
		 	 case '8' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
     116:	3f e0       	ldi	r19, 0x0F	; 15
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '8' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
     118:	45 e0       	ldi	r20, 0x05	; 5
		 	 reg2 = 0x01;
		 	 reg3 = 0x01;
		 	 reg4 = 0x00;
		 	 break;
		 	 case '8' :
		 	 reg1 = 0x01;
     11a:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
     11c:	04 c0       	rjmp	.+8      	; 0x126 <writeChar+0x78>
		 	 case '9' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
     11e:	21 e0       	ldi	r18, 0x01	; 1
		 	 reg4 = 0x01;
		 	 break;
		 	 case '9' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
     120:	3b e0       	ldi	r19, 0x0B	; 11
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '9' :
		 	 reg1 = 0x01;
		 	 reg2 = 0x05;
     122:	45 e0       	ldi	r20, 0x05	; 5
		 	 reg2 = 0x05;
		 	 reg3 = 0x0F;
		 	 reg4 = 0x01;
		 	 break;
		 	 case '9' :
		 	 reg1 = 0x01;
     124:	c1 e0       	ldi	r28, 0x01	; 1
		 	 reg2 = 0x05;
		 	 reg3 = 0x0B;
		 	 reg4 = 0x01;
		 	 break;
	 	 }
		 	 switch (pos)
     126:	62 30       	cpi	r22, 0x02	; 2
     128:	71 05       	cpc	r23, r1
     12a:	09 f4       	brne	.+2      	; 0x12e <writeChar+0x80>
     12c:	5a c0       	rjmp	.+180    	; 0x1e2 <writeChar+0x134>
     12e:	3c f4       	brge	.+14     	; 0x13e <writeChar+0x90>
     130:	61 15       	cp	r22, r1
     132:	71 05       	cpc	r23, r1
     134:	79 f0       	breq	.+30     	; 0x154 <writeChar+0xa6>
     136:	61 30       	cpi	r22, 0x01	; 1
     138:	71 05       	cpc	r23, r1
     13a:	31 f1       	breq	.+76     	; 0x188 <writeChar+0xda>
     13c:	df c0       	rjmp	.+446    	; 0x2fc <writeChar+0x24e>
     13e:	64 30       	cpi	r22, 0x04	; 4
     140:	71 05       	cpc	r23, r1
     142:	09 f4       	brne	.+2      	; 0x146 <writeChar+0x98>
     144:	95 c0       	rjmp	.+298    	; 0x270 <writeChar+0x1c2>
     146:	0c f4       	brge	.+2      	; 0x14a <writeChar+0x9c>
     148:	66 c0       	rjmp	.+204    	; 0x216 <writeChar+0x168>
     14a:	65 30       	cpi	r22, 0x05	; 5
     14c:	71 05       	cpc	r23, r1
     14e:	09 f4       	brne	.+2      	; 0x152 <writeChar+0xa4>
     150:	a9 c0       	rjmp	.+338    	; 0x2a4 <writeChar+0x1f6>
     152:	d4 c0       	rjmp	.+424    	; 0x2fc <writeChar+0x24e>
	 {
		 case 0:
		 LCDDR0  = (LCDDR0 & 0xF0) | reg1;
     154:	ec ee       	ldi	r30, 0xEC	; 236
     156:	f0 e0       	ldi	r31, 0x00	; 0
     158:	90 81       	ld	r25, Z
     15a:	90 7f       	andi	r25, 0xF0	; 240
     15c:	8c 2f       	mov	r24, r28
     15e:	89 2b       	or	r24, r25
     160:	80 83       	st	Z, r24
		 LCDDR5  = (LCDDR5 & 0xF0) | reg2;
     162:	e1 ef       	ldi	r30, 0xF1	; 241
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	80 81       	ld	r24, Z
     168:	80 7f       	andi	r24, 0xF0	; 240
     16a:	84 2b       	or	r24, r20
     16c:	80 83       	st	Z, r24
		 LCDDR10 = (LCDDR10 & 0xF0) | reg3;
     16e:	e6 ef       	ldi	r30, 0xF6	; 246
     170:	f0 e0       	ldi	r31, 0x00	; 0
     172:	80 81       	ld	r24, Z
     174:	80 7f       	andi	r24, 0xF0	; 240
     176:	83 2b       	or	r24, r19
     178:	80 83       	st	Z, r24
		 LCDDR15 = (LCDDR15 & 0xF0) | reg4;
     17a:	eb ef       	ldi	r30, 0xFB	; 251
     17c:	f0 e0       	ldi	r31, 0x00	; 0
     17e:	80 81       	ld	r24, Z
     180:	80 7f       	andi	r24, 0xF0	; 240
     182:	82 2b       	or	r24, r18
     184:	80 83       	st	Z, r24
		 
		 break;
     186:	ba c0       	rjmp	.+372    	; 0x2fc <writeChar+0x24e>
		 case 1:
		 LCDDR0  = (LCDDR0 & 0x0F) | reg1 << 4;
     188:	ec ee       	ldi	r30, 0xEC	; 236
     18a:	f0 e0       	ldi	r31, 0x00	; 0
     18c:	50 81       	ld	r21, Z
     18e:	60 e1       	ldi	r22, 0x10	; 16
     190:	c6 9f       	mul	r28, r22
     192:	c0 01       	movw	r24, r0
     194:	11 24       	eor	r1, r1
     196:	95 2f       	mov	r25, r21
     198:	9f 70       	andi	r25, 0x0F	; 15
     19a:	89 2b       	or	r24, r25
     19c:	80 83       	st	Z, r24
		 LCDDR5  = (LCDDR5 & 0x0F) | reg2 << 4;
     19e:	e1 ef       	ldi	r30, 0xF1	; 241
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	50 81       	ld	r21, Z
     1a4:	60 e1       	ldi	r22, 0x10	; 16
     1a6:	46 9f       	mul	r20, r22
     1a8:	c0 01       	movw	r24, r0
     1aa:	11 24       	eor	r1, r1
     1ac:	45 2f       	mov	r20, r21
     1ae:	4f 70       	andi	r20, 0x0F	; 15
     1b0:	84 2b       	or	r24, r20
     1b2:	80 83       	st	Z, r24
		 LCDDR10 = (LCDDR10 & 0x0F) | reg3 << 4;
     1b4:	e6 ef       	ldi	r30, 0xF6	; 246
     1b6:	f0 e0       	ldi	r31, 0x00	; 0
     1b8:	40 81       	ld	r20, Z
     1ba:	50 e1       	ldi	r21, 0x10	; 16
     1bc:	35 9f       	mul	r19, r21
     1be:	c0 01       	movw	r24, r0
     1c0:	11 24       	eor	r1, r1
     1c2:	34 2f       	mov	r19, r20
     1c4:	3f 70       	andi	r19, 0x0F	; 15
     1c6:	83 2b       	or	r24, r19
     1c8:	80 83       	st	Z, r24
		 LCDDR15 = (LCDDR15 & 0x0F) | reg4 << 4;
     1ca:	eb ef       	ldi	r30, 0xFB	; 251
     1cc:	f0 e0       	ldi	r31, 0x00	; 0
     1ce:	30 81       	ld	r19, Z
     1d0:	60 e1       	ldi	r22, 0x10	; 16
     1d2:	26 9f       	mul	r18, r22
     1d4:	c0 01       	movw	r24, r0
     1d6:	11 24       	eor	r1, r1
     1d8:	23 2f       	mov	r18, r19
     1da:	2f 70       	andi	r18, 0x0F	; 15
     1dc:	82 2b       	or	r24, r18
     1de:	80 83       	st	Z, r24
		 break;
     1e0:	8d c0       	rjmp	.+282    	; 0x2fc <writeChar+0x24e>
		 case 2:
		 LCDDR1  = (LCDDR1 & 0xF0) | reg1;
     1e2:	ed ee       	ldi	r30, 0xED	; 237
     1e4:	f0 e0       	ldi	r31, 0x00	; 0
     1e6:	90 81       	ld	r25, Z
     1e8:	90 7f       	andi	r25, 0xF0	; 240
     1ea:	8c 2f       	mov	r24, r28
     1ec:	89 2b       	or	r24, r25
     1ee:	80 83       	st	Z, r24
		 LCDDR6  = (LCDDR6 & 0xF0) |reg2;
     1f0:	e2 ef       	ldi	r30, 0xF2	; 242
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	80 81       	ld	r24, Z
     1f6:	80 7f       	andi	r24, 0xF0	; 240
     1f8:	84 2b       	or	r24, r20
     1fa:	80 83       	st	Z, r24
		 LCDDR11 = (LCDDR11 & 0xF0) |reg3;
     1fc:	e7 ef       	ldi	r30, 0xF7	; 247
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	80 81       	ld	r24, Z
     202:	80 7f       	andi	r24, 0xF0	; 240
     204:	83 2b       	or	r24, r19
     206:	80 83       	st	Z, r24
		 LCDDR16 = (LCDDR16 & 0xF0) |reg4;
     208:	ec ef       	ldi	r30, 0xFC	; 252
     20a:	f0 e0       	ldi	r31, 0x00	; 0
     20c:	80 81       	ld	r24, Z
     20e:	80 7f       	andi	r24, 0xF0	; 240
     210:	82 2b       	or	r24, r18
     212:	80 83       	st	Z, r24
		 break;
     214:	73 c0       	rjmp	.+230    	; 0x2fc <writeChar+0x24e>
		 
		 case 3:
		 LCDDR1  = (LCDDR1 & 0x0F) | reg1 << 4;
     216:	ed ee       	ldi	r30, 0xED	; 237
     218:	f0 e0       	ldi	r31, 0x00	; 0
     21a:	50 81       	ld	r21, Z
     21c:	60 e1       	ldi	r22, 0x10	; 16
     21e:	c6 9f       	mul	r28, r22
     220:	c0 01       	movw	r24, r0
     222:	11 24       	eor	r1, r1
     224:	95 2f       	mov	r25, r21
     226:	9f 70       	andi	r25, 0x0F	; 15
     228:	89 2b       	or	r24, r25
     22a:	80 83       	st	Z, r24
		 LCDDR6  = (LCDDR6 & 0x0F) | reg2 << 4;
     22c:	e2 ef       	ldi	r30, 0xF2	; 242
     22e:	f0 e0       	ldi	r31, 0x00	; 0
     230:	50 81       	ld	r21, Z
     232:	60 e1       	ldi	r22, 0x10	; 16
     234:	46 9f       	mul	r20, r22
     236:	c0 01       	movw	r24, r0
     238:	11 24       	eor	r1, r1
     23a:	45 2f       	mov	r20, r21
     23c:	4f 70       	andi	r20, 0x0F	; 15
     23e:	84 2b       	or	r24, r20
     240:	80 83       	st	Z, r24
		 LCDDR11 = (LCDDR11 & 0x0F) | reg3 << 4;
     242:	e7 ef       	ldi	r30, 0xF7	; 247
     244:	f0 e0       	ldi	r31, 0x00	; 0
     246:	40 81       	ld	r20, Z
     248:	50 e1       	ldi	r21, 0x10	; 16
     24a:	35 9f       	mul	r19, r21
     24c:	c0 01       	movw	r24, r0
     24e:	11 24       	eor	r1, r1
     250:	34 2f       	mov	r19, r20
     252:	3f 70       	andi	r19, 0x0F	; 15
     254:	83 2b       	or	r24, r19
     256:	80 83       	st	Z, r24
		 LCDDR16 = (LCDDR16 & 0x0F) | reg4 << 4;
     258:	ec ef       	ldi	r30, 0xFC	; 252
     25a:	f0 e0       	ldi	r31, 0x00	; 0
     25c:	30 81       	ld	r19, Z
     25e:	60 e1       	ldi	r22, 0x10	; 16
     260:	26 9f       	mul	r18, r22
     262:	c0 01       	movw	r24, r0
     264:	11 24       	eor	r1, r1
     266:	23 2f       	mov	r18, r19
     268:	2f 70       	andi	r18, 0x0F	; 15
     26a:	82 2b       	or	r24, r18
     26c:	80 83       	st	Z, r24
		 break;
     26e:	46 c0       	rjmp	.+140    	; 0x2fc <writeChar+0x24e>

		 case 4:
		 LCDDR2  = (LCDDR2 & 0xF0) |reg1;
     270:	ee ee       	ldi	r30, 0xEE	; 238
     272:	f0 e0       	ldi	r31, 0x00	; 0
     274:	90 81       	ld	r25, Z
     276:	90 7f       	andi	r25, 0xF0	; 240
     278:	8c 2f       	mov	r24, r28
     27a:	89 2b       	or	r24, r25
     27c:	80 83       	st	Z, r24
		 LCDDR7  = (LCDDR7 & 0xF0) |reg2;
     27e:	e3 ef       	ldi	r30, 0xF3	; 243
     280:	f0 e0       	ldi	r31, 0x00	; 0
     282:	80 81       	ld	r24, Z
     284:	80 7f       	andi	r24, 0xF0	; 240
     286:	84 2b       	or	r24, r20
     288:	80 83       	st	Z, r24
		 LCDDR12 = (LCDDR12 & 0xF0) |reg3;
     28a:	e8 ef       	ldi	r30, 0xF8	; 248
     28c:	f0 e0       	ldi	r31, 0x00	; 0
     28e:	80 81       	ld	r24, Z
     290:	80 7f       	andi	r24, 0xF0	; 240
     292:	83 2b       	or	r24, r19
     294:	80 83       	st	Z, r24
		 LCDDR17 = (LCDDR17 & 0xF0) |reg4;
     296:	ed ef       	ldi	r30, 0xFD	; 253
     298:	f0 e0       	ldi	r31, 0x00	; 0
     29a:	80 81       	ld	r24, Z
     29c:	80 7f       	andi	r24, 0xF0	; 240
     29e:	82 2b       	or	r24, r18
     2a0:	80 83       	st	Z, r24
		 break;
     2a2:	2c c0       	rjmp	.+88     	; 0x2fc <writeChar+0x24e>

		 case 5:
		 LCDDR2  = (LCDDR2 & 0x0F) | reg1 << 4;
     2a4:	ee ee       	ldi	r30, 0xEE	; 238
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	50 81       	ld	r21, Z
     2aa:	60 e1       	ldi	r22, 0x10	; 16
     2ac:	c6 9f       	mul	r28, r22
     2ae:	c0 01       	movw	r24, r0
     2b0:	11 24       	eor	r1, r1
     2b2:	95 2f       	mov	r25, r21
     2b4:	9f 70       	andi	r25, 0x0F	; 15
     2b6:	89 2b       	or	r24, r25
     2b8:	80 83       	st	Z, r24
		 LCDDR7  = (LCDDR7 & 0x0F) | reg2 << 4;
     2ba:	e3 ef       	ldi	r30, 0xF3	; 243
     2bc:	f0 e0       	ldi	r31, 0x00	; 0
     2be:	50 81       	ld	r21, Z
     2c0:	60 e1       	ldi	r22, 0x10	; 16
     2c2:	46 9f       	mul	r20, r22
     2c4:	c0 01       	movw	r24, r0
     2c6:	11 24       	eor	r1, r1
     2c8:	95 2f       	mov	r25, r21
     2ca:	9f 70       	andi	r25, 0x0F	; 15
     2cc:	89 2b       	or	r24, r25
     2ce:	80 83       	st	Z, r24
		 LCDDR12 = (LCDDR12 & 0x0F) | reg3 << 4;
     2d0:	e8 ef       	ldi	r30, 0xF8	; 248
     2d2:	f0 e0       	ldi	r31, 0x00	; 0
     2d4:	40 81       	ld	r20, Z
     2d6:	50 e1       	ldi	r21, 0x10	; 16
     2d8:	35 9f       	mul	r19, r21
     2da:	c0 01       	movw	r24, r0
     2dc:	11 24       	eor	r1, r1
     2de:	94 2f       	mov	r25, r20
     2e0:	9f 70       	andi	r25, 0x0F	; 15
     2e2:	89 2b       	or	r24, r25
     2e4:	80 83       	st	Z, r24
		 LCDDR17 = (LCDDR17 & 0x0F) | reg4 << 4;
     2e6:	ed ef       	ldi	r30, 0xFD	; 253
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	30 81       	ld	r19, Z
     2ec:	60 e1       	ldi	r22, 0x10	; 16
     2ee:	26 9f       	mul	r18, r22
     2f0:	c0 01       	movw	r24, r0
     2f2:	11 24       	eor	r1, r1
     2f4:	93 2f       	mov	r25, r19
     2f6:	9f 70       	andi	r25, 0x0F	; 15
     2f8:	89 2b       	or	r24, r25
     2fa:	80 83       	st	Z, r24
		 break;
	 }
	 
 }
     2fc:	cf 91       	pop	r28
     2fe:	08 95       	ret

00000300 <printAt>:

 void printAt(long num, int pos) 
 {
     300:	8f 92       	push	r8
     302:	9f 92       	push	r9
     304:	af 92       	push	r10
     306:	bf 92       	push	r11
     308:	cf 92       	push	r12
     30a:	df 92       	push	r13
     30c:	ef 92       	push	r14
     30e:	ff 92       	push	r15
     310:	cf 93       	push	r28
     312:	df 93       	push	r29
     314:	4b 01       	movw	r8, r22
     316:	5c 01       	movw	r10, r24
     318:	ea 01       	movw	r28, r20
	
	 int pp = pos;
	 writeChar( (num % 100) / 10 + '0', pp);
     31a:	24 e6       	ldi	r18, 0x64	; 100
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	40 e0       	ldi	r20, 0x00	; 0
     320:	50 e0       	ldi	r21, 0x00	; 0
     322:	0e 94 61 10 	call	0x20c2	; 0x20c2 <__divmodsi4>
     326:	0f 2e       	mov	r0, r31
     328:	fa e0       	ldi	r31, 0x0A	; 10
     32a:	cf 2e       	mov	r12, r31
     32c:	d1 2c       	mov	r13, r1
     32e:	e1 2c       	mov	r14, r1
     330:	f1 2c       	mov	r15, r1
     332:	f0 2d       	mov	r31, r0
     334:	a7 01       	movw	r20, r14
     336:	96 01       	movw	r18, r12
     338:	0e 94 61 10 	call	0x20c2	; 0x20c2 <__divmodsi4>
     33c:	be 01       	movw	r22, r28
     33e:	80 e3       	ldi	r24, 0x30	; 48
     340:	82 0f       	add	r24, r18
     342:	0e 94 57 00 	call	0xae	; 0xae <writeChar>
	 pp++;
     346:	21 96       	adiw	r28, 0x01	; 1
	 writeChar( num % 10 + '0', pp);
     348:	c5 01       	movw	r24, r10
     34a:	b4 01       	movw	r22, r8
     34c:	a7 01       	movw	r20, r14
     34e:	96 01       	movw	r18, r12
     350:	0e 94 61 10 	call	0x20c2	; 0x20c2 <__divmodsi4>
     354:	86 2f       	mov	r24, r22
     356:	be 01       	movw	r22, r28
     358:	80 5d       	subi	r24, 0xD0	; 208
     35a:	0e 94 57 00 	call	0xae	; 0xae <writeChar>

 }
     35e:	df 91       	pop	r29
     360:	cf 91       	pop	r28
     362:	ff 90       	pop	r15
     364:	ef 90       	pop	r14
     366:	df 90       	pop	r13
     368:	cf 90       	pop	r12
     36a:	bf 90       	pop	r11
     36c:	af 90       	pop	r10
     36e:	9f 90       	pop	r9
     370:	8f 90       	pop	r8
     372:	08 95       	ret

00000374 <LCD_Init>:
#include <avr/io.h>

 void LCD_Init(void)
 {
	 //setting for the AVR//
	 CLKPR = 0x80;
     374:	e1 e6       	ldi	r30, 0x61	; 97
     376:	f0 e0       	ldi	r31, 0x00	; 0
     378:	80 e8       	ldi	r24, 0x80	; 128
     37a:	80 83       	st	Z, r24
	 CLKPR = 0x00;
     37c:	10 82       	st	Z, r1
	 //external async clock, 1/3 bias, 1/4 duty cycle, 25 segments
	 LCDCRB = (1 << LCDCS) | (1 << LCDMUX0) | (1 << LCDMUX1) | (1 << LCDPM0) | (1 << LCDPM1) | (1 << LCDPM2);
     37e:	87 eb       	ldi	r24, 0xB7	; 183
     380:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	 //clock divider N=8
	 LCDFRR = (1 << LCDCD0) | (1 << LCDCD1) | (1 << LCDCD2);
     384:	87 e0       	ldi	r24, 0x07	; 7
     386:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	 //LCD low power, no frame interrupt no blanking
	 LCDCRA = (1 << LCDEN) | (1 << LCDAB);
     38a:	80 ec       	ldi	r24, 0xC0	; 192
     38c:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
	 //Drive time 300ms, control voltage 3,35V
	 LCDCCR = (1 << LCDCC0) | (1 << LCDCC1) | (1 << LCDCC2) | (1 << LCDCC3);
     390:	9f e0       	ldi	r25, 0x0F	; 15
     392:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
	 //timer with prescaler 256
	// TCCR1B = (1<<CS12);


	 //External input
	 EIMSK = (1 << PCIE1) | (1 << PCIE0);
     396:	8d bb       	out	0x1d, r24	; 29
	 PCMSK1 = (1 << PCINT15) | (1 << PCINT14) | (1 << PCINT12);
     398:	80 ed       	ldi	r24, 0xD0	; 208
     39a:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
	 PCMSK0 = (1 << PCINT2) | (1 << PCINT3);
     39e:	9c e0       	ldi	r25, 0x0C	; 12
     3a0:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
	// EIFR = 0xC0;
	 //activate the button
	 PORTB = (1 << PINB7) | (1 << PINB6) | (1 << PINB4);
     3a4:	85 b9       	out	0x05, r24	; 5
	 PORTE = (1 << PINE2) | (1 << PINE3) | (1 << PINE4) | (1 << PINE6);
     3a6:	8c e5       	ldi	r24, 0x5C	; 92
     3a8:	8e b9       	out	0x0e, r24	; 14
     3aa:	08 95       	ret

000003ac <scroll>:
#include <avr/io.h>
#include "GUI.h"
#include "main.h"


void scroll(Joystick *self, int arg){
     3ac:	af 92       	push	r10
     3ae:	bf 92       	push	r11
     3b0:	cf 92       	push	r12
     3b2:	df 92       	push	r13
     3b4:	ef 92       	push	r14
     3b6:	ff 92       	push	r15
     3b8:	0f 93       	push	r16
     3ba:	1f 93       	push	r17
     3bc:	cf 93       	push	r28
     3be:	df 93       	push	r29
     3c0:	ec 01       	movw	r28, r24
     3c2:	5b 01       	movw	r10, r22
	if(!(PINB &(1<<PINB6))){
     3c4:	1e 99       	sbic	0x03, 6	; 3
     3c6:	39 c0       	rjmp	.+114    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
		ASYNC(self->current, increaseFreq, 0);
     3c8:	08 85       	ldd	r16, Y+8	; 0x08
     3ca:	19 85       	ldd	r17, Y+9	; 0x09
     3cc:	c1 2c       	mov	r12, r1
     3ce:	d1 2c       	mov	r13, r1
     3d0:	0f 2e       	mov	r0, r31
     3d2:	fd ec       	ldi	r31, 0xCD	; 205
     3d4:	ef 2e       	mov	r14, r31
     3d6:	f3 e0       	ldi	r31, 0x03	; 3
     3d8:	ff 2e       	mov	r15, r31
     3da:	f0 2d       	mov	r31, r0
     3dc:	20 e0       	ldi	r18, 0x00	; 0
     3de:	30 e0       	ldi	r19, 0x00	; 0
     3e0:	a9 01       	movw	r20, r18
     3e2:	60 e0       	ldi	r22, 0x00	; 0
     3e4:	70 e0       	ldi	r23, 0x00	; 0
     3e6:	cb 01       	movw	r24, r22
     3e8:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>
		AFTER(MSEC(arg), self, scroll, arg+200);
     3ec:	65 01       	movw	r12, r10
     3ee:	88 ec       	ldi	r24, 0xC8	; 200
     3f0:	c8 0e       	add	r12, r24
     3f2:	d1 1c       	adc	r13, r1
     3f4:	2d e7       	ldi	r18, 0x7D	; 125
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	d5 01       	movw	r26, r10
     3fa:	0e 94 86 10 	call	0x210c	; 0x210c <__usmulhisi3>
     3fe:	8b 01       	movw	r16, r22
     400:	9c 01       	movw	r18, r24
     402:	99 23       	and	r25, r25
     404:	24 f4       	brge	.+8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     406:	0d 5f       	subi	r16, 0xFD	; 253
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	2f 4f       	sbci	r18, 0xFF	; 255
     40c:	3f 4f       	sbci	r19, 0xFF	; 255
     40e:	c9 01       	movw	r24, r18
     410:	b8 01       	movw	r22, r16
     412:	95 95       	asr	r25
     414:	87 95       	ror	r24
     416:	77 95       	ror	r23
     418:	67 95       	ror	r22
     41a:	95 95       	asr	r25
     41c:	87 95       	ror	r24
     41e:	77 95       	ror	r23
     420:	67 95       	ror	r22
     422:	0f 2e       	mov	r0, r31
     424:	f6 ed       	ldi	r31, 0xD6	; 214
     426:	ef 2e       	mov	r14, r31
     428:	f1 e0       	ldi	r31, 0x01	; 1
     42a:	ff 2e       	mov	r15, r31
     42c:	f0 2d       	mov	r31, r0
     42e:	8e 01       	movw	r16, r28
     430:	20 e0       	ldi	r18, 0x00	; 0
     432:	30 e0       	ldi	r19, 0x00	; 0
     434:	a9 01       	movw	r20, r18
     436:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>

	}
		if(!(PINB &(1<<PINB7))){
     43a:	1f 99       	sbic	0x03, 7	; 3
     43c:	39 c0       	rjmp	.+114    	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
			ASYNC(self->current, decreaseFreq, 0);
     43e:	08 85       	ldd	r16, Y+8	; 0x08
     440:	19 85       	ldd	r17, Y+9	; 0x09
     442:	c1 2c       	mov	r12, r1
     444:	d1 2c       	mov	r13, r1
     446:	0f 2e       	mov	r0, r31
     448:	f8 ed       	ldi	r31, 0xD8	; 216
     44a:	ef 2e       	mov	r14, r31
     44c:	f3 e0       	ldi	r31, 0x03	; 3
     44e:	ff 2e       	mov	r15, r31
     450:	f0 2d       	mov	r31, r0
     452:	20 e0       	ldi	r18, 0x00	; 0
     454:	30 e0       	ldi	r19, 0x00	; 0
     456:	a9 01       	movw	r20, r18
     458:	60 e0       	ldi	r22, 0x00	; 0
     45a:	70 e0       	ldi	r23, 0x00	; 0
     45c:	cb 01       	movw	r24, r22
     45e:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>
			AFTER(MSEC(arg), self, scroll, arg+200);
     462:	65 01       	movw	r12, r10
     464:	88 ec       	ldi	r24, 0xC8	; 200
     466:	c8 0e       	add	r12, r24
     468:	d1 1c       	adc	r13, r1
     46a:	2d e7       	ldi	r18, 0x7D	; 125
     46c:	30 e0       	ldi	r19, 0x00	; 0
     46e:	d5 01       	movw	r26, r10
     470:	0e 94 86 10 	call	0x210c	; 0x210c <__usmulhisi3>
     474:	8b 01       	movw	r16, r22
     476:	9c 01       	movw	r18, r24
     478:	99 23       	and	r25, r25
     47a:	24 f4       	brge	.+8      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
     47c:	0d 5f       	subi	r16, 0xFD	; 253
     47e:	1f 4f       	sbci	r17, 0xFF	; 255
     480:	2f 4f       	sbci	r18, 0xFF	; 255
     482:	3f 4f       	sbci	r19, 0xFF	; 255
     484:	c9 01       	movw	r24, r18
     486:	b8 01       	movw	r22, r16
     488:	95 95       	asr	r25
     48a:	87 95       	ror	r24
     48c:	77 95       	ror	r23
     48e:	67 95       	ror	r22
     490:	95 95       	asr	r25
     492:	87 95       	ror	r24
     494:	77 95       	ror	r23
     496:	67 95       	ror	r22
     498:	0f 2e       	mov	r0, r31
     49a:	f6 ed       	ldi	r31, 0xD6	; 214
     49c:	ef 2e       	mov	r14, r31
     49e:	f1 e0       	ldi	r31, 0x01	; 1
     4a0:	ff 2e       	mov	r15, r31
     4a2:	f0 2d       	mov	r31, r0
     4a4:	8e 01       	movw	r16, r28
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	a9 01       	movw	r20, r18
     4ac:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>

		}
	ASYNC(self, start, 0);
     4b0:	c1 2c       	mov	r12, r1
     4b2:	d1 2c       	mov	r13, r1
     4b4:	0f 2e       	mov	r0, r31
     4b6:	f2 e9       	ldi	r31, 0x92	; 146
     4b8:	ef 2e       	mov	r14, r31
     4ba:	f3 e0       	ldi	r31, 0x03	; 3
     4bc:	ff 2e       	mov	r15, r31
     4be:	f0 2d       	mov	r31, r0
     4c0:	8e 01       	movw	r16, r28
     4c2:	20 e0       	ldi	r18, 0x00	; 0
     4c4:	30 e0       	ldi	r19, 0x00	; 0
     4c6:	a9 01       	movw	r20, r18
     4c8:	60 e0       	ldi	r22, 0x00	; 0
     4ca:	70 e0       	ldi	r23, 0x00	; 0
     4cc:	cb 01       	movw	r24, r22
     4ce:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>
}
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	ff 90       	pop	r15
     4dc:	ef 90       	pop	r14
     4de:	df 90       	pop	r13
     4e0:	cf 90       	pop	r12
     4e2:	bf 90       	pop	r11
     4e4:	af 90       	pop	r10
     4e6:	08 95       	ret

000004e8 <freqDisplay>:
	ASYNC(self,updateLCD,0);
	
}


void freqDisplay(Joystick *self, int arg){
     4e8:	cf 92       	push	r12
     4ea:	df 92       	push	r13
     4ec:	ef 92       	push	r14
     4ee:	ff 92       	push	r15
     4f0:	0f 93       	push	r16
     4f2:	1f 93       	push	r17
     4f4:	8c 01       	movw	r16, r24
	
	//xor output av freq from pin
	if(PORTE & (1<<PINE4)){
     4f6:	74 9b       	sbis	0x0e, 4	; 14
     4f8:	04 c0       	rjmp	.+8      	; 0x502 <__stack+0x3>
		PORTE ^= (1<<PINE4);
     4fa:	9e b1       	in	r25, 0x0e	; 14
     4fc:	80 e1       	ldi	r24, 0x10	; 16
     4fe:	89 27       	eor	r24, r25
     500:	8e b9       	out	0x0e, r24	; 14
	}
/*
	if(PORTE & (1<<PINE6)){
		PORTE ^= (1<<PINE6);
	}*/
	AFTER(MSEC(500/self->current->freq), self, freqDisplay, 0);
     502:	d8 01       	movw	r26, r16
     504:	18 96       	adiw	r26, 0x08	; 8
     506:	ed 91       	ld	r30, X+
     508:	fc 91       	ld	r31, X
     50a:	19 97       	sbiw	r26, 0x09	; 9
     50c:	64 81       	ldd	r22, Z+4	; 0x04
     50e:	75 81       	ldd	r23, Z+5	; 0x05
     510:	84 ef       	ldi	r24, 0xF4	; 244
     512:	91 e0       	ldi	r25, 0x01	; 1
     514:	0e 94 4d 10 	call	0x209a	; 0x209a <__divmodhi4>
     518:	2d e7       	ldi	r18, 0x7D	; 125
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	db 01       	movw	r26, r22
     51e:	0e 94 86 10 	call	0x210c	; 0x210c <__usmulhisi3>
     522:	6b 01       	movw	r12, r22
     524:	7c 01       	movw	r14, r24
     526:	99 23       	and	r25, r25
     528:	2c f4       	brge	.+10     	; 0x534 <__stack+0x35>
     52a:	b3 e0       	ldi	r27, 0x03	; 3
     52c:	cb 0e       	add	r12, r27
     52e:	d1 1c       	adc	r13, r1
     530:	e1 1c       	adc	r14, r1
     532:	f1 1c       	adc	r15, r1
     534:	c7 01       	movw	r24, r14
     536:	b6 01       	movw	r22, r12
     538:	95 95       	asr	r25
     53a:	87 95       	ror	r24
     53c:	77 95       	ror	r23
     53e:	67 95       	ror	r22
     540:	95 95       	asr	r25
     542:	87 95       	ror	r24
     544:	77 95       	ror	r23
     546:	67 95       	ror	r22
     548:	c1 2c       	mov	r12, r1
     54a:	d1 2c       	mov	r13, r1
     54c:	0f 2e       	mov	r0, r31
     54e:	f4 e7       	ldi	r31, 0x74	; 116
     550:	ef 2e       	mov	r14, r31
     552:	f2 e0       	ldi	r31, 0x02	; 2
     554:	ff 2e       	mov	r15, r31
     556:	f0 2d       	mov	r31, r0
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	a9 01       	movw	r20, r18
     55e:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>
}
     562:	1f 91       	pop	r17
     564:	0f 91       	pop	r16
     566:	ff 90       	pop	r15
     568:	ef 90       	pop	r14
     56a:	df 90       	pop	r13
     56c:	cf 90       	pop	r12
     56e:	08 95       	ret

00000570 <updateLCD>:

		}
	ASYNC(self, start, 0);
}

 void updateLCD(Joystick *self, int arg){
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
     574:	ec 01       	movw	r28, r24
	 printAt(self->Pulse1->freq, self->Pulse1->position);
     576:	ec 81       	ldd	r30, Y+4	; 0x04
     578:	fd 81       	ldd	r31, Y+5	; 0x05
     57a:	46 81       	ldd	r20, Z+6	; 0x06
     57c:	57 81       	ldd	r21, Z+7	; 0x07
     57e:	64 81       	ldd	r22, Z+4	; 0x04
     580:	75 81       	ldd	r23, Z+5	; 0x05
     582:	07 2e       	mov	r0, r23
     584:	00 0c       	add	r0, r0
     586:	88 0b       	sbc	r24, r24
     588:	99 0b       	sbc	r25, r25
     58a:	0e 94 80 01 	call	0x300	; 0x300 <printAt>
	 printAt(self->Pulse2->freq, self->Pulse2->position);
     58e:	ee 81       	ldd	r30, Y+6	; 0x06
     590:	ff 81       	ldd	r31, Y+7	; 0x07
     592:	46 81       	ldd	r20, Z+6	; 0x06
     594:	57 81       	ldd	r21, Z+7	; 0x07
     596:	64 81       	ldd	r22, Z+4	; 0x04
     598:	75 81       	ldd	r23, Z+5	; 0x05
     59a:	07 2e       	mov	r0, r23
     59c:	00 0c       	add	r0, r0
     59e:	88 0b       	sbc	r24, r24
     5a0:	99 0b       	sbc	r25, r25
     5a2:	0e 94 80 01 	call	0x300	; 0x300 <printAt>
 }
     5a6:	df 91       	pop	r29
     5a8:	cf 91       	pop	r28
     5aa:	08 95       	ret

000005ac <pinBdoSOMETHING>:
void pinBdoSOMETHING(Joystick *self, int arg){
     5ac:	cf 92       	push	r12
     5ae:	df 92       	push	r13
     5b0:	ef 92       	push	r14
     5b2:	ff 92       	push	r15
     5b4:	0f 93       	push	r16
     5b6:	1f 93       	push	r17
     5b8:	cf 93       	push	r28
     5ba:	df 93       	push	r29
     5bc:	ec 01       	movw	r28, r24

	if (!(PINB &(1<<PINB6))){
     5be:	1e 99       	sbic	0x03, 6	; 3
     5c0:	15 c0       	rjmp	.+42     	; 0x5ec <pinBdoSOMETHING+0x40>
		ASYNC(self, scroll, 500);
     5c2:	0f 2e       	mov	r0, r31
     5c4:	f4 ef       	ldi	r31, 0xF4	; 244
     5c6:	cf 2e       	mov	r12, r31
     5c8:	dd 24       	eor	r13, r13
     5ca:	d3 94       	inc	r13
     5cc:	f0 2d       	mov	r31, r0
     5ce:	0f 2e       	mov	r0, r31
     5d0:	f6 ed       	ldi	r31, 0xD6	; 214
     5d2:	ef 2e       	mov	r14, r31
     5d4:	f1 e0       	ldi	r31, 0x01	; 1
     5d6:	ff 2e       	mov	r15, r31
     5d8:	f0 2d       	mov	r31, r0
     5da:	8c 01       	movw	r16, r24
     5dc:	20 e0       	ldi	r18, 0x00	; 0
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	a9 01       	movw	r20, r18
     5e2:	60 e0       	ldi	r22, 0x00	; 0
     5e4:	70 e0       	ldi	r23, 0x00	; 0
     5e6:	cb 01       	movw	r24, r22
     5e8:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>
	}
	if (!(PINB &(1<<PINB7))){
     5ec:	1f 99       	sbic	0x03, 7	; 3
     5ee:	15 c0       	rjmp	.+42     	; 0x61a <pinBdoSOMETHING+0x6e>
		ASYNC(self, scroll, 500);
     5f0:	0f 2e       	mov	r0, r31
     5f2:	f4 ef       	ldi	r31, 0xF4	; 244
     5f4:	cf 2e       	mov	r12, r31
     5f6:	dd 24       	eor	r13, r13
     5f8:	d3 94       	inc	r13
     5fa:	f0 2d       	mov	r31, r0
     5fc:	0f 2e       	mov	r0, r31
     5fe:	f6 ed       	ldi	r31, 0xD6	; 214
     600:	ef 2e       	mov	r14, r31
     602:	f1 e0       	ldi	r31, 0x01	; 1
     604:	ff 2e       	mov	r15, r31
     606:	f0 2d       	mov	r31, r0
     608:	8e 01       	movw	r16, r28
     60a:	20 e0       	ldi	r18, 0x00	; 0
     60c:	30 e0       	ldi	r19, 0x00	; 0
     60e:	a9 01       	movw	r20, r18
     610:	60 e0       	ldi	r22, 0x00	; 0
     612:	70 e0       	ldi	r23, 0x00	; 0
     614:	cb 01       	movw	r24, r22
     616:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>
	}
	if (!(PINB &(1<<PINB4))){
     61a:	1c 99       	sbic	0x03, 4	; 3
     61c:	12 c0       	rjmp	.+36     	; 0x642 <pinBdoSOMETHING+0x96>
		ASYNC(self->current, memoryFreq, 0);
     61e:	08 85       	ldd	r16, Y+8	; 0x08
     620:	19 85       	ldd	r17, Y+9	; 0x09
     622:	c1 2c       	mov	r12, r1
     624:	d1 2c       	mov	r13, r1
     626:	0f 2e       	mov	r0, r31
     628:	f3 ee       	ldi	r31, 0xE3	; 227
     62a:	ef 2e       	mov	r14, r31
     62c:	f3 e0       	ldi	r31, 0x03	; 3
     62e:	ff 2e       	mov	r15, r31
     630:	f0 2d       	mov	r31, r0
     632:	20 e0       	ldi	r18, 0x00	; 0
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	a9 01       	movw	r20, r18
     638:	60 e0       	ldi	r22, 0x00	; 0
     63a:	70 e0       	ldi	r23, 0x00	; 0
     63c:	cb 01       	movw	r24, r22
     63e:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>
	}
	ASYNC(self,updateLCD,0);
     642:	c1 2c       	mov	r12, r1
     644:	d1 2c       	mov	r13, r1
     646:	0f 2e       	mov	r0, r31
     648:	f8 eb       	ldi	r31, 0xB8	; 184
     64a:	ef 2e       	mov	r14, r31
     64c:	f2 e0       	ldi	r31, 0x02	; 2
     64e:	ff 2e       	mov	r15, r31
     650:	f0 2d       	mov	r31, r0
     652:	8e 01       	movw	r16, r28
     654:	20 e0       	ldi	r18, 0x00	; 0
     656:	30 e0       	ldi	r19, 0x00	; 0
     658:	a9 01       	movw	r20, r18
     65a:	60 e0       	ldi	r22, 0x00	; 0
     65c:	70 e0       	ldi	r23, 0x00	; 0
     65e:	cb 01       	movw	r24, r22
     660:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>
	
}
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	1f 91       	pop	r17
     66a:	0f 91       	pop	r16
     66c:	ff 90       	pop	r15
     66e:	ef 90       	pop	r14
     670:	df 90       	pop	r13
     672:	cf 90       	pop	r12
     674:	08 95       	ret

00000676 <pinEdoSOMETHING>:
	}*/
	AFTER(MSEC(500/self->current->freq), self, freqDisplay, 0);
}


void pinEdoSOMETHING(Joystick *self, int arg){
     676:	cf 92       	push	r12
     678:	df 92       	push	r13
     67a:	ef 92       	push	r14
     67c:	ff 92       	push	r15
     67e:	0f 93       	push	r16
     680:	1f 93       	push	r17
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	ec 01       	movw	r28, r24
	if (!(PINE &(1<<PINE2))){
     688:	62 99       	sbic	0x0c, 2	; 12
     68a:	21 c0       	rjmp	.+66     	; 0x6ce <pinEdoSOMETHING+0x58>
		LCDDR13 = 0xF;
     68c:	8f e0       	ldi	r24, 0x0F	; 15
     68e:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7e00f9>
		self->current = self->Pulse1;
     692:	ec 81       	ldd	r30, Y+4	; 0x04
     694:	fd 81       	ldd	r31, Y+5	; 0x05
     696:	f9 87       	std	Y+9, r31	; 0x09
     698:	e8 87       	std	Y+8, r30	; 0x08
			if (self->Pulse1->freqDisplayFlag == 0){
     69a:	84 85       	ldd	r24, Z+12	; 0x0c
     69c:	95 85       	ldd	r25, Z+13	; 0x0d
     69e:	89 2b       	or	r24, r25
     6a0:	b1 f4       	brne	.+44     	; 0x6ce <pinEdoSOMETHING+0x58>
				self->Pulse1->freqDisplayFlag = 1;
     6a2:	81 e0       	ldi	r24, 0x01	; 1
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	95 87       	std	Z+13, r25	; 0x0d
     6a8:	84 87       	std	Z+12, r24	; 0x0c
				ASYNC(self->Pulse1, freqDisplay, 0);
     6aa:	0c 81       	ldd	r16, Y+4	; 0x04
     6ac:	1d 81       	ldd	r17, Y+5	; 0x05
     6ae:	c1 2c       	mov	r12, r1
     6b0:	d1 2c       	mov	r13, r1
     6b2:	0f 2e       	mov	r0, r31
     6b4:	f4 e7       	ldi	r31, 0x74	; 116
     6b6:	ef 2e       	mov	r14, r31
     6b8:	f2 e0       	ldi	r31, 0x02	; 2
     6ba:	ff 2e       	mov	r15, r31
     6bc:	f0 2d       	mov	r31, r0
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	a9 01       	movw	r20, r18
     6c4:	60 e0       	ldi	r22, 0x00	; 0
     6c6:	70 e0       	ldi	r23, 0x00	; 0
     6c8:	cb 01       	movw	r24, r22
     6ca:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>
			}
		//switchToRight
	}
	if (!(PINE &(1<<PINE3))){
     6ce:	63 99       	sbic	0x0c, 3	; 12
     6d0:	20 c0       	rjmp	.+64     	; 0x712 <pinEdoSOMETHING+0x9c>
		LCDDR13 = 0;
     6d2:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7e00f9>
		self->current = self->Pulse2;
     6d6:	ee 81       	ldd	r30, Y+6	; 0x06
     6d8:	ff 81       	ldd	r31, Y+7	; 0x07
     6da:	f9 87       	std	Y+9, r31	; 0x09
     6dc:	e8 87       	std	Y+8, r30	; 0x08
			if (self->Pulse2->freqDisplayFlag == 0){
     6de:	84 85       	ldd	r24, Z+12	; 0x0c
     6e0:	95 85       	ldd	r25, Z+13	; 0x0d
     6e2:	89 2b       	or	r24, r25
     6e4:	b1 f4       	brne	.+44     	; 0x712 <pinEdoSOMETHING+0x9c>
				self->Pulse2->freqDisplayFlag = 1;
     6e6:	81 e0       	ldi	r24, 0x01	; 1
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	95 87       	std	Z+13, r25	; 0x0d
     6ec:	84 87       	std	Z+12, r24	; 0x0c
				ASYNC(self->Pulse2, freqDisplay, 0);
     6ee:	0e 81       	ldd	r16, Y+6	; 0x06
     6f0:	1f 81       	ldd	r17, Y+7	; 0x07
     6f2:	c1 2c       	mov	r12, r1
     6f4:	d1 2c       	mov	r13, r1
     6f6:	0f 2e       	mov	r0, r31
     6f8:	f4 e7       	ldi	r31, 0x74	; 116
     6fa:	ef 2e       	mov	r14, r31
     6fc:	f2 e0       	ldi	r31, 0x02	; 2
     6fe:	ff 2e       	mov	r15, r31
     700:	f0 2d       	mov	r31, r0
     702:	20 e0       	ldi	r18, 0x00	; 0
     704:	30 e0       	ldi	r19, 0x00	; 0
     706:	a9 01       	movw	r20, r18
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	cb 01       	movw	r24, r22
     70e:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>
			}
		//switchToLeft
	}
	
     712:	df 91       	pop	r29
     714:	cf 91       	pop	r28
     716:	1f 91       	pop	r17
     718:	0f 91       	pop	r16
     71a:	ff 90       	pop	r15
     71c:	ef 90       	pop	r14
     71e:	df 90       	pop	r13
     720:	cf 90       	pop	r12
     722:	08 95       	ret

00000724 <start>:
Pulse pulse2 = initPulse(0,4,0,0,0,&gui);

Joystick joy = initJoystick(&pulse1, &pulse2, &pulse1);


void start(Joystick *self, int arg){
     724:	cf 92       	push	r12
     726:	df 92       	push	r13
     728:	ef 92       	push	r14
     72a:	ff 92       	push	r15
     72c:	0f 93       	push	r16
     72e:	1f 93       	push	r17
	ASYNC(self ,updateLCD, 0);
     730:	c1 2c       	mov	r12, r1
     732:	d1 2c       	mov	r13, r1
     734:	0f 2e       	mov	r0, r31
     736:	f8 eb       	ldi	r31, 0xB8	; 184
     738:	ef 2e       	mov	r14, r31
     73a:	f2 e0       	ldi	r31, 0x02	; 2
     73c:	ff 2e       	mov	r15, r31
     73e:	f0 2d       	mov	r31, r0
     740:	8c 01       	movw	r16, r24
     742:	20 e0       	ldi	r18, 0x00	; 0
     744:	30 e0       	ldi	r19, 0x00	; 0
     746:	a9 01       	movw	r20, r18
     748:	60 e0       	ldi	r22, 0x00	; 0
     74a:	70 e0       	ldi	r23, 0x00	; 0
     74c:	cb 01       	movw	r24, r22
     74e:	0e 94 fc 0d 	call	0x1bf8	; 0x1bf8 <async>
}
     752:	1f 91       	pop	r17
     754:	0f 91       	pop	r16
     756:	ff 90       	pop	r15
     758:	ef 90       	pop	r14
     75a:	df 90       	pop	r13
     75c:	cf 90       	pop	r12
     75e:	08 95       	ret

00000760 <main>:

int main(void)
{
	sei();
     760:	78 94       	sei
	LCD_Init();
     762:	0e 94 ba 01 	call	0x374	; 0x374 <LCD_Init>
	LCDDR13 = 0xF;
     766:	8f e0       	ldi	r24, 0x0F	; 15
     768:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7e00f9>
	INSTALL(&joy, pinEdoSOMETHING ,IRQ_PCINT0);
     76c:	41 e0       	ldi	r20, 0x01	; 1
     76e:	6b e3       	ldi	r22, 0x3B	; 59
     770:	73 e0       	ldi	r23, 0x03	; 3
     772:	80 e0       	ldi	r24, 0x00	; 0
     774:	91 e0       	ldi	r25, 0x01	; 1
     776:	0e 94 1c 10 	call	0x2038	; 0x2038 <install>
	INSTALL(&joy, pinBdoSOMETHING ,IRQ_PCINT1);
     77a:	42 e0       	ldi	r20, 0x02	; 2
     77c:	66 ed       	ldi	r22, 0xD6	; 214
     77e:	72 e0       	ldi	r23, 0x02	; 2
     780:	80 e0       	ldi	r24, 0x00	; 0
     782:	91 e0       	ldi	r25, 0x01	; 1
     784:	0e 94 1c 10 	call	0x2038	; 0x2038 <install>
	return TINYTIMBER(&joy,start,0);
     788:	40 e0       	ldi	r20, 0x00	; 0
     78a:	50 e0       	ldi	r21, 0x00	; 0
     78c:	62 e9       	ldi	r22, 0x92	; 146
     78e:	73 e0       	ldi	r23, 0x03	; 3
     790:	80 e0       	ldi	r24, 0x00	; 0
     792:	91 e0       	ldi	r25, 0x01	; 1
     794:	0e 94 36 10 	call	0x206c	; 0x206c <tinytimber>
   
   /* TINYTIMBER( T *obj, int (*meth)(T*,A), A arg ); */

}
     798:	08 95       	ret

0000079a <increaseFreq>:
#include "TinyTimber.h"
#include "joystick.h"
#include <avr/io.h>

void increaseFreq(Pulse *self, int arg){
	if (self->freq <= 98){
     79a:	fc 01       	movw	r30, r24
     79c:	24 81       	ldd	r18, Z+4	; 0x04
     79e:	35 81       	ldd	r19, Z+5	; 0x05
     7a0:	23 36       	cpi	r18, 0x63	; 99
     7a2:	31 05       	cpc	r19, r1
     7a4:	24 f4       	brge	.+8      	; 0x7ae <increaseFreq+0x14>
		self->freq = self->freq+1;
     7a6:	2f 5f       	subi	r18, 0xFF	; 255
     7a8:	3f 4f       	sbci	r19, 0xFF	; 255
     7aa:	35 83       	std	Z+5, r19	; 0x05
     7ac:	24 83       	std	Z+4, r18	; 0x04
     7ae:	08 95       	ret

000007b0 <decreaseFreq>:
	}
}

void decreaseFreq(Pulse *self, int arg){
	if (self->freq >= 1){
     7b0:	fc 01       	movw	r30, r24
     7b2:	24 81       	ldd	r18, Z+4	; 0x04
     7b4:	35 81       	ldd	r19, Z+5	; 0x05
     7b6:	12 16       	cp	r1, r18
     7b8:	13 06       	cpc	r1, r19
     7ba:	24 f4       	brge	.+8      	; 0x7c4 <decreaseFreq+0x14>
		self->freq = self->freq-1;
     7bc:	21 50       	subi	r18, 0x01	; 1
     7be:	31 09       	sbc	r19, r1
     7c0:	35 83       	std	Z+5, r19	; 0x05
     7c2:	24 83       	std	Z+4, r18	; 0x04
     7c4:	08 95       	ret

000007c6 <memoryFreq>:
	}
}

void memoryFreq(Pulse *self, int arg){
     7c6:	fc 01       	movw	r30, r24
	
	if (self->memFlag == 0){
     7c8:	82 85       	ldd	r24, Z+10	; 0x0a
     7ca:	93 85       	ldd	r25, Z+11	; 0x0b
     7cc:	89 2b       	or	r24, r25
     7ce:	59 f4       	brne	.+22     	; 0x7e6 <memoryFreq+0x20>
		self->memory = self->freq;
     7d0:	84 81       	ldd	r24, Z+4	; 0x04
     7d2:	95 81       	ldd	r25, Z+5	; 0x05
     7d4:	91 87       	std	Z+9, r25	; 0x09
     7d6:	80 87       	std	Z+8, r24	; 0x08
		self->freq = 0;
     7d8:	15 82       	std	Z+5, r1	; 0x05
     7da:	14 82       	std	Z+4, r1	; 0x04
		self->memFlag = 1;
     7dc:	81 e0       	ldi	r24, 0x01	; 1
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	93 87       	std	Z+11, r25	; 0x0b
     7e2:	82 87       	std	Z+10, r24	; 0x0a
     7e4:	08 95       	ret
	}else{
		self->freq = self->memory;
     7e6:	80 85       	ldd	r24, Z+8	; 0x08
     7e8:	91 85       	ldd	r25, Z+9	; 0x09
     7ea:	95 83       	std	Z+5, r25	; 0x05
     7ec:	84 83       	std	Z+4, r24	; 0x04
		self->memFlag = 0;
     7ee:	13 86       	std	Z+11, r1	; 0x0b
     7f0:	12 86       	std	Z+10, r1	; 0x0a
     7f2:	08 95       	ret

000007f4 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     7f4:	cf 93       	push	r28
     7f6:	df 93       	push	r29
     7f8:	00 d0       	rcall	.+0      	; 0x7fa <initialize+0x6>
     7fa:	00 d0       	rcall	.+0      	; 0x7fc <initialize+0x8>
     7fc:	cd b7       	in	r28, 0x3d	; 61
     7fe:	de b7       	in	r29, 0x3e	; 62
     800:	8d e2       	ldi	r24, 0x2D	; 45
     802:	92 e0       	ldi	r25, 0x02	; 2
     804:	2d e0       	ldi	r18, 0x0D	; 13
     806:	33 e0       	ldi	r19, 0x03	; 3
     808:	fc 01       	movw	r30, r24
     80a:	70 97       	sbiw	r30, 0x10	; 16
     80c:	91 83       	std	Z+1, r25	; 0x01
     80e:	80 83       	st	Z, r24
     810:	40 96       	adiw	r24, 0x10	; 16
     812:	82 17       	cp	r24, r18
     814:	93 07       	cpc	r25, r19
     816:	c1 f7       	brne	.-16     	; 0x808 <initialize+0x14>
     818:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <messages+0xe1>
     81c:	10 92 fd 02 	sts	0x02FD, r1	; 0x8002fd <messages+0xe0>
     820:	e8 e6       	ldi	r30, 0x68	; 104
     822:	f1 e0       	ldi	r31, 0x01	; 1
     824:	85 e8       	ldi	r24, 0x85	; 133
     826:	91 e0       	ldi	r25, 0x01	; 1
     828:	91 83       	std	Z+1, r25	; 0x01
     82a:	80 83       	st	Z, r24
     82c:	82 ea       	ldi	r24, 0xA2	; 162
     82e:	91 e0       	ldi	r25, 0x01	; 1
     830:	96 8f       	std	Z+30, r25	; 0x1e
     832:	85 8f       	std	Z+29, r24	; 0x1d
     834:	af eb       	ldi	r26, 0xBF	; 191
     836:	b1 e0       	ldi	r27, 0x01	; 1
     838:	b3 af       	std	Z+59, r27	; 0x3b
     83a:	a2 af       	std	Z+58, r26	; 0x3a
     83c:	1d 92       	st	X+, r1
     83e:	1c 92       	st	X, r1
     840:	fa 83       	std	Y+2, r31	; 0x02
     842:	e9 83       	std	Y+1, r30	; 0x01
     844:	e9 e6       	ldi	r30, 0x69	; 105
     846:	f3 e0       	ldi	r31, 0x03	; 3
     848:	fc 83       	std	Y+4, r31	; 0x04
     84a:	eb 83       	std	Y+3, r30	; 0x03
     84c:	89 81       	ldd	r24, Y+1	; 0x01
     84e:	9a 81       	ldd	r25, Y+2	; 0x02
     850:	06 96       	adiw	r24, 0x06	; 6
     852:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <setjmp>
     856:	8b 81       	ldd	r24, Y+3	; 0x03
     858:	9c 81       	ldd	r25, Y+4	; 0x04
     85a:	e9 81       	ldd	r30, Y+1	; 0x01
     85c:	fa 81       	ldd	r31, Y+2	; 0x02
     85e:	97 8b       	std	Z+23, r25	; 0x17
     860:	86 8b       	std	Z+22, r24	; 0x16
     862:	91 8f       	std	Z+25, r25	; 0x19
     864:	80 8f       	std	Z+24, r24	; 0x18
     866:	8e ea       	ldi	r24, 0xAE	; 174
     868:	9f e0       	ldi	r25, 0x0F	; 15
     86a:	94 8f       	std	Z+28, r25	; 0x1c
     86c:	83 8f       	std	Z+27, r24	; 0x1b
     86e:	15 82       	std	Z+5, r1	; 0x05
     870:	14 82       	std	Z+4, r1	; 0x04
     872:	7d 96       	adiw	r30, 0x1d	; 29
     874:	fa 83       	std	Y+2, r31	; 0x02
     876:	e9 83       	std	Y+1, r30	; 0x01
     878:	eb 81       	ldd	r30, Y+3	; 0x03
     87a:	fc 81       	ldd	r31, Y+4	; 0x04
     87c:	e0 5a       	subi	r30, 0xA0	; 160
     87e:	ff 4f       	sbci	r31, 0xFF	; 255
     880:	fc 83       	std	Y+4, r31	; 0x04
     882:	eb 83       	std	Y+3, r30	; 0x03
     884:	89 81       	ldd	r24, Y+1	; 0x01
     886:	9a 81       	ldd	r25, Y+2	; 0x02
     888:	8c 5d       	subi	r24, 0xDC	; 220
     88a:	91 40       	sbci	r25, 0x01	; 1
     88c:	f9 f6       	brne	.-66     	; 0x84c <initialize+0x58>
     88e:	e0 e0       	ldi	r30, 0x00	; 0
     890:	f2 e0       	ldi	r31, 0x02	; 2
     892:	11 82       	std	Z+1, r1	; 0x01
     894:	10 82       	st	Z, r1
     896:	15 82       	std	Z+5, r1	; 0x05
     898:	14 82       	std	Z+4, r1	; 0x04
     89a:	13 82       	std	Z+3, r1	; 0x03
     89c:	12 82       	std	Z+2, r1	; 0x02
     89e:	e1 e6       	ldi	r30, 0x61	; 97
     8a0:	f0 e0       	ldi	r31, 0x00	; 0
     8a2:	80 e8       	ldi	r24, 0x80	; 128
     8a4:	80 83       	st	Z, r24
     8a6:	10 82       	st	Z, r1
     8a8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     8ac:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     8b0:	84 e0       	ldi	r24, 0x04	; 4
     8b2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     8b6:	81 e0       	ldi	r24, 0x01	; 1
     8b8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     8bc:	0f 90       	pop	r0
     8be:	0f 90       	pop	r0
     8c0:	0f 90       	pop	r0
     8c2:	0f 90       	pop	r0
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	08 95       	ret

000008ca <dispatch>:
     8ca:	cf 93       	push	r28
     8cc:	df 93       	push	r29
     8ce:	00 d0       	rcall	.+0      	; 0x8d0 <dispatch+0x6>
     8d0:	cd b7       	in	r28, 0x3d	; 61
     8d2:	de b7       	in	r29, 0x3e	; 62
     8d4:	9a 83       	std	Y+2, r25	; 0x02
     8d6:	89 83       	std	Y+1, r24	; 0x01
     8d8:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <current>
     8dc:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <current+0x1>
     8e0:	06 96       	adiw	r24, 0x06	; 6
     8e2:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <setjmp>
     8e6:	89 2b       	or	r24, r25
     8e8:	59 f4       	brne	.+22     	; 0x900 <dispatch+0x36>
     8ea:	89 81       	ldd	r24, Y+1	; 0x01
     8ec:	9a 81       	ldd	r25, Y+2	; 0x02
     8ee:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <current+0x1>
     8f2:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <current>
     8f6:	61 e0       	ldi	r22, 0x01	; 1
     8f8:	70 e0       	ldi	r23, 0x00	; 0
     8fa:	06 96       	adiw	r24, 0x06	; 6
     8fc:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <longjmp>
     900:	0f 90       	pop	r0
     902:	0f 90       	pop	r0
     904:	df 91       	pop	r29
     906:	cf 91       	pop	r28
     908:	08 95       	ret

0000090a <schedule>:
     90a:	0f 93       	push	r16
     90c:	1f 93       	push	r17
     90e:	cf 93       	push	r28
     910:	df 93       	push	r29
     912:	c0 91 2c 01 	lds	r28, 0x012C	; 0x80012c <activeStack>
     916:	d0 91 2d 01 	lds	r29, 0x012D	; 0x80012d <activeStack+0x1>
     91a:	aa 81       	ldd	r26, Y+2	; 0x02
     91c:	bb 81       	ldd	r27, Y+3	; 0x03
     91e:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <msgQ>
     922:	f0 91 43 01 	lds	r31, 0x0143	; 0x800143 <msgQ+0x1>
     926:	30 97       	sbiw	r30, 0x00	; 0
     928:	31 f1       	breq	.+76     	; 0x976 <schedule+0x6c>
     92a:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <threadPool>
     92e:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <threadPool+0x1>
     932:	00 97       	sbiw	r24, 0x00	; 0
     934:	01 f1       	breq	.+64     	; 0x976 <schedule+0x6c>
     936:	10 97       	sbiw	r26, 0x00	; 0
     938:	79 f0       	breq	.+30     	; 0x958 <schedule+0x4e>
     93a:	46 81       	ldd	r20, Z+6	; 0x06
     93c:	57 81       	ldd	r21, Z+7	; 0x07
     93e:	60 85       	ldd	r22, Z+8	; 0x08
     940:	71 85       	ldd	r23, Z+9	; 0x09
     942:	16 96       	adiw	r26, 0x06	; 6
     944:	0d 91       	ld	r16, X+
     946:	1d 91       	ld	r17, X+
     948:	2d 91       	ld	r18, X+
     94a:	3c 91       	ld	r19, X
     94c:	19 97       	sbiw	r26, 0x09	; 9
     94e:	40 1b       	sub	r20, r16
     950:	51 0b       	sbc	r21, r17
     952:	62 0b       	sbc	r22, r18
     954:	73 0b       	sbc	r23, r19
     956:	7a f4       	brpl	.+30     	; 0x976 <schedule+0x6c>
     958:	fc 01       	movw	r30, r24
     95a:	20 81       	ld	r18, Z
     95c:	31 81       	ldd	r19, Z+1	; 0x01
     95e:	30 93 2f 01 	sts	0x012F, r19	; 0x80012f <threadPool+0x1>
     962:	20 93 2e 01 	sts	0x012E, r18	; 0x80012e <threadPool>
     966:	d1 83       	std	Z+1, r29	; 0x01
     968:	c0 83       	st	Z, r28
     96a:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <activeStack+0x1>
     96e:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <activeStack>
     972:	0e 94 65 04 	call	0x8ca	; 0x8ca <dispatch>
     976:	df 91       	pop	r29
     978:	cf 91       	pop	r28
     97a:	1f 91       	pop	r17
     97c:	0f 91       	pop	r16
     97e:	08 95       	ret

00000980 <__vector_1>:
     980:	1f 92       	push	r1
     982:	0f 92       	push	r0
     984:	0f b6       	in	r0, 0x3f	; 63
     986:	0f 92       	push	r0
     988:	11 24       	eor	r1, r1
     98a:	2f 93       	push	r18
     98c:	3f 93       	push	r19
     98e:	4f 93       	push	r20
     990:	5f 93       	push	r21
     992:	6f 93       	push	r22
     994:	7f 93       	push	r23
     996:	8f 93       	push	r24
     998:	9f 93       	push	r25
     99a:	af 93       	push	r26
     99c:	bf 93       	push	r27
     99e:	ef 93       	push	r30
     9a0:	ff 93       	push	r31
     9a2:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
     9a6:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
     9aa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     9ae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     9b2:	c9 01       	movw	r24, r18
     9b4:	03 2e       	mov	r0, r19
     9b6:	00 0c       	add	r0, r0
     9b8:	aa 0b       	sbc	r26, r26
     9ba:	bb 0b       	sbc	r27, r27
     9bc:	dc 01       	movw	r26, r24
     9be:	99 27       	eor	r25, r25
     9c0:	88 27       	eor	r24, r24
     9c2:	60 e0       	ldi	r22, 0x00	; 0
     9c4:	70 e0       	ldi	r23, 0x00	; 0
     9c6:	84 2b       	or	r24, r20
     9c8:	95 2b       	or	r25, r21
     9ca:	a6 2b       	or	r26, r22
     9cc:	b7 2b       	or	r27, r23
     9ce:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     9d2:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     9d6:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     9da:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     9de:	b0 9b       	sbis	0x16, 0	; 22
     9e0:	1b c0       	rjmp	.+54     	; 0xa18 <__vector_1+0x98>
     9e2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     9e6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     9ea:	c9 01       	movw	r24, r18
     9ec:	01 96       	adiw	r24, 0x01	; 1
     9ee:	09 2e       	mov	r0, r25
     9f0:	00 0c       	add	r0, r0
     9f2:	aa 0b       	sbc	r26, r26
     9f4:	bb 0b       	sbc	r27, r27
     9f6:	dc 01       	movw	r26, r24
     9f8:	99 27       	eor	r25, r25
     9fa:	88 27       	eor	r24, r24
     9fc:	60 e0       	ldi	r22, 0x00	; 0
     9fe:	70 e0       	ldi	r23, 0x00	; 0
     a00:	84 2b       	or	r24, r20
     a02:	95 2b       	or	r25, r21
     a04:	a6 2b       	or	r26, r22
     a06:	b7 2b       	or	r27, r23
     a08:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     a0c:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     a10:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     a14:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     a18:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable>
     a1c:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x1>
     a20:	30 97       	sbiw	r30, 0x00	; 0
     a22:	39 f0       	breq	.+14     	; 0xa32 <__vector_1+0xb2>
     a24:	60 e0       	ldi	r22, 0x00	; 0
     a26:	70 e0       	ldi	r23, 0x00	; 0
     a28:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable>
     a2c:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x1>
     a30:	09 95       	icall
     a32:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
     a36:	ff 91       	pop	r31
     a38:	ef 91       	pop	r30
     a3a:	bf 91       	pop	r27
     a3c:	af 91       	pop	r26
     a3e:	9f 91       	pop	r25
     a40:	8f 91       	pop	r24
     a42:	7f 91       	pop	r23
     a44:	6f 91       	pop	r22
     a46:	5f 91       	pop	r21
     a48:	4f 91       	pop	r20
     a4a:	3f 91       	pop	r19
     a4c:	2f 91       	pop	r18
     a4e:	0f 90       	pop	r0
     a50:	0f be       	out	0x3f, r0	; 63
     a52:	0f 90       	pop	r0
     a54:	1f 90       	pop	r1
     a56:	18 95       	reti

00000a58 <__vector_2>:
     a58:	1f 92       	push	r1
     a5a:	0f 92       	push	r0
     a5c:	0f b6       	in	r0, 0x3f	; 63
     a5e:	0f 92       	push	r0
     a60:	11 24       	eor	r1, r1
     a62:	2f 93       	push	r18
     a64:	3f 93       	push	r19
     a66:	4f 93       	push	r20
     a68:	5f 93       	push	r21
     a6a:	6f 93       	push	r22
     a6c:	7f 93       	push	r23
     a6e:	8f 93       	push	r24
     a70:	9f 93       	push	r25
     a72:	af 93       	push	r26
     a74:	bf 93       	push	r27
     a76:	ef 93       	push	r30
     a78:	ff 93       	push	r31
     a7a:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
     a7e:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
     a82:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     a86:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     a8a:	c9 01       	movw	r24, r18
     a8c:	03 2e       	mov	r0, r19
     a8e:	00 0c       	add	r0, r0
     a90:	aa 0b       	sbc	r26, r26
     a92:	bb 0b       	sbc	r27, r27
     a94:	dc 01       	movw	r26, r24
     a96:	99 27       	eor	r25, r25
     a98:	88 27       	eor	r24, r24
     a9a:	60 e0       	ldi	r22, 0x00	; 0
     a9c:	70 e0       	ldi	r23, 0x00	; 0
     a9e:	84 2b       	or	r24, r20
     aa0:	95 2b       	or	r25, r21
     aa2:	a6 2b       	or	r26, r22
     aa4:	b7 2b       	or	r27, r23
     aa6:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     aaa:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     aae:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     ab2:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     ab6:	b0 9b       	sbis	0x16, 0	; 22
     ab8:	1b c0       	rjmp	.+54     	; 0xaf0 <__vector_2+0x98>
     aba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     abe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     ac2:	c9 01       	movw	r24, r18
     ac4:	01 96       	adiw	r24, 0x01	; 1
     ac6:	09 2e       	mov	r0, r25
     ac8:	00 0c       	add	r0, r0
     aca:	aa 0b       	sbc	r26, r26
     acc:	bb 0b       	sbc	r27, r27
     ace:	dc 01       	movw	r26, r24
     ad0:	99 27       	eor	r25, r25
     ad2:	88 27       	eor	r24, r24
     ad4:	60 e0       	ldi	r22, 0x00	; 0
     ad6:	70 e0       	ldi	r23, 0x00	; 0
     ad8:	84 2b       	or	r24, r20
     ada:	95 2b       	or	r25, r21
     adc:	a6 2b       	or	r26, r22
     ade:	b7 2b       	or	r27, r23
     ae0:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     ae4:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     ae8:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     aec:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     af0:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x2>
     af4:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x3>
     af8:	30 97       	sbiw	r30, 0x00	; 0
     afa:	39 f0       	breq	.+14     	; 0xb0a <__vector_2+0xb2>
     afc:	61 e0       	ldi	r22, 0x01	; 1
     afe:	70 e0       	ldi	r23, 0x00	; 0
     b00:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x2>
     b04:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x3>
     b08:	09 95       	icall
     b0a:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
     b0e:	ff 91       	pop	r31
     b10:	ef 91       	pop	r30
     b12:	bf 91       	pop	r27
     b14:	af 91       	pop	r26
     b16:	9f 91       	pop	r25
     b18:	8f 91       	pop	r24
     b1a:	7f 91       	pop	r23
     b1c:	6f 91       	pop	r22
     b1e:	5f 91       	pop	r21
     b20:	4f 91       	pop	r20
     b22:	3f 91       	pop	r19
     b24:	2f 91       	pop	r18
     b26:	0f 90       	pop	r0
     b28:	0f be       	out	0x3f, r0	; 63
     b2a:	0f 90       	pop	r0
     b2c:	1f 90       	pop	r1
     b2e:	18 95       	reti

00000b30 <__vector_3>:
     b30:	1f 92       	push	r1
     b32:	0f 92       	push	r0
     b34:	0f b6       	in	r0, 0x3f	; 63
     b36:	0f 92       	push	r0
     b38:	11 24       	eor	r1, r1
     b3a:	2f 93       	push	r18
     b3c:	3f 93       	push	r19
     b3e:	4f 93       	push	r20
     b40:	5f 93       	push	r21
     b42:	6f 93       	push	r22
     b44:	7f 93       	push	r23
     b46:	8f 93       	push	r24
     b48:	9f 93       	push	r25
     b4a:	af 93       	push	r26
     b4c:	bf 93       	push	r27
     b4e:	ef 93       	push	r30
     b50:	ff 93       	push	r31
     b52:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
     b56:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
     b5a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     b5e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     b62:	c9 01       	movw	r24, r18
     b64:	03 2e       	mov	r0, r19
     b66:	00 0c       	add	r0, r0
     b68:	aa 0b       	sbc	r26, r26
     b6a:	bb 0b       	sbc	r27, r27
     b6c:	dc 01       	movw	r26, r24
     b6e:	99 27       	eor	r25, r25
     b70:	88 27       	eor	r24, r24
     b72:	60 e0       	ldi	r22, 0x00	; 0
     b74:	70 e0       	ldi	r23, 0x00	; 0
     b76:	84 2b       	or	r24, r20
     b78:	95 2b       	or	r25, r21
     b7a:	a6 2b       	or	r26, r22
     b7c:	b7 2b       	or	r27, r23
     b7e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     b82:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     b86:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     b8a:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     b8e:	b0 9b       	sbis	0x16, 0	; 22
     b90:	1b c0       	rjmp	.+54     	; 0xbc8 <__vector_3+0x98>
     b92:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     b96:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     b9a:	c9 01       	movw	r24, r18
     b9c:	01 96       	adiw	r24, 0x01	; 1
     b9e:	09 2e       	mov	r0, r25
     ba0:	00 0c       	add	r0, r0
     ba2:	aa 0b       	sbc	r26, r26
     ba4:	bb 0b       	sbc	r27, r27
     ba6:	dc 01       	movw	r26, r24
     ba8:	99 27       	eor	r25, r25
     baa:	88 27       	eor	r24, r24
     bac:	60 e0       	ldi	r22, 0x00	; 0
     bae:	70 e0       	ldi	r23, 0x00	; 0
     bb0:	84 2b       	or	r24, r20
     bb2:	95 2b       	or	r25, r21
     bb4:	a6 2b       	or	r26, r22
     bb6:	b7 2b       	or	r27, r23
     bb8:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     bbc:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     bc0:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     bc4:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     bc8:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x4>
     bcc:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x5>
     bd0:	30 97       	sbiw	r30, 0x00	; 0
     bd2:	39 f0       	breq	.+14     	; 0xbe2 <__vector_3+0xb2>
     bd4:	62 e0       	ldi	r22, 0x02	; 2
     bd6:	70 e0       	ldi	r23, 0x00	; 0
     bd8:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x4>
     bdc:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x5>
     be0:	09 95       	icall
     be2:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
     be6:	ff 91       	pop	r31
     be8:	ef 91       	pop	r30
     bea:	bf 91       	pop	r27
     bec:	af 91       	pop	r26
     bee:	9f 91       	pop	r25
     bf0:	8f 91       	pop	r24
     bf2:	7f 91       	pop	r23
     bf4:	6f 91       	pop	r22
     bf6:	5f 91       	pop	r21
     bf8:	4f 91       	pop	r20
     bfa:	3f 91       	pop	r19
     bfc:	2f 91       	pop	r18
     bfe:	0f 90       	pop	r0
     c00:	0f be       	out	0x3f, r0	; 63
     c02:	0f 90       	pop	r0
     c04:	1f 90       	pop	r1
     c06:	18 95       	reti

00000c08 <__vector_4>:
     c08:	1f 92       	push	r1
     c0a:	0f 92       	push	r0
     c0c:	0f b6       	in	r0, 0x3f	; 63
     c0e:	0f 92       	push	r0
     c10:	11 24       	eor	r1, r1
     c12:	2f 93       	push	r18
     c14:	3f 93       	push	r19
     c16:	4f 93       	push	r20
     c18:	5f 93       	push	r21
     c1a:	6f 93       	push	r22
     c1c:	7f 93       	push	r23
     c1e:	8f 93       	push	r24
     c20:	9f 93       	push	r25
     c22:	af 93       	push	r26
     c24:	bf 93       	push	r27
     c26:	ef 93       	push	r30
     c28:	ff 93       	push	r31
     c2a:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
     c2e:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
     c32:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c36:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c3a:	c9 01       	movw	r24, r18
     c3c:	03 2e       	mov	r0, r19
     c3e:	00 0c       	add	r0, r0
     c40:	aa 0b       	sbc	r26, r26
     c42:	bb 0b       	sbc	r27, r27
     c44:	dc 01       	movw	r26, r24
     c46:	99 27       	eor	r25, r25
     c48:	88 27       	eor	r24, r24
     c4a:	60 e0       	ldi	r22, 0x00	; 0
     c4c:	70 e0       	ldi	r23, 0x00	; 0
     c4e:	84 2b       	or	r24, r20
     c50:	95 2b       	or	r25, r21
     c52:	a6 2b       	or	r26, r22
     c54:	b7 2b       	or	r27, r23
     c56:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     c5a:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     c5e:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     c62:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     c66:	b0 9b       	sbis	0x16, 0	; 22
     c68:	1b c0       	rjmp	.+54     	; 0xca0 <__vector_4+0x98>
     c6a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c6e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c72:	c9 01       	movw	r24, r18
     c74:	01 96       	adiw	r24, 0x01	; 1
     c76:	09 2e       	mov	r0, r25
     c78:	00 0c       	add	r0, r0
     c7a:	aa 0b       	sbc	r26, r26
     c7c:	bb 0b       	sbc	r27, r27
     c7e:	dc 01       	movw	r26, r24
     c80:	99 27       	eor	r25, r25
     c82:	88 27       	eor	r24, r24
     c84:	60 e0       	ldi	r22, 0x00	; 0
     c86:	70 e0       	ldi	r23, 0x00	; 0
     c88:	84 2b       	or	r24, r20
     c8a:	95 2b       	or	r25, r21
     c8c:	a6 2b       	or	r26, r22
     c8e:	b7 2b       	or	r27, r23
     c90:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     c94:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     c98:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     c9c:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     ca0:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x6>
     ca4:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x7>
     ca8:	30 97       	sbiw	r30, 0x00	; 0
     caa:	39 f0       	breq	.+14     	; 0xcba <__vector_4+0xb2>
     cac:	63 e0       	ldi	r22, 0x03	; 3
     cae:	70 e0       	ldi	r23, 0x00	; 0
     cb0:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x6>
     cb4:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x7>
     cb8:	09 95       	icall
     cba:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
     cbe:	ff 91       	pop	r31
     cc0:	ef 91       	pop	r30
     cc2:	bf 91       	pop	r27
     cc4:	af 91       	pop	r26
     cc6:	9f 91       	pop	r25
     cc8:	8f 91       	pop	r24
     cca:	7f 91       	pop	r23
     ccc:	6f 91       	pop	r22
     cce:	5f 91       	pop	r21
     cd0:	4f 91       	pop	r20
     cd2:	3f 91       	pop	r19
     cd4:	2f 91       	pop	r18
     cd6:	0f 90       	pop	r0
     cd8:	0f be       	out	0x3f, r0	; 63
     cda:	0f 90       	pop	r0
     cdc:	1f 90       	pop	r1
     cde:	18 95       	reti

00000ce0 <__vector_5>:
     ce0:	1f 92       	push	r1
     ce2:	0f 92       	push	r0
     ce4:	0f b6       	in	r0, 0x3f	; 63
     ce6:	0f 92       	push	r0
     ce8:	11 24       	eor	r1, r1
     cea:	2f 93       	push	r18
     cec:	3f 93       	push	r19
     cee:	4f 93       	push	r20
     cf0:	5f 93       	push	r21
     cf2:	6f 93       	push	r22
     cf4:	7f 93       	push	r23
     cf6:	8f 93       	push	r24
     cf8:	9f 93       	push	r25
     cfa:	af 93       	push	r26
     cfc:	bf 93       	push	r27
     cfe:	ef 93       	push	r30
     d00:	ff 93       	push	r31
     d02:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
     d06:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
     d0a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     d0e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     d12:	c9 01       	movw	r24, r18
     d14:	03 2e       	mov	r0, r19
     d16:	00 0c       	add	r0, r0
     d18:	aa 0b       	sbc	r26, r26
     d1a:	bb 0b       	sbc	r27, r27
     d1c:	dc 01       	movw	r26, r24
     d1e:	99 27       	eor	r25, r25
     d20:	88 27       	eor	r24, r24
     d22:	60 e0       	ldi	r22, 0x00	; 0
     d24:	70 e0       	ldi	r23, 0x00	; 0
     d26:	84 2b       	or	r24, r20
     d28:	95 2b       	or	r25, r21
     d2a:	a6 2b       	or	r26, r22
     d2c:	b7 2b       	or	r27, r23
     d2e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     d32:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     d36:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     d3a:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     d3e:	b0 9b       	sbis	0x16, 0	; 22
     d40:	1b c0       	rjmp	.+54     	; 0xd78 <__vector_5+0x98>
     d42:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     d46:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     d4a:	c9 01       	movw	r24, r18
     d4c:	01 96       	adiw	r24, 0x01	; 1
     d4e:	09 2e       	mov	r0, r25
     d50:	00 0c       	add	r0, r0
     d52:	aa 0b       	sbc	r26, r26
     d54:	bb 0b       	sbc	r27, r27
     d56:	dc 01       	movw	r26, r24
     d58:	99 27       	eor	r25, r25
     d5a:	88 27       	eor	r24, r24
     d5c:	60 e0       	ldi	r22, 0x00	; 0
     d5e:	70 e0       	ldi	r23, 0x00	; 0
     d60:	84 2b       	or	r24, r20
     d62:	95 2b       	or	r25, r21
     d64:	a6 2b       	or	r26, r22
     d66:	b7 2b       	or	r27, r23
     d68:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     d6c:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     d70:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     d74:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     d78:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0x8>
     d7c:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0x9>
     d80:	30 97       	sbiw	r30, 0x00	; 0
     d82:	39 f0       	breq	.+14     	; 0xd92 <__vector_5+0xb2>
     d84:	64 e0       	ldi	r22, 0x04	; 4
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0x8>
     d8c:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0x9>
     d90:	09 95       	icall
     d92:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
     d96:	ff 91       	pop	r31
     d98:	ef 91       	pop	r30
     d9a:	bf 91       	pop	r27
     d9c:	af 91       	pop	r26
     d9e:	9f 91       	pop	r25
     da0:	8f 91       	pop	r24
     da2:	7f 91       	pop	r23
     da4:	6f 91       	pop	r22
     da6:	5f 91       	pop	r21
     da8:	4f 91       	pop	r20
     daa:	3f 91       	pop	r19
     dac:	2f 91       	pop	r18
     dae:	0f 90       	pop	r0
     db0:	0f be       	out	0x3f, r0	; 63
     db2:	0f 90       	pop	r0
     db4:	1f 90       	pop	r1
     db6:	18 95       	reti

00000db8 <__vector_10>:
     db8:	1f 92       	push	r1
     dba:	0f 92       	push	r0
     dbc:	0f b6       	in	r0, 0x3f	; 63
     dbe:	0f 92       	push	r0
     dc0:	11 24       	eor	r1, r1
     dc2:	2f 93       	push	r18
     dc4:	3f 93       	push	r19
     dc6:	4f 93       	push	r20
     dc8:	5f 93       	push	r21
     dca:	6f 93       	push	r22
     dcc:	7f 93       	push	r23
     dce:	8f 93       	push	r24
     dd0:	9f 93       	push	r25
     dd2:	af 93       	push	r26
     dd4:	bf 93       	push	r27
     dd6:	ef 93       	push	r30
     dd8:	ff 93       	push	r31
     dda:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
     dde:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
     de2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     de6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     dea:	c9 01       	movw	r24, r18
     dec:	03 2e       	mov	r0, r19
     dee:	00 0c       	add	r0, r0
     df0:	aa 0b       	sbc	r26, r26
     df2:	bb 0b       	sbc	r27, r27
     df4:	dc 01       	movw	r26, r24
     df6:	99 27       	eor	r25, r25
     df8:	88 27       	eor	r24, r24
     dfa:	60 e0       	ldi	r22, 0x00	; 0
     dfc:	70 e0       	ldi	r23, 0x00	; 0
     dfe:	84 2b       	or	r24, r20
     e00:	95 2b       	or	r25, r21
     e02:	a6 2b       	or	r26, r22
     e04:	b7 2b       	or	r27, r23
     e06:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     e0a:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     e0e:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     e12:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     e16:	b0 9b       	sbis	0x16, 0	; 22
     e18:	1b c0       	rjmp	.+54     	; 0xe50 <__vector_10+0x98>
     e1a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e1e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e22:	c9 01       	movw	r24, r18
     e24:	01 96       	adiw	r24, 0x01	; 1
     e26:	09 2e       	mov	r0, r25
     e28:	00 0c       	add	r0, r0
     e2a:	aa 0b       	sbc	r26, r26
     e2c:	bb 0b       	sbc	r27, r27
     e2e:	dc 01       	movw	r26, r24
     e30:	99 27       	eor	r25, r25
     e32:	88 27       	eor	r24, r24
     e34:	60 e0       	ldi	r22, 0x00	; 0
     e36:	70 e0       	ldi	r23, 0x00	; 0
     e38:	84 2b       	or	r24, r20
     e3a:	95 2b       	or	r25, r21
     e3c:	a6 2b       	or	r26, r22
     e3e:	b7 2b       	or	r27, r23
     e40:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     e44:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     e48:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     e4c:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     e50:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xa>
     e54:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xb>
     e58:	30 97       	sbiw	r30, 0x00	; 0
     e5a:	39 f0       	breq	.+14     	; 0xe6a <__vector_10+0xb2>
     e5c:	65 e0       	ldi	r22, 0x05	; 5
     e5e:	70 e0       	ldi	r23, 0x00	; 0
     e60:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xa>
     e64:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xb>
     e68:	09 95       	icall
     e6a:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
     e6e:	ff 91       	pop	r31
     e70:	ef 91       	pop	r30
     e72:	bf 91       	pop	r27
     e74:	af 91       	pop	r26
     e76:	9f 91       	pop	r25
     e78:	8f 91       	pop	r24
     e7a:	7f 91       	pop	r23
     e7c:	6f 91       	pop	r22
     e7e:	5f 91       	pop	r21
     e80:	4f 91       	pop	r20
     e82:	3f 91       	pop	r19
     e84:	2f 91       	pop	r18
     e86:	0f 90       	pop	r0
     e88:	0f be       	out	0x3f, r0	; 63
     e8a:	0f 90       	pop	r0
     e8c:	1f 90       	pop	r1
     e8e:	18 95       	reti

00000e90 <__vector_11>:
     e90:	1f 92       	push	r1
     e92:	0f 92       	push	r0
     e94:	0f b6       	in	r0, 0x3f	; 63
     e96:	0f 92       	push	r0
     e98:	11 24       	eor	r1, r1
     e9a:	2f 93       	push	r18
     e9c:	3f 93       	push	r19
     e9e:	4f 93       	push	r20
     ea0:	5f 93       	push	r21
     ea2:	6f 93       	push	r22
     ea4:	7f 93       	push	r23
     ea6:	8f 93       	push	r24
     ea8:	9f 93       	push	r25
     eaa:	af 93       	push	r26
     eac:	bf 93       	push	r27
     eae:	ef 93       	push	r30
     eb0:	ff 93       	push	r31
     eb2:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
     eb6:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
     eba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     ebe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     ec2:	c9 01       	movw	r24, r18
     ec4:	03 2e       	mov	r0, r19
     ec6:	00 0c       	add	r0, r0
     ec8:	aa 0b       	sbc	r26, r26
     eca:	bb 0b       	sbc	r27, r27
     ecc:	dc 01       	movw	r26, r24
     ece:	99 27       	eor	r25, r25
     ed0:	88 27       	eor	r24, r24
     ed2:	60 e0       	ldi	r22, 0x00	; 0
     ed4:	70 e0       	ldi	r23, 0x00	; 0
     ed6:	84 2b       	or	r24, r20
     ed8:	95 2b       	or	r25, r21
     eda:	a6 2b       	or	r26, r22
     edc:	b7 2b       	or	r27, r23
     ede:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     ee2:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     ee6:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     eea:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     eee:	b0 9b       	sbis	0x16, 0	; 22
     ef0:	1b c0       	rjmp	.+54     	; 0xf28 <__vector_11+0x98>
     ef2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     ef6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     efa:	c9 01       	movw	r24, r18
     efc:	01 96       	adiw	r24, 0x01	; 1
     efe:	09 2e       	mov	r0, r25
     f00:	00 0c       	add	r0, r0
     f02:	aa 0b       	sbc	r26, r26
     f04:	bb 0b       	sbc	r27, r27
     f06:	dc 01       	movw	r26, r24
     f08:	99 27       	eor	r25, r25
     f0a:	88 27       	eor	r24, r24
     f0c:	60 e0       	ldi	r22, 0x00	; 0
     f0e:	70 e0       	ldi	r23, 0x00	; 0
     f10:	84 2b       	or	r24, r20
     f12:	95 2b       	or	r25, r21
     f14:	a6 2b       	or	r26, r22
     f16:	b7 2b       	or	r27, r23
     f18:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     f1c:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     f20:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     f24:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     f28:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0xc>
     f2c:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0xd>
     f30:	30 97       	sbiw	r30, 0x00	; 0
     f32:	39 f0       	breq	.+14     	; 0xf42 <__vector_11+0xb2>
     f34:	66 e0       	ldi	r22, 0x06	; 6
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0xc>
     f3c:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0xd>
     f40:	09 95       	icall
     f42:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
     f46:	ff 91       	pop	r31
     f48:	ef 91       	pop	r30
     f4a:	bf 91       	pop	r27
     f4c:	af 91       	pop	r26
     f4e:	9f 91       	pop	r25
     f50:	8f 91       	pop	r24
     f52:	7f 91       	pop	r23
     f54:	6f 91       	pop	r22
     f56:	5f 91       	pop	r21
     f58:	4f 91       	pop	r20
     f5a:	3f 91       	pop	r19
     f5c:	2f 91       	pop	r18
     f5e:	0f 90       	pop	r0
     f60:	0f be       	out	0x3f, r0	; 63
     f62:	0f 90       	pop	r0
     f64:	1f 90       	pop	r1
     f66:	18 95       	reti

00000f68 <__vector_12>:
     f68:	1f 92       	push	r1
     f6a:	0f 92       	push	r0
     f6c:	0f b6       	in	r0, 0x3f	; 63
     f6e:	0f 92       	push	r0
     f70:	11 24       	eor	r1, r1
     f72:	2f 93       	push	r18
     f74:	3f 93       	push	r19
     f76:	4f 93       	push	r20
     f78:	5f 93       	push	r21
     f7a:	6f 93       	push	r22
     f7c:	7f 93       	push	r23
     f7e:	8f 93       	push	r24
     f80:	9f 93       	push	r25
     f82:	af 93       	push	r26
     f84:	bf 93       	push	r27
     f86:	ef 93       	push	r30
     f88:	ff 93       	push	r31
     f8a:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
     f8e:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
     f92:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f96:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f9a:	c9 01       	movw	r24, r18
     f9c:	03 2e       	mov	r0, r19
     f9e:	00 0c       	add	r0, r0
     fa0:	aa 0b       	sbc	r26, r26
     fa2:	bb 0b       	sbc	r27, r27
     fa4:	dc 01       	movw	r26, r24
     fa6:	99 27       	eor	r25, r25
     fa8:	88 27       	eor	r24, r24
     faa:	60 e0       	ldi	r22, 0x00	; 0
     fac:	70 e0       	ldi	r23, 0x00	; 0
     fae:	84 2b       	or	r24, r20
     fb0:	95 2b       	or	r25, r21
     fb2:	a6 2b       	or	r26, r22
     fb4:	b7 2b       	or	r27, r23
     fb6:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     fba:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     fbe:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     fc2:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     fc6:	b0 9b       	sbis	0x16, 0	; 22
     fc8:	1b c0       	rjmp	.+54     	; 0x1000 <__vector_12+0x98>
     fca:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     fce:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     fd2:	c9 01       	movw	r24, r18
     fd4:	01 96       	adiw	r24, 0x01	; 1
     fd6:	09 2e       	mov	r0, r25
     fd8:	00 0c       	add	r0, r0
     fda:	aa 0b       	sbc	r26, r26
     fdc:	bb 0b       	sbc	r27, r27
     fde:	dc 01       	movw	r26, r24
     fe0:	99 27       	eor	r25, r25
     fe2:	88 27       	eor	r24, r24
     fe4:	60 e0       	ldi	r22, 0x00	; 0
     fe6:	70 e0       	ldi	r23, 0x00	; 0
     fe8:	84 2b       	or	r24, r20
     fea:	95 2b       	or	r25, r21
     fec:	a6 2b       	or	r26, r22
     fee:	b7 2b       	or	r27, r23
     ff0:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     ff4:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     ff8:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     ffc:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1000:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0xe>
    1004:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0xf>
    1008:	30 97       	sbiw	r30, 0x00	; 0
    100a:	39 f0       	breq	.+14     	; 0x101a <__vector_12+0xb2>
    100c:	67 e0       	ldi	r22, 0x07	; 7
    100e:	70 e0       	ldi	r23, 0x00	; 0
    1010:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0xe>
    1014:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0xf>
    1018:	09 95       	icall
    101a:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    101e:	ff 91       	pop	r31
    1020:	ef 91       	pop	r30
    1022:	bf 91       	pop	r27
    1024:	af 91       	pop	r26
    1026:	9f 91       	pop	r25
    1028:	8f 91       	pop	r24
    102a:	7f 91       	pop	r23
    102c:	6f 91       	pop	r22
    102e:	5f 91       	pop	r21
    1030:	4f 91       	pop	r20
    1032:	3f 91       	pop	r19
    1034:	2f 91       	pop	r18
    1036:	0f 90       	pop	r0
    1038:	0f be       	out	0x3f, r0	; 63
    103a:	0f 90       	pop	r0
    103c:	1f 90       	pop	r1
    103e:	18 95       	reti

00001040 <__vector_13>:
    1040:	1f 92       	push	r1
    1042:	0f 92       	push	r0
    1044:	0f b6       	in	r0, 0x3f	; 63
    1046:	0f 92       	push	r0
    1048:	11 24       	eor	r1, r1
    104a:	2f 93       	push	r18
    104c:	3f 93       	push	r19
    104e:	4f 93       	push	r20
    1050:	5f 93       	push	r21
    1052:	6f 93       	push	r22
    1054:	7f 93       	push	r23
    1056:	8f 93       	push	r24
    1058:	9f 93       	push	r25
    105a:	af 93       	push	r26
    105c:	bf 93       	push	r27
    105e:	ef 93       	push	r30
    1060:	ff 93       	push	r31
    1062:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1066:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    106a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    106e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1072:	c9 01       	movw	r24, r18
    1074:	03 2e       	mov	r0, r19
    1076:	00 0c       	add	r0, r0
    1078:	aa 0b       	sbc	r26, r26
    107a:	bb 0b       	sbc	r27, r27
    107c:	dc 01       	movw	r26, r24
    107e:	99 27       	eor	r25, r25
    1080:	88 27       	eor	r24, r24
    1082:	60 e0       	ldi	r22, 0x00	; 0
    1084:	70 e0       	ldi	r23, 0x00	; 0
    1086:	84 2b       	or	r24, r20
    1088:	95 2b       	or	r25, r21
    108a:	a6 2b       	or	r26, r22
    108c:	b7 2b       	or	r27, r23
    108e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1092:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1096:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    109a:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    109e:	b0 9b       	sbis	0x16, 0	; 22
    10a0:	1b c0       	rjmp	.+54     	; 0x10d8 <__vector_13+0x98>
    10a2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10a6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10aa:	c9 01       	movw	r24, r18
    10ac:	01 96       	adiw	r24, 0x01	; 1
    10ae:	09 2e       	mov	r0, r25
    10b0:	00 0c       	add	r0, r0
    10b2:	aa 0b       	sbc	r26, r26
    10b4:	bb 0b       	sbc	r27, r27
    10b6:	dc 01       	movw	r26, r24
    10b8:	99 27       	eor	r25, r25
    10ba:	88 27       	eor	r24, r24
    10bc:	60 e0       	ldi	r22, 0x00	; 0
    10be:	70 e0       	ldi	r23, 0x00	; 0
    10c0:	84 2b       	or	r24, r20
    10c2:	95 2b       	or	r25, r21
    10c4:	a6 2b       	or	r26, r22
    10c6:	b7 2b       	or	r27, r23
    10c8:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    10cc:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    10d0:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    10d4:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    10d8:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x10>
    10dc:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x11>
    10e0:	30 97       	sbiw	r30, 0x00	; 0
    10e2:	39 f0       	breq	.+14     	; 0x10f2 <__vector_13+0xb2>
    10e4:	68 e0       	ldi	r22, 0x08	; 8
    10e6:	70 e0       	ldi	r23, 0x00	; 0
    10e8:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x10>
    10ec:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x11>
    10f0:	09 95       	icall
    10f2:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    10f6:	ff 91       	pop	r31
    10f8:	ef 91       	pop	r30
    10fa:	bf 91       	pop	r27
    10fc:	af 91       	pop	r26
    10fe:	9f 91       	pop	r25
    1100:	8f 91       	pop	r24
    1102:	7f 91       	pop	r23
    1104:	6f 91       	pop	r22
    1106:	5f 91       	pop	r21
    1108:	4f 91       	pop	r20
    110a:	3f 91       	pop	r19
    110c:	2f 91       	pop	r18
    110e:	0f 90       	pop	r0
    1110:	0f be       	out	0x3f, r0	; 63
    1112:	0f 90       	pop	r0
    1114:	1f 90       	pop	r1
    1116:	18 95       	reti

00001118 <__vector_14>:
    1118:	1f 92       	push	r1
    111a:	0f 92       	push	r0
    111c:	0f b6       	in	r0, 0x3f	; 63
    111e:	0f 92       	push	r0
    1120:	11 24       	eor	r1, r1
    1122:	2f 93       	push	r18
    1124:	3f 93       	push	r19
    1126:	4f 93       	push	r20
    1128:	5f 93       	push	r21
    112a:	6f 93       	push	r22
    112c:	7f 93       	push	r23
    112e:	8f 93       	push	r24
    1130:	9f 93       	push	r25
    1132:	af 93       	push	r26
    1134:	bf 93       	push	r27
    1136:	ef 93       	push	r30
    1138:	ff 93       	push	r31
    113a:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    113e:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    1142:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1146:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    114a:	c9 01       	movw	r24, r18
    114c:	03 2e       	mov	r0, r19
    114e:	00 0c       	add	r0, r0
    1150:	aa 0b       	sbc	r26, r26
    1152:	bb 0b       	sbc	r27, r27
    1154:	dc 01       	movw	r26, r24
    1156:	99 27       	eor	r25, r25
    1158:	88 27       	eor	r24, r24
    115a:	60 e0       	ldi	r22, 0x00	; 0
    115c:	70 e0       	ldi	r23, 0x00	; 0
    115e:	84 2b       	or	r24, r20
    1160:	95 2b       	or	r25, r21
    1162:	a6 2b       	or	r26, r22
    1164:	b7 2b       	or	r27, r23
    1166:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    116a:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    116e:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1172:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1176:	b0 9b       	sbis	0x16, 0	; 22
    1178:	1b c0       	rjmp	.+54     	; 0x11b0 <__vector_14+0x98>
    117a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    117e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1182:	c9 01       	movw	r24, r18
    1184:	01 96       	adiw	r24, 0x01	; 1
    1186:	09 2e       	mov	r0, r25
    1188:	00 0c       	add	r0, r0
    118a:	aa 0b       	sbc	r26, r26
    118c:	bb 0b       	sbc	r27, r27
    118e:	dc 01       	movw	r26, r24
    1190:	99 27       	eor	r25, r25
    1192:	88 27       	eor	r24, r24
    1194:	60 e0       	ldi	r22, 0x00	; 0
    1196:	70 e0       	ldi	r23, 0x00	; 0
    1198:	84 2b       	or	r24, r20
    119a:	95 2b       	or	r25, r21
    119c:	a6 2b       	or	r26, r22
    119e:	b7 2b       	or	r27, r23
    11a0:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    11a4:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    11a8:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    11ac:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    11b0:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x12>
    11b4:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x13>
    11b8:	30 97       	sbiw	r30, 0x00	; 0
    11ba:	39 f0       	breq	.+14     	; 0x11ca <__vector_14+0xb2>
    11bc:	69 e0       	ldi	r22, 0x09	; 9
    11be:	70 e0       	ldi	r23, 0x00	; 0
    11c0:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x12>
    11c4:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x13>
    11c8:	09 95       	icall
    11ca:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    11ce:	ff 91       	pop	r31
    11d0:	ef 91       	pop	r30
    11d2:	bf 91       	pop	r27
    11d4:	af 91       	pop	r26
    11d6:	9f 91       	pop	r25
    11d8:	8f 91       	pop	r24
    11da:	7f 91       	pop	r23
    11dc:	6f 91       	pop	r22
    11de:	5f 91       	pop	r21
    11e0:	4f 91       	pop	r20
    11e2:	3f 91       	pop	r19
    11e4:	2f 91       	pop	r18
    11e6:	0f 90       	pop	r0
    11e8:	0f be       	out	0x3f, r0	; 63
    11ea:	0f 90       	pop	r0
    11ec:	1f 90       	pop	r1
    11ee:	18 95       	reti

000011f0 <__vector_15>:
    11f0:	1f 92       	push	r1
    11f2:	0f 92       	push	r0
    11f4:	0f b6       	in	r0, 0x3f	; 63
    11f6:	0f 92       	push	r0
    11f8:	11 24       	eor	r1, r1
    11fa:	2f 93       	push	r18
    11fc:	3f 93       	push	r19
    11fe:	4f 93       	push	r20
    1200:	5f 93       	push	r21
    1202:	6f 93       	push	r22
    1204:	7f 93       	push	r23
    1206:	8f 93       	push	r24
    1208:	9f 93       	push	r25
    120a:	af 93       	push	r26
    120c:	bf 93       	push	r27
    120e:	ef 93       	push	r30
    1210:	ff 93       	push	r31
    1212:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1216:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    121a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    121e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1222:	c9 01       	movw	r24, r18
    1224:	03 2e       	mov	r0, r19
    1226:	00 0c       	add	r0, r0
    1228:	aa 0b       	sbc	r26, r26
    122a:	bb 0b       	sbc	r27, r27
    122c:	dc 01       	movw	r26, r24
    122e:	99 27       	eor	r25, r25
    1230:	88 27       	eor	r24, r24
    1232:	60 e0       	ldi	r22, 0x00	; 0
    1234:	70 e0       	ldi	r23, 0x00	; 0
    1236:	84 2b       	or	r24, r20
    1238:	95 2b       	or	r25, r21
    123a:	a6 2b       	or	r26, r22
    123c:	b7 2b       	or	r27, r23
    123e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1242:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1246:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    124a:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    124e:	b0 9b       	sbis	0x16, 0	; 22
    1250:	1b c0       	rjmp	.+54     	; 0x1288 <__vector_15+0x98>
    1252:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1256:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    125a:	c9 01       	movw	r24, r18
    125c:	01 96       	adiw	r24, 0x01	; 1
    125e:	09 2e       	mov	r0, r25
    1260:	00 0c       	add	r0, r0
    1262:	aa 0b       	sbc	r26, r26
    1264:	bb 0b       	sbc	r27, r27
    1266:	dc 01       	movw	r26, r24
    1268:	99 27       	eor	r25, r25
    126a:	88 27       	eor	r24, r24
    126c:	60 e0       	ldi	r22, 0x00	; 0
    126e:	70 e0       	ldi	r23, 0x00	; 0
    1270:	84 2b       	or	r24, r20
    1272:	95 2b       	or	r25, r21
    1274:	a6 2b       	or	r26, r22
    1276:	b7 2b       	or	r27, r23
    1278:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    127c:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1280:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1284:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1288:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x14>
    128c:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x15>
    1290:	30 97       	sbiw	r30, 0x00	; 0
    1292:	39 f0       	breq	.+14     	; 0x12a2 <__vector_15+0xb2>
    1294:	6a e0       	ldi	r22, 0x0A	; 10
    1296:	70 e0       	ldi	r23, 0x00	; 0
    1298:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x14>
    129c:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x15>
    12a0:	09 95       	icall
    12a2:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    12a6:	ff 91       	pop	r31
    12a8:	ef 91       	pop	r30
    12aa:	bf 91       	pop	r27
    12ac:	af 91       	pop	r26
    12ae:	9f 91       	pop	r25
    12b0:	8f 91       	pop	r24
    12b2:	7f 91       	pop	r23
    12b4:	6f 91       	pop	r22
    12b6:	5f 91       	pop	r21
    12b8:	4f 91       	pop	r20
    12ba:	3f 91       	pop	r19
    12bc:	2f 91       	pop	r18
    12be:	0f 90       	pop	r0
    12c0:	0f be       	out	0x3f, r0	; 63
    12c2:	0f 90       	pop	r0
    12c4:	1f 90       	pop	r1
    12c6:	18 95       	reti

000012c8 <__vector_16>:
    12c8:	1f 92       	push	r1
    12ca:	0f 92       	push	r0
    12cc:	0f b6       	in	r0, 0x3f	; 63
    12ce:	0f 92       	push	r0
    12d0:	11 24       	eor	r1, r1
    12d2:	2f 93       	push	r18
    12d4:	3f 93       	push	r19
    12d6:	4f 93       	push	r20
    12d8:	5f 93       	push	r21
    12da:	6f 93       	push	r22
    12dc:	7f 93       	push	r23
    12de:	8f 93       	push	r24
    12e0:	9f 93       	push	r25
    12e2:	af 93       	push	r26
    12e4:	bf 93       	push	r27
    12e6:	ef 93       	push	r30
    12e8:	ff 93       	push	r31
    12ea:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    12ee:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    12f2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    12f6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    12fa:	c9 01       	movw	r24, r18
    12fc:	03 2e       	mov	r0, r19
    12fe:	00 0c       	add	r0, r0
    1300:	aa 0b       	sbc	r26, r26
    1302:	bb 0b       	sbc	r27, r27
    1304:	dc 01       	movw	r26, r24
    1306:	99 27       	eor	r25, r25
    1308:	88 27       	eor	r24, r24
    130a:	60 e0       	ldi	r22, 0x00	; 0
    130c:	70 e0       	ldi	r23, 0x00	; 0
    130e:	84 2b       	or	r24, r20
    1310:	95 2b       	or	r25, r21
    1312:	a6 2b       	or	r26, r22
    1314:	b7 2b       	or	r27, r23
    1316:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    131a:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    131e:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1322:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1326:	b0 9b       	sbis	0x16, 0	; 22
    1328:	1b c0       	rjmp	.+54     	; 0x1360 <__vector_16+0x98>
    132a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    132e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1332:	c9 01       	movw	r24, r18
    1334:	01 96       	adiw	r24, 0x01	; 1
    1336:	09 2e       	mov	r0, r25
    1338:	00 0c       	add	r0, r0
    133a:	aa 0b       	sbc	r26, r26
    133c:	bb 0b       	sbc	r27, r27
    133e:	dc 01       	movw	r26, r24
    1340:	99 27       	eor	r25, r25
    1342:	88 27       	eor	r24, r24
    1344:	60 e0       	ldi	r22, 0x00	; 0
    1346:	70 e0       	ldi	r23, 0x00	; 0
    1348:	84 2b       	or	r24, r20
    134a:	95 2b       	or	r25, r21
    134c:	a6 2b       	or	r26, r22
    134e:	b7 2b       	or	r27, r23
    1350:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1354:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1358:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    135c:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1360:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x16>
    1364:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x17>
    1368:	30 97       	sbiw	r30, 0x00	; 0
    136a:	39 f0       	breq	.+14     	; 0x137a <__vector_16+0xb2>
    136c:	6b e0       	ldi	r22, 0x0B	; 11
    136e:	70 e0       	ldi	r23, 0x00	; 0
    1370:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x16>
    1374:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x17>
    1378:	09 95       	icall
    137a:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    137e:	ff 91       	pop	r31
    1380:	ef 91       	pop	r30
    1382:	bf 91       	pop	r27
    1384:	af 91       	pop	r26
    1386:	9f 91       	pop	r25
    1388:	8f 91       	pop	r24
    138a:	7f 91       	pop	r23
    138c:	6f 91       	pop	r22
    138e:	5f 91       	pop	r21
    1390:	4f 91       	pop	r20
    1392:	3f 91       	pop	r19
    1394:	2f 91       	pop	r18
    1396:	0f 90       	pop	r0
    1398:	0f be       	out	0x3f, r0	; 63
    139a:	0f 90       	pop	r0
    139c:	1f 90       	pop	r1
    139e:	18 95       	reti

000013a0 <__vector_17>:
    13a0:	1f 92       	push	r1
    13a2:	0f 92       	push	r0
    13a4:	0f b6       	in	r0, 0x3f	; 63
    13a6:	0f 92       	push	r0
    13a8:	11 24       	eor	r1, r1
    13aa:	2f 93       	push	r18
    13ac:	3f 93       	push	r19
    13ae:	4f 93       	push	r20
    13b0:	5f 93       	push	r21
    13b2:	6f 93       	push	r22
    13b4:	7f 93       	push	r23
    13b6:	8f 93       	push	r24
    13b8:	9f 93       	push	r25
    13ba:	af 93       	push	r26
    13bc:	bf 93       	push	r27
    13be:	ef 93       	push	r30
    13c0:	ff 93       	push	r31
    13c2:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    13c6:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    13ca:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    13ce:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    13d2:	c9 01       	movw	r24, r18
    13d4:	03 2e       	mov	r0, r19
    13d6:	00 0c       	add	r0, r0
    13d8:	aa 0b       	sbc	r26, r26
    13da:	bb 0b       	sbc	r27, r27
    13dc:	dc 01       	movw	r26, r24
    13de:	99 27       	eor	r25, r25
    13e0:	88 27       	eor	r24, r24
    13e2:	60 e0       	ldi	r22, 0x00	; 0
    13e4:	70 e0       	ldi	r23, 0x00	; 0
    13e6:	84 2b       	or	r24, r20
    13e8:	95 2b       	or	r25, r21
    13ea:	a6 2b       	or	r26, r22
    13ec:	b7 2b       	or	r27, r23
    13ee:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    13f2:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    13f6:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    13fa:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    13fe:	b0 9b       	sbis	0x16, 0	; 22
    1400:	1b c0       	rjmp	.+54     	; 0x1438 <__vector_17+0x98>
    1402:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1406:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    140a:	c9 01       	movw	r24, r18
    140c:	01 96       	adiw	r24, 0x01	; 1
    140e:	09 2e       	mov	r0, r25
    1410:	00 0c       	add	r0, r0
    1412:	aa 0b       	sbc	r26, r26
    1414:	bb 0b       	sbc	r27, r27
    1416:	dc 01       	movw	r26, r24
    1418:	99 27       	eor	r25, r25
    141a:	88 27       	eor	r24, r24
    141c:	60 e0       	ldi	r22, 0x00	; 0
    141e:	70 e0       	ldi	r23, 0x00	; 0
    1420:	84 2b       	or	r24, r20
    1422:	95 2b       	or	r25, r21
    1424:	a6 2b       	or	r26, r22
    1426:	b7 2b       	or	r27, r23
    1428:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    142c:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1430:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1434:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1438:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x18>
    143c:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x19>
    1440:	30 97       	sbiw	r30, 0x00	; 0
    1442:	39 f0       	breq	.+14     	; 0x1452 <__vector_17+0xb2>
    1444:	6c e0       	ldi	r22, 0x0C	; 12
    1446:	70 e0       	ldi	r23, 0x00	; 0
    1448:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x18>
    144c:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x19>
    1450:	09 95       	icall
    1452:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    1456:	ff 91       	pop	r31
    1458:	ef 91       	pop	r30
    145a:	bf 91       	pop	r27
    145c:	af 91       	pop	r26
    145e:	9f 91       	pop	r25
    1460:	8f 91       	pop	r24
    1462:	7f 91       	pop	r23
    1464:	6f 91       	pop	r22
    1466:	5f 91       	pop	r21
    1468:	4f 91       	pop	r20
    146a:	3f 91       	pop	r19
    146c:	2f 91       	pop	r18
    146e:	0f 90       	pop	r0
    1470:	0f be       	out	0x3f, r0	; 63
    1472:	0f 90       	pop	r0
    1474:	1f 90       	pop	r1
    1476:	18 95       	reti

00001478 <__vector_18>:
    1478:	1f 92       	push	r1
    147a:	0f 92       	push	r0
    147c:	0f b6       	in	r0, 0x3f	; 63
    147e:	0f 92       	push	r0
    1480:	11 24       	eor	r1, r1
    1482:	2f 93       	push	r18
    1484:	3f 93       	push	r19
    1486:	4f 93       	push	r20
    1488:	5f 93       	push	r21
    148a:	6f 93       	push	r22
    148c:	7f 93       	push	r23
    148e:	8f 93       	push	r24
    1490:	9f 93       	push	r25
    1492:	af 93       	push	r26
    1494:	bf 93       	push	r27
    1496:	ef 93       	push	r30
    1498:	ff 93       	push	r31
    149a:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    149e:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    14a2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    14a6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    14aa:	c9 01       	movw	r24, r18
    14ac:	03 2e       	mov	r0, r19
    14ae:	00 0c       	add	r0, r0
    14b0:	aa 0b       	sbc	r26, r26
    14b2:	bb 0b       	sbc	r27, r27
    14b4:	dc 01       	movw	r26, r24
    14b6:	99 27       	eor	r25, r25
    14b8:	88 27       	eor	r24, r24
    14ba:	60 e0       	ldi	r22, 0x00	; 0
    14bc:	70 e0       	ldi	r23, 0x00	; 0
    14be:	84 2b       	or	r24, r20
    14c0:	95 2b       	or	r25, r21
    14c2:	a6 2b       	or	r26, r22
    14c4:	b7 2b       	or	r27, r23
    14c6:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    14ca:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    14ce:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    14d2:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    14d6:	b0 9b       	sbis	0x16, 0	; 22
    14d8:	1b c0       	rjmp	.+54     	; 0x1510 <__vector_18+0x98>
    14da:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    14de:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    14e2:	c9 01       	movw	r24, r18
    14e4:	01 96       	adiw	r24, 0x01	; 1
    14e6:	09 2e       	mov	r0, r25
    14e8:	00 0c       	add	r0, r0
    14ea:	aa 0b       	sbc	r26, r26
    14ec:	bb 0b       	sbc	r27, r27
    14ee:	dc 01       	movw	r26, r24
    14f0:	99 27       	eor	r25, r25
    14f2:	88 27       	eor	r24, r24
    14f4:	60 e0       	ldi	r22, 0x00	; 0
    14f6:	70 e0       	ldi	r23, 0x00	; 0
    14f8:	84 2b       	or	r24, r20
    14fa:	95 2b       	or	r25, r21
    14fc:	a6 2b       	or	r26, r22
    14fe:	b7 2b       	or	r27, r23
    1500:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1504:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1508:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    150c:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1510:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1a>
    1514:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1b>
    1518:	30 97       	sbiw	r30, 0x00	; 0
    151a:	39 f0       	breq	.+14     	; 0x152a <__vector_18+0xb2>
    151c:	6d e0       	ldi	r22, 0x0D	; 13
    151e:	70 e0       	ldi	r23, 0x00	; 0
    1520:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1a>
    1524:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1b>
    1528:	09 95       	icall
    152a:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    152e:	ff 91       	pop	r31
    1530:	ef 91       	pop	r30
    1532:	bf 91       	pop	r27
    1534:	af 91       	pop	r26
    1536:	9f 91       	pop	r25
    1538:	8f 91       	pop	r24
    153a:	7f 91       	pop	r23
    153c:	6f 91       	pop	r22
    153e:	5f 91       	pop	r21
    1540:	4f 91       	pop	r20
    1542:	3f 91       	pop	r19
    1544:	2f 91       	pop	r18
    1546:	0f 90       	pop	r0
    1548:	0f be       	out	0x3f, r0	; 63
    154a:	0f 90       	pop	r0
    154c:	1f 90       	pop	r1
    154e:	18 95       	reti

00001550 <__vector_19>:
    1550:	1f 92       	push	r1
    1552:	0f 92       	push	r0
    1554:	0f b6       	in	r0, 0x3f	; 63
    1556:	0f 92       	push	r0
    1558:	11 24       	eor	r1, r1
    155a:	2f 93       	push	r18
    155c:	3f 93       	push	r19
    155e:	4f 93       	push	r20
    1560:	5f 93       	push	r21
    1562:	6f 93       	push	r22
    1564:	7f 93       	push	r23
    1566:	8f 93       	push	r24
    1568:	9f 93       	push	r25
    156a:	af 93       	push	r26
    156c:	bf 93       	push	r27
    156e:	ef 93       	push	r30
    1570:	ff 93       	push	r31
    1572:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1576:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    157a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    157e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1582:	c9 01       	movw	r24, r18
    1584:	03 2e       	mov	r0, r19
    1586:	00 0c       	add	r0, r0
    1588:	aa 0b       	sbc	r26, r26
    158a:	bb 0b       	sbc	r27, r27
    158c:	dc 01       	movw	r26, r24
    158e:	99 27       	eor	r25, r25
    1590:	88 27       	eor	r24, r24
    1592:	60 e0       	ldi	r22, 0x00	; 0
    1594:	70 e0       	ldi	r23, 0x00	; 0
    1596:	84 2b       	or	r24, r20
    1598:	95 2b       	or	r25, r21
    159a:	a6 2b       	or	r26, r22
    159c:	b7 2b       	or	r27, r23
    159e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    15a2:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    15a6:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    15aa:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    15ae:	b0 9b       	sbis	0x16, 0	; 22
    15b0:	1b c0       	rjmp	.+54     	; 0x15e8 <__vector_19+0x98>
    15b2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15b6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15ba:	c9 01       	movw	r24, r18
    15bc:	01 96       	adiw	r24, 0x01	; 1
    15be:	09 2e       	mov	r0, r25
    15c0:	00 0c       	add	r0, r0
    15c2:	aa 0b       	sbc	r26, r26
    15c4:	bb 0b       	sbc	r27, r27
    15c6:	dc 01       	movw	r26, r24
    15c8:	99 27       	eor	r25, r25
    15ca:	88 27       	eor	r24, r24
    15cc:	60 e0       	ldi	r22, 0x00	; 0
    15ce:	70 e0       	ldi	r23, 0x00	; 0
    15d0:	84 2b       	or	r24, r20
    15d2:	95 2b       	or	r25, r21
    15d4:	a6 2b       	or	r26, r22
    15d6:	b7 2b       	or	r27, r23
    15d8:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    15dc:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    15e0:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    15e4:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    15e8:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x1c>
    15ec:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1d>
    15f0:	30 97       	sbiw	r30, 0x00	; 0
    15f2:	39 f0       	breq	.+14     	; 0x1602 <__vector_19+0xb2>
    15f4:	6e e0       	ldi	r22, 0x0E	; 14
    15f6:	70 e0       	ldi	r23, 0x00	; 0
    15f8:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x1c>
    15fc:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1d>
    1600:	09 95       	icall
    1602:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    1606:	ff 91       	pop	r31
    1608:	ef 91       	pop	r30
    160a:	bf 91       	pop	r27
    160c:	af 91       	pop	r26
    160e:	9f 91       	pop	r25
    1610:	8f 91       	pop	r24
    1612:	7f 91       	pop	r23
    1614:	6f 91       	pop	r22
    1616:	5f 91       	pop	r21
    1618:	4f 91       	pop	r20
    161a:	3f 91       	pop	r19
    161c:	2f 91       	pop	r18
    161e:	0f 90       	pop	r0
    1620:	0f be       	out	0x3f, r0	; 63
    1622:	0f 90       	pop	r0
    1624:	1f 90       	pop	r1
    1626:	18 95       	reti

00001628 <__vector_20>:
    1628:	1f 92       	push	r1
    162a:	0f 92       	push	r0
    162c:	0f b6       	in	r0, 0x3f	; 63
    162e:	0f 92       	push	r0
    1630:	11 24       	eor	r1, r1
    1632:	2f 93       	push	r18
    1634:	3f 93       	push	r19
    1636:	4f 93       	push	r20
    1638:	5f 93       	push	r21
    163a:	6f 93       	push	r22
    163c:	7f 93       	push	r23
    163e:	8f 93       	push	r24
    1640:	9f 93       	push	r25
    1642:	af 93       	push	r26
    1644:	bf 93       	push	r27
    1646:	ef 93       	push	r30
    1648:	ff 93       	push	r31
    164a:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    164e:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    1652:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1656:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    165a:	c9 01       	movw	r24, r18
    165c:	03 2e       	mov	r0, r19
    165e:	00 0c       	add	r0, r0
    1660:	aa 0b       	sbc	r26, r26
    1662:	bb 0b       	sbc	r27, r27
    1664:	dc 01       	movw	r26, r24
    1666:	99 27       	eor	r25, r25
    1668:	88 27       	eor	r24, r24
    166a:	60 e0       	ldi	r22, 0x00	; 0
    166c:	70 e0       	ldi	r23, 0x00	; 0
    166e:	84 2b       	or	r24, r20
    1670:	95 2b       	or	r25, r21
    1672:	a6 2b       	or	r26, r22
    1674:	b7 2b       	or	r27, r23
    1676:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    167a:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    167e:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1682:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1686:	b0 9b       	sbis	0x16, 0	; 22
    1688:	1b c0       	rjmp	.+54     	; 0x16c0 <__vector_20+0x98>
    168a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    168e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1692:	c9 01       	movw	r24, r18
    1694:	01 96       	adiw	r24, 0x01	; 1
    1696:	09 2e       	mov	r0, r25
    1698:	00 0c       	add	r0, r0
    169a:	aa 0b       	sbc	r26, r26
    169c:	bb 0b       	sbc	r27, r27
    169e:	dc 01       	movw	r26, r24
    16a0:	99 27       	eor	r25, r25
    16a2:	88 27       	eor	r24, r24
    16a4:	60 e0       	ldi	r22, 0x00	; 0
    16a6:	70 e0       	ldi	r23, 0x00	; 0
    16a8:	84 2b       	or	r24, r20
    16aa:	95 2b       	or	r25, r21
    16ac:	a6 2b       	or	r26, r22
    16ae:	b7 2b       	or	r27, r23
    16b0:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    16b4:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    16b8:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    16bc:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    16c0:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x1e>
    16c4:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x1f>
    16c8:	30 97       	sbiw	r30, 0x00	; 0
    16ca:	39 f0       	breq	.+14     	; 0x16da <__vector_20+0xb2>
    16cc:	6f e0       	ldi	r22, 0x0F	; 15
    16ce:	70 e0       	ldi	r23, 0x00	; 0
    16d0:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x1e>
    16d4:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x1f>
    16d8:	09 95       	icall
    16da:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    16de:	ff 91       	pop	r31
    16e0:	ef 91       	pop	r30
    16e2:	bf 91       	pop	r27
    16e4:	af 91       	pop	r26
    16e6:	9f 91       	pop	r25
    16e8:	8f 91       	pop	r24
    16ea:	7f 91       	pop	r23
    16ec:	6f 91       	pop	r22
    16ee:	5f 91       	pop	r21
    16f0:	4f 91       	pop	r20
    16f2:	3f 91       	pop	r19
    16f4:	2f 91       	pop	r18
    16f6:	0f 90       	pop	r0
    16f8:	0f be       	out	0x3f, r0	; 63
    16fa:	0f 90       	pop	r0
    16fc:	1f 90       	pop	r1
    16fe:	18 95       	reti

00001700 <__vector_21>:
    1700:	1f 92       	push	r1
    1702:	0f 92       	push	r0
    1704:	0f b6       	in	r0, 0x3f	; 63
    1706:	0f 92       	push	r0
    1708:	11 24       	eor	r1, r1
    170a:	2f 93       	push	r18
    170c:	3f 93       	push	r19
    170e:	4f 93       	push	r20
    1710:	5f 93       	push	r21
    1712:	6f 93       	push	r22
    1714:	7f 93       	push	r23
    1716:	8f 93       	push	r24
    1718:	9f 93       	push	r25
    171a:	af 93       	push	r26
    171c:	bf 93       	push	r27
    171e:	ef 93       	push	r30
    1720:	ff 93       	push	r31
    1722:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1726:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    172a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    172e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1732:	c9 01       	movw	r24, r18
    1734:	03 2e       	mov	r0, r19
    1736:	00 0c       	add	r0, r0
    1738:	aa 0b       	sbc	r26, r26
    173a:	bb 0b       	sbc	r27, r27
    173c:	dc 01       	movw	r26, r24
    173e:	99 27       	eor	r25, r25
    1740:	88 27       	eor	r24, r24
    1742:	60 e0       	ldi	r22, 0x00	; 0
    1744:	70 e0       	ldi	r23, 0x00	; 0
    1746:	84 2b       	or	r24, r20
    1748:	95 2b       	or	r25, r21
    174a:	a6 2b       	or	r26, r22
    174c:	b7 2b       	or	r27, r23
    174e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1752:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1756:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    175a:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    175e:	b0 9b       	sbis	0x16, 0	; 22
    1760:	1b c0       	rjmp	.+54     	; 0x1798 <__vector_21+0x98>
    1762:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1766:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    176a:	c9 01       	movw	r24, r18
    176c:	01 96       	adiw	r24, 0x01	; 1
    176e:	09 2e       	mov	r0, r25
    1770:	00 0c       	add	r0, r0
    1772:	aa 0b       	sbc	r26, r26
    1774:	bb 0b       	sbc	r27, r27
    1776:	dc 01       	movw	r26, r24
    1778:	99 27       	eor	r25, r25
    177a:	88 27       	eor	r24, r24
    177c:	60 e0       	ldi	r22, 0x00	; 0
    177e:	70 e0       	ldi	r23, 0x00	; 0
    1780:	84 2b       	or	r24, r20
    1782:	95 2b       	or	r25, r21
    1784:	a6 2b       	or	r26, r22
    1786:	b7 2b       	or	r27, r23
    1788:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    178c:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1790:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1794:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1798:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x20>
    179c:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x21>
    17a0:	30 97       	sbiw	r30, 0x00	; 0
    17a2:	39 f0       	breq	.+14     	; 0x17b2 <__vector_21+0xb2>
    17a4:	60 e1       	ldi	r22, 0x10	; 16
    17a6:	70 e0       	ldi	r23, 0x00	; 0
    17a8:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x20>
    17ac:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x21>
    17b0:	09 95       	icall
    17b2:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    17b6:	ff 91       	pop	r31
    17b8:	ef 91       	pop	r30
    17ba:	bf 91       	pop	r27
    17bc:	af 91       	pop	r26
    17be:	9f 91       	pop	r25
    17c0:	8f 91       	pop	r24
    17c2:	7f 91       	pop	r23
    17c4:	6f 91       	pop	r22
    17c6:	5f 91       	pop	r21
    17c8:	4f 91       	pop	r20
    17ca:	3f 91       	pop	r19
    17cc:	2f 91       	pop	r18
    17ce:	0f 90       	pop	r0
    17d0:	0f be       	out	0x3f, r0	; 63
    17d2:	0f 90       	pop	r0
    17d4:	1f 90       	pop	r1
    17d6:	18 95       	reti

000017d8 <__vector_22>:
    17d8:	1f 92       	push	r1
    17da:	0f 92       	push	r0
    17dc:	0f b6       	in	r0, 0x3f	; 63
    17de:	0f 92       	push	r0
    17e0:	11 24       	eor	r1, r1
    17e2:	2f 93       	push	r18
    17e4:	3f 93       	push	r19
    17e6:	4f 93       	push	r20
    17e8:	5f 93       	push	r21
    17ea:	6f 93       	push	r22
    17ec:	7f 93       	push	r23
    17ee:	8f 93       	push	r24
    17f0:	9f 93       	push	r25
    17f2:	af 93       	push	r26
    17f4:	bf 93       	push	r27
    17f6:	ef 93       	push	r30
    17f8:	ff 93       	push	r31
    17fa:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    17fe:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    1802:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1806:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    180a:	c9 01       	movw	r24, r18
    180c:	03 2e       	mov	r0, r19
    180e:	00 0c       	add	r0, r0
    1810:	aa 0b       	sbc	r26, r26
    1812:	bb 0b       	sbc	r27, r27
    1814:	dc 01       	movw	r26, r24
    1816:	99 27       	eor	r25, r25
    1818:	88 27       	eor	r24, r24
    181a:	60 e0       	ldi	r22, 0x00	; 0
    181c:	70 e0       	ldi	r23, 0x00	; 0
    181e:	84 2b       	or	r24, r20
    1820:	95 2b       	or	r25, r21
    1822:	a6 2b       	or	r26, r22
    1824:	b7 2b       	or	r27, r23
    1826:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    182a:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    182e:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1832:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1836:	b0 9b       	sbis	0x16, 0	; 22
    1838:	1b c0       	rjmp	.+54     	; 0x1870 <__vector_22+0x98>
    183a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    183e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1842:	c9 01       	movw	r24, r18
    1844:	01 96       	adiw	r24, 0x01	; 1
    1846:	09 2e       	mov	r0, r25
    1848:	00 0c       	add	r0, r0
    184a:	aa 0b       	sbc	r26, r26
    184c:	bb 0b       	sbc	r27, r27
    184e:	dc 01       	movw	r26, r24
    1850:	99 27       	eor	r25, r25
    1852:	88 27       	eor	r24, r24
    1854:	60 e0       	ldi	r22, 0x00	; 0
    1856:	70 e0       	ldi	r23, 0x00	; 0
    1858:	84 2b       	or	r24, r20
    185a:	95 2b       	or	r25, r21
    185c:	a6 2b       	or	r26, r22
    185e:	b7 2b       	or	r27, r23
    1860:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1864:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1868:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    186c:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1870:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0x22>
    1874:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0x23>
    1878:	30 97       	sbiw	r30, 0x00	; 0
    187a:	39 f0       	breq	.+14     	; 0x188a <__vector_22+0xb2>
    187c:	61 e1       	ldi	r22, 0x11	; 17
    187e:	70 e0       	ldi	r23, 0x00	; 0
    1880:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0x22>
    1884:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0x23>
    1888:	09 95       	icall
    188a:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    188e:	ff 91       	pop	r31
    1890:	ef 91       	pop	r30
    1892:	bf 91       	pop	r27
    1894:	af 91       	pop	r26
    1896:	9f 91       	pop	r25
    1898:	8f 91       	pop	r24
    189a:	7f 91       	pop	r23
    189c:	6f 91       	pop	r22
    189e:	5f 91       	pop	r21
    18a0:	4f 91       	pop	r20
    18a2:	3f 91       	pop	r19
    18a4:	2f 91       	pop	r18
    18a6:	0f 90       	pop	r0
    18a8:	0f be       	out	0x3f, r0	; 63
    18aa:	0f 90       	pop	r0
    18ac:	1f 90       	pop	r1
    18ae:	18 95       	reti

000018b0 <enqueueByDeadline>:
    18b0:	ef 92       	push	r14
    18b2:	ff 92       	push	r15
    18b4:	0f 93       	push	r16
    18b6:	1f 93       	push	r17
    18b8:	cf 93       	push	r28
    18ba:	df 93       	push	r29
    18bc:	7b 01       	movw	r14, r22
    18be:	eb 01       	movw	r28, r22
    18c0:	a8 81       	ld	r26, Y
    18c2:	b9 81       	ldd	r27, Y+1	; 0x01
    18c4:	10 97       	sbiw	r26, 0x00	; 0
    18c6:	61 f1       	breq	.+88     	; 0x1920 <enqueueByDeadline+0x70>
    18c8:	fc 01       	movw	r30, r24
    18ca:	06 81       	ldd	r16, Z+6	; 0x06
    18cc:	17 81       	ldd	r17, Z+7	; 0x07
    18ce:	20 85       	ldd	r18, Z+8	; 0x08
    18d0:	31 85       	ldd	r19, Z+9	; 0x09
    18d2:	16 96       	adiw	r26, 0x06	; 6
    18d4:	4d 91       	ld	r20, X+
    18d6:	5d 91       	ld	r21, X+
    18d8:	6d 91       	ld	r22, X+
    18da:	7c 91       	ld	r23, X
    18dc:	19 97       	sbiw	r26, 0x09	; 9
    18de:	04 17       	cp	r16, r20
    18e0:	15 07       	cpc	r17, r21
    18e2:	26 07       	cpc	r18, r22
    18e4:	37 07       	cpc	r19, r23
    18e6:	14 f4       	brge	.+4      	; 0x18ec <enqueueByDeadline+0x3c>
    18e8:	1b c0       	rjmp	.+54     	; 0x1920 <enqueueByDeadline+0x70>
    18ea:	df 01       	movw	r26, r30
    18ec:	ed 91       	ld	r30, X+
    18ee:	fc 91       	ld	r31, X
    18f0:	11 97       	sbiw	r26, 0x01	; 1
    18f2:	30 97       	sbiw	r30, 0x00	; 0
    18f4:	49 f0       	breq	.+18     	; 0x1908 <enqueueByDeadline+0x58>
    18f6:	46 81       	ldd	r20, Z+6	; 0x06
    18f8:	57 81       	ldd	r21, Z+7	; 0x07
    18fa:	60 85       	ldd	r22, Z+8	; 0x08
    18fc:	71 85       	ldd	r23, Z+9	; 0x09
    18fe:	04 17       	cp	r16, r20
    1900:	15 07       	cpc	r17, r21
    1902:	26 07       	cpc	r18, r22
    1904:	37 07       	cpc	r19, r23
    1906:	8c f7       	brge	.-30     	; 0x18ea <enqueueByDeadline+0x3a>
    1908:	ec 01       	movw	r28, r24
    190a:	f9 83       	std	Y+1, r31	; 0x01
    190c:	e8 83       	st	Y, r30
    190e:	10 97       	sbiw	r26, 0x00	; 0
    1910:	21 f4       	brne	.+8      	; 0x191a <enqueueByDeadline+0x6a>
    1912:	f7 01       	movw	r30, r14
    1914:	91 83       	std	Z+1, r25	; 0x01
    1916:	80 83       	st	Z, r24
    1918:	07 c0       	rjmp	.+14     	; 0x1928 <enqueueByDeadline+0x78>
    191a:	8d 93       	st	X+, r24
    191c:	9c 93       	st	X, r25
    191e:	04 c0       	rjmp	.+8      	; 0x1928 <enqueueByDeadline+0x78>
    1920:	ec 01       	movw	r28, r24
    1922:	b9 83       	std	Y+1, r27	; 0x01
    1924:	a8 83       	st	Y, r26
    1926:	f5 cf       	rjmp	.-22     	; 0x1912 <enqueueByDeadline+0x62>
    1928:	df 91       	pop	r29
    192a:	cf 91       	pop	r28
    192c:	1f 91       	pop	r17
    192e:	0f 91       	pop	r16
    1930:	ff 90       	pop	r15
    1932:	ef 90       	pop	r14
    1934:	08 95       	ret

00001936 <enqueueByBaseline>:
    1936:	ef 92       	push	r14
    1938:	ff 92       	push	r15
    193a:	0f 93       	push	r16
    193c:	1f 93       	push	r17
    193e:	cf 93       	push	r28
    1940:	df 93       	push	r29
    1942:	7b 01       	movw	r14, r22
    1944:	eb 01       	movw	r28, r22
    1946:	a8 81       	ld	r26, Y
    1948:	b9 81       	ldd	r27, Y+1	; 0x01
    194a:	10 97       	sbiw	r26, 0x00	; 0
    194c:	61 f1       	breq	.+88     	; 0x19a6 <enqueueByBaseline+0x70>
    194e:	fc 01       	movw	r30, r24
    1950:	02 81       	ldd	r16, Z+2	; 0x02
    1952:	13 81       	ldd	r17, Z+3	; 0x03
    1954:	24 81       	ldd	r18, Z+4	; 0x04
    1956:	35 81       	ldd	r19, Z+5	; 0x05
    1958:	12 96       	adiw	r26, 0x02	; 2
    195a:	4d 91       	ld	r20, X+
    195c:	5d 91       	ld	r21, X+
    195e:	6d 91       	ld	r22, X+
    1960:	7c 91       	ld	r23, X
    1962:	15 97       	sbiw	r26, 0x05	; 5
    1964:	04 17       	cp	r16, r20
    1966:	15 07       	cpc	r17, r21
    1968:	26 07       	cpc	r18, r22
    196a:	37 07       	cpc	r19, r23
    196c:	14 f4       	brge	.+4      	; 0x1972 <enqueueByBaseline+0x3c>
    196e:	1b c0       	rjmp	.+54     	; 0x19a6 <enqueueByBaseline+0x70>
    1970:	df 01       	movw	r26, r30
    1972:	ed 91       	ld	r30, X+
    1974:	fc 91       	ld	r31, X
    1976:	11 97       	sbiw	r26, 0x01	; 1
    1978:	30 97       	sbiw	r30, 0x00	; 0
    197a:	49 f0       	breq	.+18     	; 0x198e <enqueueByBaseline+0x58>
    197c:	42 81       	ldd	r20, Z+2	; 0x02
    197e:	53 81       	ldd	r21, Z+3	; 0x03
    1980:	64 81       	ldd	r22, Z+4	; 0x04
    1982:	75 81       	ldd	r23, Z+5	; 0x05
    1984:	04 17       	cp	r16, r20
    1986:	15 07       	cpc	r17, r21
    1988:	26 07       	cpc	r18, r22
    198a:	37 07       	cpc	r19, r23
    198c:	8c f7       	brge	.-30     	; 0x1970 <enqueueByBaseline+0x3a>
    198e:	ec 01       	movw	r28, r24
    1990:	f9 83       	std	Y+1, r31	; 0x01
    1992:	e8 83       	st	Y, r30
    1994:	10 97       	sbiw	r26, 0x00	; 0
    1996:	21 f4       	brne	.+8      	; 0x19a0 <enqueueByBaseline+0x6a>
    1998:	f7 01       	movw	r30, r14
    199a:	91 83       	std	Z+1, r25	; 0x01
    199c:	80 83       	st	Z, r24
    199e:	07 c0       	rjmp	.+14     	; 0x19ae <enqueueByBaseline+0x78>
    19a0:	8d 93       	st	X+, r24
    19a2:	9c 93       	st	X, r25
    19a4:	04 c0       	rjmp	.+8      	; 0x19ae <enqueueByBaseline+0x78>
    19a6:	ec 01       	movw	r28, r24
    19a8:	b9 83       	std	Y+1, r27	; 0x01
    19aa:	a8 83       	st	Y, r26
    19ac:	f5 cf       	rjmp	.-22     	; 0x1998 <enqueueByBaseline+0x62>
    19ae:	df 91       	pop	r29
    19b0:	cf 91       	pop	r28
    19b2:	1f 91       	pop	r17
    19b4:	0f 91       	pop	r16
    19b6:	ff 90       	pop	r15
    19b8:	ef 90       	pop	r14
    19ba:	08 95       	ret

000019bc <dequeue>:
    19bc:	dc 01       	movw	r26, r24
    19be:	ed 91       	ld	r30, X+
    19c0:	fc 91       	ld	r31, X
    19c2:	11 97       	sbiw	r26, 0x01	; 1
    19c4:	30 97       	sbiw	r30, 0x00	; 0
    19c6:	59 f4       	brne	.+22     	; 0x19de <dequeue+0x22>
    19c8:	8f ef       	ldi	r24, 0xFF	; 255
    19ca:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    19ce:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    19d2:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    19d6:	81 e0       	ldi	r24, 0x01	; 1
    19d8:	83 bf       	out	0x33, r24	; 51
    19da:	88 95       	sleep
    19dc:	fd cf       	rjmp	.-6      	; 0x19d8 <dequeue+0x1c>
    19de:	20 81       	ld	r18, Z
    19e0:	31 81       	ldd	r19, Z+1	; 0x01
    19e2:	2d 93       	st	X+, r18
    19e4:	3c 93       	st	X, r19
    19e6:	cf 01       	movw	r24, r30
    19e8:	08 95       	ret

000019ea <__vector_9>:
    19ea:	1f 92       	push	r1
    19ec:	0f 92       	push	r0
    19ee:	0f b6       	in	r0, 0x3f	; 63
    19f0:	0f 92       	push	r0
    19f2:	11 24       	eor	r1, r1
    19f4:	2f 93       	push	r18
    19f6:	3f 93       	push	r19
    19f8:	4f 93       	push	r20
    19fa:	5f 93       	push	r21
    19fc:	6f 93       	push	r22
    19fe:	7f 93       	push	r23
    1a00:	8f 93       	push	r24
    1a02:	9f 93       	push	r25
    1a04:	ef 93       	push	r30
    1a06:	ff 93       	push	r31
    1a08:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1a0c:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1a10:	01 96       	adiw	r24, 0x01	; 1
    1a12:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <overflows+0x1>
    1a16:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <overflows>
    1a1a:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <timerQ>
    1a1e:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <timerQ+0x1>
    1a22:	30 97       	sbiw	r30, 0x00	; 0
    1a24:	01 f1       	breq	.+64     	; 0x1a66 <__vector_9+0x7c>
    1a26:	42 81       	ldd	r20, Z+2	; 0x02
    1a28:	53 81       	ldd	r21, Z+3	; 0x03
    1a2a:	64 81       	ldd	r22, Z+4	; 0x04
    1a2c:	75 81       	ldd	r23, Z+5	; 0x05
    1a2e:	86 17       	cp	r24, r22
    1a30:	97 07       	cpc	r25, r23
    1a32:	c9 f4       	brne	.+50     	; 0x1a66 <__vector_9+0x7c>
    1a34:	ca 01       	movw	r24, r20
    1a36:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a3a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a3e:	42 1b       	sub	r20, r18
    1a40:	53 0b       	sbc	r21, r19
    1a42:	41 30       	cpi	r20, 0x01	; 1
    1a44:	51 05       	cpc	r21, r1
    1a46:	29 f4       	brne	.+10     	; 0x1a52 <__vector_9+0x68>
    1a48:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a4c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a50:	01 96       	adiw	r24, 0x01	; 1
    1a52:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1a56:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1a5a:	ef e6       	ldi	r30, 0x6F	; 111
    1a5c:	f0 e0       	ldi	r31, 0x00	; 0
    1a5e:	80 81       	ld	r24, Z
    1a60:	82 60       	ori	r24, 0x02	; 2
    1a62:	80 83       	st	Z, r24
    1a64:	05 c0       	rjmp	.+10     	; 0x1a70 <__vector_9+0x86>
    1a66:	ef e6       	ldi	r30, 0x6F	; 111
    1a68:	f0 e0       	ldi	r31, 0x00	; 0
    1a6a:	80 81       	ld	r24, Z
    1a6c:	8d 7f       	andi	r24, 0xFD	; 253
    1a6e:	80 83       	st	Z, r24
    1a70:	ff 91       	pop	r31
    1a72:	ef 91       	pop	r30
    1a74:	9f 91       	pop	r25
    1a76:	8f 91       	pop	r24
    1a78:	7f 91       	pop	r23
    1a7a:	6f 91       	pop	r22
    1a7c:	5f 91       	pop	r21
    1a7e:	4f 91       	pop	r20
    1a80:	3f 91       	pop	r19
    1a82:	2f 91       	pop	r18
    1a84:	0f 90       	pop	r0
    1a86:	0f be       	out	0x3f, r0	; 63
    1a88:	0f 90       	pop	r0
    1a8a:	1f 90       	pop	r1
    1a8c:	18 95       	reti

00001a8e <__vector_7>:
    1a8e:	1f 92       	push	r1
    1a90:	0f 92       	push	r0
    1a92:	0f b6       	in	r0, 0x3f	; 63
    1a94:	0f 92       	push	r0
    1a96:	11 24       	eor	r1, r1
    1a98:	cf 92       	push	r12
    1a9a:	df 92       	push	r13
    1a9c:	ef 92       	push	r14
    1a9e:	ff 92       	push	r15
    1aa0:	2f 93       	push	r18
    1aa2:	3f 93       	push	r19
    1aa4:	4f 93       	push	r20
    1aa6:	5f 93       	push	r21
    1aa8:	6f 93       	push	r22
    1aaa:	7f 93       	push	r23
    1aac:	8f 93       	push	r24
    1aae:	9f 93       	push	r25
    1ab0:	af 93       	push	r26
    1ab2:	bf 93       	push	r27
    1ab4:	ef 93       	push	r30
    1ab6:	ff 93       	push	r31
    1ab8:	c0 90 3a 01 	lds	r12, 0x013A	; 0x80013a <overflows>
    1abc:	d0 90 3b 01 	lds	r13, 0x013B	; 0x80013b <overflows+0x1>
    1ac0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1ac4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1ac8:	b0 99       	sbic	0x16, 0	; 22
    1aca:	0f c0       	rjmp	.+30     	; 0x1aea <__vector_7+0x5c>
    1acc:	0d 2c       	mov	r0, r13
    1ace:	00 0c       	add	r0, r0
    1ad0:	ee 08       	sbc	r14, r14
    1ad2:	ff 08       	sbc	r15, r15
    1ad4:	d6 01       	movw	r26, r12
    1ad6:	99 27       	eor	r25, r25
    1ad8:	88 27       	eor	r24, r24
    1ada:	69 01       	movw	r12, r18
    1adc:	e1 2c       	mov	r14, r1
    1ade:	f1 2c       	mov	r15, r1
    1ae0:	c8 2a       	or	r12, r24
    1ae2:	d9 2a       	or	r13, r25
    1ae4:	ea 2a       	or	r14, r26
    1ae6:	fb 2a       	or	r15, r27
    1ae8:	15 c0       	rjmp	.+42     	; 0x1b14 <__vector_7+0x86>
    1aea:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1aee:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1af2:	8f ef       	ldi	r24, 0xFF	; 255
    1af4:	c8 1a       	sub	r12, r24
    1af6:	d8 0a       	sbc	r13, r24
    1af8:	0d 2c       	mov	r0, r13
    1afa:	00 0c       	add	r0, r0
    1afc:	ee 08       	sbc	r14, r14
    1afe:	ff 08       	sbc	r15, r15
    1b00:	d6 01       	movw	r26, r12
    1b02:	99 27       	eor	r25, r25
    1b04:	88 27       	eor	r24, r24
    1b06:	69 01       	movw	r12, r18
    1b08:	e1 2c       	mov	r14, r1
    1b0a:	f1 2c       	mov	r15, r1
    1b0c:	c8 2a       	or	r12, r24
    1b0e:	d9 2a       	or	r13, r25
    1b10:	ea 2a       	or	r14, r26
    1b12:	fb 2a       	or	r15, r27
    1b14:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <timerQ>
    1b18:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <timerQ+0x1>
    1b1c:	30 97       	sbiw	r30, 0x00	; 0
    1b1e:	09 f4       	brne	.+2      	; 0x1b22 <__vector_7+0x94>
    1b20:	42 c0       	rjmp	.+132    	; 0x1ba6 <__vector_7+0x118>
    1b22:	82 81       	ldd	r24, Z+2	; 0x02
    1b24:	93 81       	ldd	r25, Z+3	; 0x03
    1b26:	a4 81       	ldd	r26, Z+4	; 0x04
    1b28:	b5 81       	ldd	r27, Z+5	; 0x05
    1b2a:	8c 19       	sub	r24, r12
    1b2c:	9d 09       	sbc	r25, r13
    1b2e:	ae 09       	sbc	r26, r14
    1b30:	bf 09       	sbc	r27, r15
    1b32:	18 16       	cp	r1, r24
    1b34:	19 06       	cpc	r1, r25
    1b36:	1a 06       	cpc	r1, r26
    1b38:	1b 06       	cpc	r1, r27
    1b3a:	ec f1       	brlt	.+122    	; 0x1bb6 <__vector_7+0x128>
    1b3c:	80 e4       	ldi	r24, 0x40	; 64
    1b3e:	91 e0       	ldi	r25, 0x01	; 1
    1b40:	0e 94 de 0c 	call	0x19bc	; 0x19bc <dequeue>
    1b44:	62 e4       	ldi	r22, 0x42	; 66
    1b46:	71 e0       	ldi	r23, 0x01	; 1
    1b48:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <enqueueByDeadline>
    1b4c:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <timerQ>
    1b50:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <timerQ+0x1>
    1b54:	30 97       	sbiw	r30, 0x00	; 0
    1b56:	39 f1       	breq	.+78     	; 0x1ba6 <__vector_7+0x118>
    1b58:	82 81       	ldd	r24, Z+2	; 0x02
    1b5a:	93 81       	ldd	r25, Z+3	; 0x03
    1b5c:	a4 81       	ldd	r26, Z+4	; 0x04
    1b5e:	b5 81       	ldd	r27, Z+5	; 0x05
    1b60:	8c 19       	sub	r24, r12
    1b62:	9d 09       	sbc	r25, r13
    1b64:	ae 09       	sbc	r26, r14
    1b66:	bf 09       	sbc	r27, r15
    1b68:	18 16       	cp	r1, r24
    1b6a:	19 06       	cpc	r1, r25
    1b6c:	1a 06       	cpc	r1, r26
    1b6e:	1b 06       	cpc	r1, r27
    1b70:	2c f7       	brge	.-54     	; 0x1b3c <__vector_7+0xae>
    1b72:	21 c0       	rjmp	.+66     	; 0x1bb6 <__vector_7+0x128>
    1b74:	9c 01       	movw	r18, r24
    1b76:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b7a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b7e:	84 1b       	sub	r24, r20
    1b80:	95 0b       	sbc	r25, r21
    1b82:	01 97       	sbiw	r24, 0x01	; 1
    1b84:	31 f4       	brne	.+12     	; 0x1b92 <__vector_7+0x104>
    1b86:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1b8a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1b8e:	2f 5f       	subi	r18, 0xFF	; 255
    1b90:	3f 4f       	sbci	r19, 0xFF	; 255
    1b92:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1b96:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1b9a:	ef e6       	ldi	r30, 0x6F	; 111
    1b9c:	f0 e0       	ldi	r31, 0x00	; 0
    1b9e:	80 81       	ld	r24, Z
    1ba0:	82 60       	ori	r24, 0x02	; 2
    1ba2:	80 83       	st	Z, r24
    1ba4:	05 c0       	rjmp	.+10     	; 0x1bb0 <__vector_7+0x122>
    1ba6:	ef e6       	ldi	r30, 0x6F	; 111
    1ba8:	f0 e0       	ldi	r31, 0x00	; 0
    1baa:	80 81       	ld	r24, Z
    1bac:	8d 7f       	andi	r24, 0xFD	; 253
    1bae:	80 83       	st	Z, r24
    1bb0:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    1bb4:	0c c0       	rjmp	.+24     	; 0x1bce <__vector_7+0x140>
    1bb6:	82 81       	ldd	r24, Z+2	; 0x02
    1bb8:	93 81       	ldd	r25, Z+3	; 0x03
    1bba:	a4 81       	ldd	r26, Z+4	; 0x04
    1bbc:	b5 81       	ldd	r27, Z+5	; 0x05
    1bbe:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1bc2:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    1bc6:	2a 17       	cp	r18, r26
    1bc8:	3b 07       	cpc	r19, r27
    1bca:	69 f7       	brne	.-38     	; 0x1ba6 <__vector_7+0x118>
    1bcc:	d3 cf       	rjmp	.-90     	; 0x1b74 <__vector_7+0xe6>
    1bce:	ff 91       	pop	r31
    1bd0:	ef 91       	pop	r30
    1bd2:	bf 91       	pop	r27
    1bd4:	af 91       	pop	r26
    1bd6:	9f 91       	pop	r25
    1bd8:	8f 91       	pop	r24
    1bda:	7f 91       	pop	r23
    1bdc:	6f 91       	pop	r22
    1bde:	5f 91       	pop	r21
    1be0:	4f 91       	pop	r20
    1be2:	3f 91       	pop	r19
    1be4:	2f 91       	pop	r18
    1be6:	ff 90       	pop	r15
    1be8:	ef 90       	pop	r14
    1bea:	df 90       	pop	r13
    1bec:	cf 90       	pop	r12
    1bee:	0f 90       	pop	r0
    1bf0:	0f be       	out	0x3f, r0	; 63
    1bf2:	0f 90       	pop	r0
    1bf4:	1f 90       	pop	r1
    1bf6:	18 95       	reti

00001bf8 <async>:
    1bf8:	3f 92       	push	r3
    1bfa:	4f 92       	push	r4
    1bfc:	5f 92       	push	r5
    1bfe:	6f 92       	push	r6
    1c00:	7f 92       	push	r7
    1c02:	8f 92       	push	r8
    1c04:	9f 92       	push	r9
    1c06:	af 92       	push	r10
    1c08:	bf 92       	push	r11
    1c0a:	cf 92       	push	r12
    1c0c:	df 92       	push	r13
    1c0e:	ef 92       	push	r14
    1c10:	ff 92       	push	r15
    1c12:	0f 93       	push	r16
    1c14:	1f 93       	push	r17
    1c16:	cf 93       	push	r28
    1c18:	df 93       	push	r29
    1c1a:	2b 01       	movw	r4, r22
    1c1c:	3c 01       	movw	r6, r24
    1c1e:	49 01       	movw	r8, r18
    1c20:	5a 01       	movw	r10, r20
    1c22:	8f b7       	in	r24, 0x3f	; 63
    1c24:	80 78       	andi	r24, 0x80	; 128
    1c26:	38 2e       	mov	r3, r24
    1c28:	f8 94       	cli
    1c2a:	80 e3       	ldi	r24, 0x30	; 48
    1c2c:	91 e0       	ldi	r25, 0x01	; 1
    1c2e:	0e 94 de 0c 	call	0x19bc	; 0x19bc <dequeue>
    1c32:	ec 01       	movw	r28, r24
    1c34:	1b 87       	std	Y+11, r17	; 0x0b
    1c36:	0a 87       	std	Y+10, r16	; 0x0a
    1c38:	fd 86       	std	Y+13, r15	; 0x0d
    1c3a:	ec 86       	std	Y+12, r14	; 0x0c
    1c3c:	df 86       	std	Y+15, r13	; 0x0f
    1c3e:	ce 86       	std	Y+14, r12	; 0x0e
    1c40:	33 20       	and	r3, r3
    1c42:	61 f0       	breq	.+24     	; 0x1c5c <async+0x64>
    1c44:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <current>
    1c48:	f0 91 2b 01 	lds	r31, 0x012B	; 0x80012b <current+0x1>
    1c4c:	02 80       	ldd	r0, Z+2	; 0x02
    1c4e:	f3 81       	ldd	r31, Z+3	; 0x03
    1c50:	e0 2d       	mov	r30, r0
    1c52:	82 81       	ldd	r24, Z+2	; 0x02
    1c54:	93 81       	ldd	r25, Z+3	; 0x03
    1c56:	a4 81       	ldd	r26, Z+4	; 0x04
    1c58:	b5 81       	ldd	r27, Z+5	; 0x05
    1c5a:	08 c0       	rjmp	.+16     	; 0x1c6c <async+0x74>
    1c5c:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <timestamp>
    1c60:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <timestamp+0x1>
    1c64:	a0 91 3e 01 	lds	r26, 0x013E	; 0x80013e <timestamp+0x2>
    1c68:	b0 91 3f 01 	lds	r27, 0x013F	; 0x80013f <timestamp+0x3>
    1c6c:	48 0e       	add	r4, r24
    1c6e:	59 1e       	adc	r5, r25
    1c70:	6a 1e       	adc	r6, r26
    1c72:	7b 1e       	adc	r7, r27
    1c74:	4a 82       	std	Y+2, r4	; 0x02
    1c76:	5b 82       	std	Y+3, r5	; 0x03
    1c78:	6c 82       	std	Y+4, r6	; 0x04
    1c7a:	7d 82       	std	Y+5, r7	; 0x05
    1c7c:	18 14       	cp	r1, r8
    1c7e:	19 04       	cpc	r1, r9
    1c80:	1a 04       	cpc	r1, r10
    1c82:	1b 04       	cpc	r1, r11
    1c84:	44 f0       	brlt	.+16     	; 0x1c96 <async+0x9e>
    1c86:	0f 2e       	mov	r0, r31
    1c88:	88 24       	eor	r8, r8
    1c8a:	8a 94       	dec	r8
    1c8c:	98 2c       	mov	r9, r8
    1c8e:	a8 2c       	mov	r10, r8
    1c90:	ff e7       	ldi	r31, 0x7F	; 127
    1c92:	bf 2e       	mov	r11, r31
    1c94:	f0 2d       	mov	r31, r0
    1c96:	84 0c       	add	r8, r4
    1c98:	95 1c       	adc	r9, r5
    1c9a:	a6 1c       	adc	r10, r6
    1c9c:	b7 1c       	adc	r11, r7
    1c9e:	8e 82       	std	Y+6, r8	; 0x06
    1ca0:	9f 82       	std	Y+7, r9	; 0x07
    1ca2:	a8 86       	std	Y+8, r10	; 0x08
    1ca4:	b9 86       	std	Y+9, r11	; 0x09
    1ca6:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1caa:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1cae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1cb2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1cb6:	b0 99       	sbic	0x16, 0	; 22
    1cb8:	0e c0       	rjmp	.+28     	; 0x1cd6 <async+0xde>
    1cba:	09 2e       	mov	r0, r25
    1cbc:	00 0c       	add	r0, r0
    1cbe:	aa 0b       	sbc	r26, r26
    1cc0:	bb 0b       	sbc	r27, r27
    1cc2:	dc 01       	movw	r26, r24
    1cc4:	99 27       	eor	r25, r25
    1cc6:	88 27       	eor	r24, r24
    1cc8:	60 e0       	ldi	r22, 0x00	; 0
    1cca:	70 e0       	ldi	r23, 0x00	; 0
    1ccc:	84 2b       	or	r24, r20
    1cce:	95 2b       	or	r25, r21
    1cd0:	a6 2b       	or	r26, r22
    1cd2:	b7 2b       	or	r27, r23
    1cd4:	13 c0       	rjmp	.+38     	; 0x1cfc <async+0x104>
    1cd6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1cda:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1cde:	01 96       	adiw	r24, 0x01	; 1
    1ce0:	09 2e       	mov	r0, r25
    1ce2:	00 0c       	add	r0, r0
    1ce4:	aa 0b       	sbc	r26, r26
    1ce6:	bb 0b       	sbc	r27, r27
    1ce8:	dc 01       	movw	r26, r24
    1cea:	99 27       	eor	r25, r25
    1cec:	88 27       	eor	r24, r24
    1cee:	a9 01       	movw	r20, r18
    1cf0:	60 e0       	ldi	r22, 0x00	; 0
    1cf2:	70 e0       	ldi	r23, 0x00	; 0
    1cf4:	84 2b       	or	r24, r20
    1cf6:	95 2b       	or	r25, r21
    1cf8:	a6 2b       	or	r26, r22
    1cfa:	b7 2b       	or	r27, r23
    1cfc:	48 1a       	sub	r4, r24
    1cfe:	59 0a       	sbc	r5, r25
    1d00:	6a 0a       	sbc	r6, r26
    1d02:	7b 0a       	sbc	r7, r27
    1d04:	14 14       	cp	r1, r4
    1d06:	15 04       	cpc	r1, r5
    1d08:	16 04       	cpc	r1, r6
    1d0a:	17 04       	cpc	r1, r7
    1d0c:	ac f5       	brge	.+106    	; 0x1d78 <async+0x180>
    1d0e:	60 e4       	ldi	r22, 0x40	; 64
    1d10:	71 e0       	ldi	r23, 0x01	; 1
    1d12:	ce 01       	movw	r24, r28
    1d14:	0e 94 9b 0c 	call	0x1936	; 0x1936 <enqueueByBaseline>
    1d18:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <timerQ>
    1d1c:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <timerQ+0x1>
    1d20:	30 97       	sbiw	r30, 0x00	; 0
    1d22:	21 f1       	breq	.+72     	; 0x1d6c <async+0x174>
    1d24:	82 81       	ldd	r24, Z+2	; 0x02
    1d26:	93 81       	ldd	r25, Z+3	; 0x03
    1d28:	a4 81       	ldd	r26, Z+4	; 0x04
    1d2a:	b5 81       	ldd	r27, Z+5	; 0x05
    1d2c:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1d30:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    1d34:	2a 17       	cp	r18, r26
    1d36:	3b 07       	cpc	r19, r27
    1d38:	c9 f4       	brne	.+50     	; 0x1d6c <async+0x174>
    1d3a:	9c 01       	movw	r18, r24
    1d3c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1d40:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1d44:	84 1b       	sub	r24, r20
    1d46:	95 0b       	sbc	r25, r21
    1d48:	01 97       	sbiw	r24, 0x01	; 1
    1d4a:	31 f4       	brne	.+12     	; 0x1d58 <async+0x160>
    1d4c:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1d50:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1d54:	2f 5f       	subi	r18, 0xFF	; 255
    1d56:	3f 4f       	sbci	r19, 0xFF	; 255
    1d58:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1d5c:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1d60:	ef e6       	ldi	r30, 0x6F	; 111
    1d62:	f0 e0       	ldi	r31, 0x00	; 0
    1d64:	80 81       	ld	r24, Z
    1d66:	82 60       	ori	r24, 0x02	; 2
    1d68:	80 83       	st	Z, r24
    1d6a:	41 c0       	rjmp	.+130    	; 0x1dee <async+0x1f6>
    1d6c:	ef e6       	ldi	r30, 0x6F	; 111
    1d6e:	f0 e0       	ldi	r31, 0x00	; 0
    1d70:	80 81       	ld	r24, Z
    1d72:	8d 7f       	andi	r24, 0xFD	; 253
    1d74:	80 83       	st	Z, r24
    1d76:	3b c0       	rjmp	.+118    	; 0x1dee <async+0x1f6>
    1d78:	62 e4       	ldi	r22, 0x42	; 66
    1d7a:	71 e0       	ldi	r23, 0x01	; 1
    1d7c:	ce 01       	movw	r24, r28
    1d7e:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <enqueueByDeadline>
    1d82:	33 20       	and	r3, r3
    1d84:	b9 f1       	breq	.+110    	; 0x1df4 <async+0x1fc>
    1d86:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <threadPool>
    1d8a:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <threadPool+0x1>
    1d8e:	00 97       	sbiw	r24, 0x00	; 0
    1d90:	81 f1       	breq	.+96     	; 0x1df2 <async+0x1fa>
    1d92:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <activeStack>
    1d96:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <activeStack+0x1>
    1d9a:	20 91 42 01 	lds	r18, 0x0142	; 0x800142 <msgQ>
    1d9e:	30 91 43 01 	lds	r19, 0x0143	; 0x800143 <msgQ+0x1>
    1da2:	02 81       	ldd	r16, Z+2	; 0x02
    1da4:	13 81       	ldd	r17, Z+3	; 0x03
    1da6:	d9 01       	movw	r26, r18
    1da8:	16 96       	adiw	r26, 0x06	; 6
    1daa:	4d 91       	ld	r20, X+
    1dac:	5d 91       	ld	r21, X+
    1dae:	6d 91       	ld	r22, X+
    1db0:	7c 91       	ld	r23, X
    1db2:	19 97       	sbiw	r26, 0x09	; 9
    1db4:	d8 01       	movw	r26, r16
    1db6:	16 96       	adiw	r26, 0x06	; 6
    1db8:	0d 91       	ld	r16, X+
    1dba:	1d 91       	ld	r17, X+
    1dbc:	2d 91       	ld	r18, X+
    1dbe:	3c 91       	ld	r19, X
    1dc0:	19 97       	sbiw	r26, 0x09	; 9
    1dc2:	40 1b       	sub	r20, r16
    1dc4:	51 0b       	sbc	r21, r17
    1dc6:	62 0b       	sbc	r22, r18
    1dc8:	73 0b       	sbc	r23, r19
    1dca:	9a f4       	brpl	.+38     	; 0x1df2 <async+0x1fa>
    1dcc:	dc 01       	movw	r26, r24
    1dce:	2d 91       	ld	r18, X+
    1dd0:	3c 91       	ld	r19, X
    1dd2:	11 97       	sbiw	r26, 0x01	; 1
    1dd4:	30 93 2f 01 	sts	0x012F, r19	; 0x80012f <threadPool+0x1>
    1dd8:	20 93 2e 01 	sts	0x012E, r18	; 0x80012e <threadPool>
    1ddc:	ed 93       	st	X+, r30
    1dde:	fc 93       	st	X, r31
    1de0:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <activeStack+0x1>
    1de4:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <activeStack>
    1de8:	0e 94 65 04 	call	0x8ca	; 0x8ca <dispatch>
    1dec:	02 c0       	rjmp	.+4      	; 0x1df2 <async+0x1fa>
    1dee:	33 20       	and	r3, r3
    1df0:	09 f0       	breq	.+2      	; 0x1df4 <async+0x1fc>
    1df2:	78 94       	sei
    1df4:	ce 01       	movw	r24, r28
    1df6:	df 91       	pop	r29
    1df8:	cf 91       	pop	r28
    1dfa:	1f 91       	pop	r17
    1dfc:	0f 91       	pop	r16
    1dfe:	ff 90       	pop	r15
    1e00:	ef 90       	pop	r14
    1e02:	df 90       	pop	r13
    1e04:	cf 90       	pop	r12
    1e06:	bf 90       	pop	r11
    1e08:	af 90       	pop	r10
    1e0a:	9f 90       	pop	r9
    1e0c:	8f 90       	pop	r8
    1e0e:	7f 90       	pop	r7
    1e10:	6f 90       	pop	r6
    1e12:	5f 90       	pop	r5
    1e14:	4f 90       	pop	r4
    1e16:	3f 90       	pop	r3
    1e18:	08 95       	ret

00001e1a <sync>:
    1e1a:	af 92       	push	r10
    1e1c:	bf 92       	push	r11
    1e1e:	cf 92       	push	r12
    1e20:	df 92       	push	r13
    1e22:	ff 92       	push	r15
    1e24:	0f 93       	push	r16
    1e26:	1f 93       	push	r17
    1e28:	cf 93       	push	r28
    1e2a:	df 93       	push	r29
    1e2c:	8c 01       	movw	r16, r24
    1e2e:	6b 01       	movw	r12, r22
    1e30:	5a 01       	movw	r10, r20
    1e32:	8f b7       	in	r24, 0x3f	; 63
    1e34:	80 78       	andi	r24, 0x80	; 128
    1e36:	f8 2e       	mov	r15, r24
    1e38:	f8 94       	cli
    1e3a:	d8 01       	movw	r26, r16
    1e3c:	cd 91       	ld	r28, X+
    1e3e:	dc 91       	ld	r29, X
    1e40:	20 97       	sbiw	r28, 0x00	; 0
    1e42:	71 f1       	breq	.+92     	; 0x1ea0 <sync+0x86>
    1e44:	ac 81       	ldd	r26, Y+4	; 0x04
    1e46:	bd 81       	ldd	r27, Y+5	; 0x05
    1e48:	10 97       	sbiw	r26, 0x00	; 0
    1e4a:	31 f0       	breq	.+12     	; 0x1e58 <sync+0x3e>
    1e4c:	cd 91       	ld	r28, X+
    1e4e:	dc 91       	ld	r29, X
    1e50:	ac 81       	ldd	r26, Y+4	; 0x04
    1e52:	bd 81       	ldd	r27, Y+5	; 0x05
    1e54:	10 97       	sbiw	r26, 0x00	; 0
    1e56:	d1 f7       	brne	.-12     	; 0x1e4c <sync+0x32>
    1e58:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <current>
    1e5c:	f0 91 2b 01 	lds	r31, 0x012B	; 0x80012b <current+0x1>
    1e60:	ce 17       	cp	r28, r30
    1e62:	df 07       	cpc	r29, r31
    1e64:	21 f0       	breq	.+8      	; 0x1e6e <sync+0x54>
    1e66:	ff 20       	and	r15, r15
    1e68:	09 f4       	brne	.+2      	; 0x1e6c <sync+0x52>
    1e6a:	4d c0       	rjmp	.+154    	; 0x1f06 <sync+0xec>
    1e6c:	07 c0       	rjmp	.+14     	; 0x1e7c <sync+0x62>
    1e6e:	ff 20       	and	r15, r15
    1e70:	09 f4       	brne	.+2      	; 0x1e74 <sync+0x5a>
    1e72:	4c c0       	rjmp	.+152    	; 0x1f0c <sync+0xf2>
    1e74:	78 94       	sei
    1e76:	8f ef       	ldi	r24, 0xFF	; 255
    1e78:	9f ef       	ldi	r25, 0xFF	; 255
    1e7a:	66 c0       	rjmp	.+204    	; 0x1f48 <sync+0x12e>
    1e7c:	d8 01       	movw	r26, r16
    1e7e:	12 96       	adiw	r26, 0x02	; 2
    1e80:	8d 91       	ld	r24, X+
    1e82:	9c 91       	ld	r25, X
    1e84:	13 97       	sbiw	r26, 0x03	; 3
    1e86:	00 97       	sbiw	r24, 0x00	; 0
    1e88:	09 f4       	brne	.+2      	; 0x1e8c <sync+0x72>
    1e8a:	46 c0       	rjmp	.+140    	; 0x1f18 <sync+0xfe>
    1e8c:	dc 01       	movw	r26, r24
    1e8e:	15 96       	adiw	r26, 0x05	; 5
    1e90:	1c 92       	st	X, r1
    1e92:	1e 92       	st	-X, r1
    1e94:	14 97       	sbiw	r26, 0x04	; 4
    1e96:	40 c0       	rjmp	.+128    	; 0x1f18 <sync+0xfe>
    1e98:	78 94       	sei
    1e9a:	80 e0       	ldi	r24, 0x00	; 0
    1e9c:	90 e0       	ldi	r25, 0x00	; 0
    1e9e:	54 c0       	rjmp	.+168    	; 0x1f48 <sync+0x12e>
    1ea0:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <current>
    1ea4:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <current+0x1>
    1ea8:	f8 01       	movw	r30, r16
    1eaa:	91 83       	std	Z+1, r25	; 0x01
    1eac:	80 83       	st	Z, r24
    1eae:	ff 20       	and	r15, r15
    1eb0:	41 f0       	breq	.+16     	; 0x1ec2 <sync+0xa8>
    1eb2:	d8 01       	movw	r26, r16
    1eb4:	12 96       	adiw	r26, 0x02	; 2
    1eb6:	8d 91       	ld	r24, X+
    1eb8:	9c 91       	ld	r25, X
    1eba:	13 97       	sbiw	r26, 0x03	; 3
    1ebc:	01 97       	sbiw	r24, 0x01	; 1
    1ebe:	09 f0       	breq	.+2      	; 0x1ec2 <sync+0xa8>
    1ec0:	78 94       	sei
    1ec2:	b5 01       	movw	r22, r10
    1ec4:	c8 01       	movw	r24, r16
    1ec6:	f6 01       	movw	r30, r12
    1ec8:	09 95       	icall
    1eca:	d8 2f       	mov	r29, r24
    1ecc:	c9 2f       	mov	r28, r25
    1ece:	8f b7       	in	r24, 0x3f	; 63
    1ed0:	f8 94       	cli
    1ed2:	d8 01       	movw	r26, r16
    1ed4:	11 96       	adiw	r26, 0x01	; 1
    1ed6:	1c 92       	st	X, r1
    1ed8:	1e 92       	st	-X, r1
    1eda:	12 96       	adiw	r26, 0x02	; 2
    1edc:	8d 91       	ld	r24, X+
    1ede:	9c 91       	ld	r25, X
    1ee0:	13 97       	sbiw	r26, 0x03	; 3
    1ee2:	82 30       	cpi	r24, 0x02	; 2
    1ee4:	91 05       	cpc	r25, r1
    1ee6:	48 f0       	brcs	.+18     	; 0x1efa <sync+0xe0>
    1ee8:	13 96       	adiw	r26, 0x03	; 3
    1eea:	1c 92       	st	X, r1
    1eec:	1e 92       	st	-X, r1
    1eee:	12 97       	sbiw	r26, 0x02	; 2
    1ef0:	fc 01       	movw	r30, r24
    1ef2:	15 82       	std	Z+5, r1	; 0x05
    1ef4:	14 82       	std	Z+4, r1	; 0x04
    1ef6:	0e 94 65 04 	call	0x8ca	; 0x8ca <dispatch>
    1efa:	ff 20       	and	r15, r15
    1efc:	51 f0       	breq	.+20     	; 0x1f12 <sync+0xf8>
    1efe:	78 94       	sei
    1f00:	8d 2f       	mov	r24, r29
    1f02:	9c 2f       	mov	r25, r28
    1f04:	21 c0       	rjmp	.+66     	; 0x1f48 <sync+0x12e>
    1f06:	8f ef       	ldi	r24, 0xFF	; 255
    1f08:	9f ef       	ldi	r25, 0xFF	; 255
    1f0a:	1e c0       	rjmp	.+60     	; 0x1f48 <sync+0x12e>
    1f0c:	8f ef       	ldi	r24, 0xFF	; 255
    1f0e:	9f ef       	ldi	r25, 0xFF	; 255
    1f10:	1b c0       	rjmp	.+54     	; 0x1f48 <sync+0x12e>
    1f12:	8d 2f       	mov	r24, r29
    1f14:	9c 2f       	mov	r25, r28
    1f16:	18 c0       	rjmp	.+48     	; 0x1f48 <sync+0x12e>
    1f18:	d8 01       	movw	r26, r16
    1f1a:	13 96       	adiw	r26, 0x03	; 3
    1f1c:	fc 93       	st	X, r31
    1f1e:	ee 93       	st	-X, r30
    1f20:	12 97       	sbiw	r26, 0x02	; 2
    1f22:	15 83       	std	Z+5, r17	; 0x05
    1f24:	04 83       	std	Z+4, r16	; 0x04
    1f26:	ce 01       	movw	r24, r28
    1f28:	0e 94 65 04 	call	0x8ca	; 0x8ca <dispatch>
    1f2c:	e0 91 2a 01 	lds	r30, 0x012A	; 0x80012a <current>
    1f30:	f0 91 2b 01 	lds	r31, 0x012B	; 0x80012b <current+0x1>
    1f34:	82 81       	ldd	r24, Z+2	; 0x02
    1f36:	93 81       	ldd	r25, Z+3	; 0x03
    1f38:	89 2b       	or	r24, r25
    1f3a:	09 f4       	brne	.+2      	; 0x1f3e <sync+0x124>
    1f3c:	ad cf       	rjmp	.-166    	; 0x1e98 <sync+0x7e>
    1f3e:	cf 01       	movw	r24, r30
    1f40:	f8 01       	movw	r30, r16
    1f42:	91 83       	std	Z+1, r25	; 0x01
    1f44:	80 83       	st	Z, r24
    1f46:	b5 cf       	rjmp	.-150    	; 0x1eb2 <sync+0x98>
    1f48:	df 91       	pop	r29
    1f4a:	cf 91       	pop	r28
    1f4c:	1f 91       	pop	r17
    1f4e:	0f 91       	pop	r16
    1f50:	ff 90       	pop	r15
    1f52:	df 90       	pop	r13
    1f54:	cf 90       	pop	r12
    1f56:	bf 90       	pop	r11
    1f58:	af 90       	pop	r10
    1f5a:	08 95       	ret

00001f5c <run>:
    1f5c:	00 91 2a 01 	lds	r16, 0x012A	; 0x80012a <current>
    1f60:	10 91 2b 01 	lds	r17, 0x012B	; 0x80012b <current+0x1>
    1f64:	82 e4       	ldi	r24, 0x42	; 66
    1f66:	91 e0       	ldi	r25, 0x01	; 1
    1f68:	0e 94 de 0c 	call	0x19bc	; 0x19bc <dequeue>
    1f6c:	ec 01       	movw	r28, r24
    1f6e:	d8 01       	movw	r26, r16
    1f70:	13 96       	adiw	r26, 0x03	; 3
    1f72:	9c 93       	st	X, r25
    1f74:	8e 93       	st	-X, r24
    1f76:	12 97       	sbiw	r26, 0x02	; 2
    1f78:	78 94       	sei
    1f7a:	4e 85       	ldd	r20, Y+14	; 0x0e
    1f7c:	5f 85       	ldd	r21, Y+15	; 0x0f
    1f7e:	6c 85       	ldd	r22, Y+12	; 0x0c
    1f80:	7d 85       	ldd	r23, Y+13	; 0x0d
    1f82:	8a 85       	ldd	r24, Y+10	; 0x0a
    1f84:	9b 85       	ldd	r25, Y+11	; 0x0b
    1f86:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <sync>
    1f8a:	8f b7       	in	r24, 0x3f	; 63
    1f8c:	f8 94       	cli
    1f8e:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <msgPool>
    1f92:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <msgPool+0x1>
    1f96:	99 83       	std	Y+1, r25	; 0x01
    1f98:	88 83       	st	Y, r24
    1f9a:	d0 93 31 01 	sts	0x0131, r29	; 0x800131 <msgPool+0x1>
    1f9e:	c0 93 30 01 	sts	0x0130, r28	; 0x800130 <msgPool>
    1fa2:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <activeStack>
    1fa6:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <activeStack+0x1>
    1faa:	00 81       	ld	r16, Z
    1fac:	11 81       	ldd	r17, Z+1	; 0x01
    1fae:	e8 01       	movw	r28, r16
    1fb0:	2a 81       	ldd	r18, Y+2	; 0x02
    1fb2:	3b 81       	ldd	r19, Y+3	; 0x03
    1fb4:	a0 91 42 01 	lds	r26, 0x0142	; 0x800142 <msgQ>
    1fb8:	b0 91 43 01 	lds	r27, 0x0143	; 0x800143 <msgQ+0x1>
    1fbc:	10 97       	sbiw	r26, 0x00	; 0
    1fbe:	c1 f0       	breq	.+48     	; 0x1ff0 <run+0x94>
    1fc0:	21 15       	cp	r18, r1
    1fc2:	31 05       	cpc	r19, r1
    1fc4:	59 f2       	breq	.-106    	; 0x1f5c <run>
    1fc6:	16 96       	adiw	r26, 0x06	; 6
    1fc8:	8d 91       	ld	r24, X+
    1fca:	9d 91       	ld	r25, X+
    1fcc:	0d 90       	ld	r0, X+
    1fce:	bc 91       	ld	r27, X
    1fd0:	a0 2d       	mov	r26, r0
    1fd2:	e9 01       	movw	r28, r18
    1fd4:	4e 81       	ldd	r20, Y+6	; 0x06
    1fd6:	5f 81       	ldd	r21, Y+7	; 0x07
    1fd8:	68 85       	ldd	r22, Y+8	; 0x08
    1fda:	79 85       	ldd	r23, Y+9	; 0x09
    1fdc:	84 1b       	sub	r24, r20
    1fde:	95 0b       	sbc	r25, r21
    1fe0:	a6 0b       	sbc	r26, r22
    1fe2:	b7 0b       	sbc	r27, r23
    1fe4:	18 16       	cp	r1, r24
    1fe6:	19 06       	cpc	r1, r25
    1fe8:	1a 06       	cpc	r1, r26
    1fea:	1b 06       	cpc	r1, r27
    1fec:	0c f0       	brlt	.+2      	; 0x1ff0 <run+0x94>
    1fee:	b6 cf       	rjmp	.-148    	; 0x1f5c <run>
    1ff0:	10 93 2d 01 	sts	0x012D, r17	; 0x80012d <activeStack+0x1>
    1ff4:	00 93 2c 01 	sts	0x012C, r16	; 0x80012c <activeStack>
    1ff8:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <threadPool>
    1ffc:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <threadPool+0x1>
    2000:	91 83       	std	Z+1, r25	; 0x01
    2002:	80 83       	st	Z, r24
    2004:	f0 93 2f 01 	sts	0x012F, r31	; 0x80012f <threadPool+0x1>
    2008:	e0 93 2e 01 	sts	0x012E, r30	; 0x80012e <threadPool>
    200c:	a0 91 2c 01 	lds	r26, 0x012C	; 0x80012c <activeStack>
    2010:	b0 91 2d 01 	lds	r27, 0x012D	; 0x80012d <activeStack+0x1>
    2014:	14 96       	adiw	r26, 0x04	; 4
    2016:	ed 91       	ld	r30, X+
    2018:	fc 91       	ld	r31, X
    201a:	15 97       	sbiw	r26, 0x05	; 5
    201c:	30 97       	sbiw	r30, 0x00	; 0
    201e:	41 f0       	breq	.+16     	; 0x2030 <run+0xd4>
    2020:	a0 81       	ld	r26, Z
    2022:	b1 81       	ldd	r27, Z+1	; 0x01
    2024:	14 96       	adiw	r26, 0x04	; 4
    2026:	ed 91       	ld	r30, X+
    2028:	fc 91       	ld	r31, X
    202a:	15 97       	sbiw	r26, 0x05	; 5
    202c:	30 97       	sbiw	r30, 0x00	; 0
    202e:	c1 f7       	brne	.-16     	; 0x2020 <run+0xc4>
    2030:	cd 01       	movw	r24, r26
    2032:	0e 94 65 04 	call	0x8ca	; 0x8ca <dispatch>
    2036:	92 cf       	rjmp	.-220    	; 0x1f5c <run>

00002038 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    2038:	42 31       	cpi	r20, 0x12	; 18
    203a:	b8 f4       	brcc	.+46     	; 0x206a <install+0x32>
        char status;
        DISABLE(status);
    203c:	2f b7       	in	r18, 0x3f	; 63
    203e:	f8 94       	cli
        otable[i] = obj;
    2040:	50 e0       	ldi	r21, 0x00	; 0
    2042:	44 0f       	add	r20, r20
    2044:	55 1f       	adc	r21, r21
    2046:	fa 01       	movw	r30, r20
    2048:	ec 5b       	subi	r30, 0xBC	; 188
    204a:	fe 4f       	sbci	r31, 0xFE	; 254
    204c:	91 83       	std	Z+1, r25	; 0x01
    204e:	80 83       	st	Z, r24
        mtable[i] = m;
    2050:	fa 01       	movw	r30, r20
    2052:	e4 52       	subi	r30, 0x24	; 36
    2054:	fe 4f       	sbci	r31, 0xFE	; 254
    2056:	71 83       	std	Z+1, r23	; 0x01
    2058:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    205a:	41 e0       	ldi	r20, 0x01	; 1
    205c:	50 e0       	ldi	r21, 0x00	; 0
    205e:	fc 01       	movw	r30, r24
    2060:	53 83       	std	Z+3, r21	; 0x03
    2062:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    2064:	22 23       	and	r18, r18
    2066:	0c f4       	brge	.+2      	; 0x206a <install+0x32>
    2068:	78 94       	sei
    206a:	08 95       	ret

0000206c <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    206c:	8c 01       	movw	r16, r24
    206e:	eb 01       	movw	r28, r22
    2070:	7a 01       	movw	r14, r20
    char status;
    DISABLE(status);
    2072:	8f b7       	in	r24, 0x3f	; 63
    2074:	f8 94       	cli
    initialize();
    2076:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <initialize>
    ENABLE(1);
    207a:	78 94       	sei
    if (m != NULL)
    207c:	20 97       	sbiw	r28, 0x00	; 0
    207e:	21 f0       	breq	.+8      	; 0x2088 <tinytimber+0x1c>
        m(obj, arg);
    2080:	b7 01       	movw	r22, r14
    2082:	c8 01       	movw	r24, r16
    2084:	fe 01       	movw	r30, r28
    2086:	09 95       	icall
    DISABLE(status);
    2088:	8f b7       	in	r24, 0x3f	; 63
    208a:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    208c:	0e 94 85 04 	call	0x90a	; 0x90a <schedule>
    ENABLE(1);
    2090:	78 94       	sei
    while (1) {
        SLEEP();
    2092:	81 e0       	ldi	r24, 0x01	; 1
    2094:	83 bf       	out	0x33, r24	; 51
    2096:	88 95       	sleep
    2098:	fd cf       	rjmp	.-6      	; 0x2094 <tinytimber+0x28>

0000209a <__divmodhi4>:
    209a:	97 fb       	bst	r25, 7
    209c:	07 2e       	mov	r0, r23
    209e:	16 f4       	brtc	.+4      	; 0x20a4 <__divmodhi4+0xa>
    20a0:	00 94       	com	r0
    20a2:	07 d0       	rcall	.+14     	; 0x20b2 <__divmodhi4_neg1>
    20a4:	77 fd       	sbrc	r23, 7
    20a6:	09 d0       	rcall	.+18     	; 0x20ba <__divmodhi4_neg2>
    20a8:	0e 94 8d 10 	call	0x211a	; 0x211a <__udivmodhi4>
    20ac:	07 fc       	sbrc	r0, 7
    20ae:	05 d0       	rcall	.+10     	; 0x20ba <__divmodhi4_neg2>
    20b0:	3e f4       	brtc	.+14     	; 0x20c0 <__divmodhi4_exit>

000020b2 <__divmodhi4_neg1>:
    20b2:	90 95       	com	r25
    20b4:	81 95       	neg	r24
    20b6:	9f 4f       	sbci	r25, 0xFF	; 255
    20b8:	08 95       	ret

000020ba <__divmodhi4_neg2>:
    20ba:	70 95       	com	r23
    20bc:	61 95       	neg	r22
    20be:	7f 4f       	sbci	r23, 0xFF	; 255

000020c0 <__divmodhi4_exit>:
    20c0:	08 95       	ret

000020c2 <__divmodsi4>:
    20c2:	05 2e       	mov	r0, r21
    20c4:	97 fb       	bst	r25, 7
    20c6:	1e f4       	brtc	.+6      	; 0x20ce <__divmodsi4+0xc>
    20c8:	00 94       	com	r0
    20ca:	0e 94 78 10 	call	0x20f0	; 0x20f0 <__negsi2>
    20ce:	57 fd       	sbrc	r21, 7
    20d0:	07 d0       	rcall	.+14     	; 0x20e0 <__divmodsi4_neg2>
    20d2:	0e 94 a1 10 	call	0x2142	; 0x2142 <__udivmodsi4>
    20d6:	07 fc       	sbrc	r0, 7
    20d8:	03 d0       	rcall	.+6      	; 0x20e0 <__divmodsi4_neg2>
    20da:	4e f4       	brtc	.+18     	; 0x20ee <__divmodsi4_exit>
    20dc:	0c 94 78 10 	jmp	0x20f0	; 0x20f0 <__negsi2>

000020e0 <__divmodsi4_neg2>:
    20e0:	50 95       	com	r21
    20e2:	40 95       	com	r20
    20e4:	30 95       	com	r19
    20e6:	21 95       	neg	r18
    20e8:	3f 4f       	sbci	r19, 0xFF	; 255
    20ea:	4f 4f       	sbci	r20, 0xFF	; 255
    20ec:	5f 4f       	sbci	r21, 0xFF	; 255

000020ee <__divmodsi4_exit>:
    20ee:	08 95       	ret

000020f0 <__negsi2>:
    20f0:	90 95       	com	r25
    20f2:	80 95       	com	r24
    20f4:	70 95       	com	r23
    20f6:	61 95       	neg	r22
    20f8:	7f 4f       	sbci	r23, 0xFF	; 255
    20fa:	8f 4f       	sbci	r24, 0xFF	; 255
    20fc:	9f 4f       	sbci	r25, 0xFF	; 255
    20fe:	08 95       	ret

00002100 <__tablejump2__>:
    2100:	ee 0f       	add	r30, r30
    2102:	ff 1f       	adc	r31, r31
    2104:	05 90       	lpm	r0, Z+
    2106:	f4 91       	lpm	r31, Z
    2108:	e0 2d       	mov	r30, r0
    210a:	09 94       	ijmp

0000210c <__usmulhisi3>:
    210c:	0e 94 c3 10 	call	0x2186	; 0x2186 <__umulhisi3>

00002110 <__usmulhisi3_tail>:
    2110:	b7 ff       	sbrs	r27, 7
    2112:	08 95       	ret
    2114:	82 1b       	sub	r24, r18
    2116:	93 0b       	sbc	r25, r19
    2118:	08 95       	ret

0000211a <__udivmodhi4>:
    211a:	aa 1b       	sub	r26, r26
    211c:	bb 1b       	sub	r27, r27
    211e:	51 e1       	ldi	r21, 0x11	; 17
    2120:	07 c0       	rjmp	.+14     	; 0x2130 <__udivmodhi4_ep>

00002122 <__udivmodhi4_loop>:
    2122:	aa 1f       	adc	r26, r26
    2124:	bb 1f       	adc	r27, r27
    2126:	a6 17       	cp	r26, r22
    2128:	b7 07       	cpc	r27, r23
    212a:	10 f0       	brcs	.+4      	; 0x2130 <__udivmodhi4_ep>
    212c:	a6 1b       	sub	r26, r22
    212e:	b7 0b       	sbc	r27, r23

00002130 <__udivmodhi4_ep>:
    2130:	88 1f       	adc	r24, r24
    2132:	99 1f       	adc	r25, r25
    2134:	5a 95       	dec	r21
    2136:	a9 f7       	brne	.-22     	; 0x2122 <__udivmodhi4_loop>
    2138:	80 95       	com	r24
    213a:	90 95       	com	r25
    213c:	bc 01       	movw	r22, r24
    213e:	cd 01       	movw	r24, r26
    2140:	08 95       	ret

00002142 <__udivmodsi4>:
    2142:	a1 e2       	ldi	r26, 0x21	; 33
    2144:	1a 2e       	mov	r1, r26
    2146:	aa 1b       	sub	r26, r26
    2148:	bb 1b       	sub	r27, r27
    214a:	fd 01       	movw	r30, r26
    214c:	0d c0       	rjmp	.+26     	; 0x2168 <__udivmodsi4_ep>

0000214e <__udivmodsi4_loop>:
    214e:	aa 1f       	adc	r26, r26
    2150:	bb 1f       	adc	r27, r27
    2152:	ee 1f       	adc	r30, r30
    2154:	ff 1f       	adc	r31, r31
    2156:	a2 17       	cp	r26, r18
    2158:	b3 07       	cpc	r27, r19
    215a:	e4 07       	cpc	r30, r20
    215c:	f5 07       	cpc	r31, r21
    215e:	20 f0       	brcs	.+8      	; 0x2168 <__udivmodsi4_ep>
    2160:	a2 1b       	sub	r26, r18
    2162:	b3 0b       	sbc	r27, r19
    2164:	e4 0b       	sbc	r30, r20
    2166:	f5 0b       	sbc	r31, r21

00002168 <__udivmodsi4_ep>:
    2168:	66 1f       	adc	r22, r22
    216a:	77 1f       	adc	r23, r23
    216c:	88 1f       	adc	r24, r24
    216e:	99 1f       	adc	r25, r25
    2170:	1a 94       	dec	r1
    2172:	69 f7       	brne	.-38     	; 0x214e <__udivmodsi4_loop>
    2174:	60 95       	com	r22
    2176:	70 95       	com	r23
    2178:	80 95       	com	r24
    217a:	90 95       	com	r25
    217c:	9b 01       	movw	r18, r22
    217e:	ac 01       	movw	r20, r24
    2180:	bd 01       	movw	r22, r26
    2182:	cf 01       	movw	r24, r30
    2184:	08 95       	ret

00002186 <__umulhisi3>:
    2186:	a2 9f       	mul	r26, r18
    2188:	b0 01       	movw	r22, r0
    218a:	b3 9f       	mul	r27, r19
    218c:	c0 01       	movw	r24, r0
    218e:	a3 9f       	mul	r26, r19
    2190:	70 0d       	add	r23, r0
    2192:	81 1d       	adc	r24, r1
    2194:	11 24       	eor	r1, r1
    2196:	91 1d       	adc	r25, r1
    2198:	b2 9f       	mul	r27, r18
    219a:	70 0d       	add	r23, r0
    219c:	81 1d       	adc	r24, r1
    219e:	11 24       	eor	r1, r1
    21a0:	91 1d       	adc	r25, r1
    21a2:	08 95       	ret

000021a4 <setjmp>:
    21a4:	dc 01       	movw	r26, r24
    21a6:	2d 92       	st	X+, r2
    21a8:	3d 92       	st	X+, r3
    21aa:	4d 92       	st	X+, r4
    21ac:	5d 92       	st	X+, r5
    21ae:	6d 92       	st	X+, r6
    21b0:	7d 92       	st	X+, r7
    21b2:	8d 92       	st	X+, r8
    21b4:	9d 92       	st	X+, r9
    21b6:	ad 92       	st	X+, r10
    21b8:	bd 92       	st	X+, r11
    21ba:	cd 92       	st	X+, r12
    21bc:	dd 92       	st	X+, r13
    21be:	ed 92       	st	X+, r14
    21c0:	fd 92       	st	X+, r15
    21c2:	0d 93       	st	X+, r16
    21c4:	1d 93       	st	X+, r17
    21c6:	cd 93       	st	X+, r28
    21c8:	dd 93       	st	X+, r29
    21ca:	ff 91       	pop	r31
    21cc:	ef 91       	pop	r30
    21ce:	8d b7       	in	r24, 0x3d	; 61
    21d0:	8d 93       	st	X+, r24
    21d2:	8e b7       	in	r24, 0x3e	; 62
    21d4:	8d 93       	st	X+, r24
    21d6:	8f b7       	in	r24, 0x3f	; 63
    21d8:	8d 93       	st	X+, r24
    21da:	ed 93       	st	X+, r30
    21dc:	fd 93       	st	X+, r31
    21de:	88 27       	eor	r24, r24
    21e0:	99 27       	eor	r25, r25
    21e2:	09 94       	ijmp

000021e4 <longjmp>:
    21e4:	dc 01       	movw	r26, r24
    21e6:	cb 01       	movw	r24, r22
    21e8:	81 30       	cpi	r24, 0x01	; 1
    21ea:	91 05       	cpc	r25, r1
    21ec:	81 1d       	adc	r24, r1
    21ee:	2d 90       	ld	r2, X+
    21f0:	3d 90       	ld	r3, X+
    21f2:	4d 90       	ld	r4, X+
    21f4:	5d 90       	ld	r5, X+
    21f6:	6d 90       	ld	r6, X+
    21f8:	7d 90       	ld	r7, X+
    21fa:	8d 90       	ld	r8, X+
    21fc:	9d 90       	ld	r9, X+
    21fe:	ad 90       	ld	r10, X+
    2200:	bd 90       	ld	r11, X+
    2202:	cd 90       	ld	r12, X+
    2204:	dd 90       	ld	r13, X+
    2206:	ed 90       	ld	r14, X+
    2208:	fd 90       	ld	r15, X+
    220a:	0d 91       	ld	r16, X+
    220c:	1d 91       	ld	r17, X+
    220e:	cd 91       	ld	r28, X+
    2210:	dd 91       	ld	r29, X+
    2212:	ed 91       	ld	r30, X+
    2214:	fd 91       	ld	r31, X+
    2216:	0d 90       	ld	r0, X+
    2218:	f8 94       	cli
    221a:	fe bf       	out	0x3e, r31	; 62
    221c:	0f be       	out	0x3f, r0	; 63
    221e:	ed bf       	out	0x3d, r30	; 61
    2220:	ed 91       	ld	r30, X+
    2222:	fd 91       	ld	r31, X+
    2224:	09 94       	ijmp

00002226 <_exit>:
    2226:	f8 94       	cli

00002228 <__stop_program>:
    2228:	ff cf       	rjmp	.-2      	; 0x2228 <__stop_program>
