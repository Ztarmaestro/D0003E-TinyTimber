
Lab3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000009f4  00000a88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000022f  00800104  00800104  00000a8c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a8c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000abc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000afc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012da  00000000  00000000  00000bdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b8d  00000000  00000000  00001eb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008ca  00000000  00000000  00002a43  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e0  00000000  00000000  00003310  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000597  00000000  00000000  000035f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c16  00000000  00000000  00003b87  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  0000479d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__vector_3>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 43 04 	jmp	0x886	; 0x886 <__vector_7>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	81 00       	.word	0x0081	; ????
  5e:	8c 00       	.word	0x008c	; ????
  60:	96 00       	.word	0x0096	; ????
  62:	a1 00       	.word	0x00a1	; ????
  64:	ac 00       	.word	0x00ac	; ????
  66:	b7 00       	.word	0x00b7	; ????
  68:	c3 00       	.word	0x00c3	; ????
  6a:	cf 00       	.word	0x00cf	; ????
  6c:	d9 00       	.word	0x00d9	; ????
  6e:	e5 00       	.word	0x00e5	; ????

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e4 ef       	ldi	r30, 0xF4	; 244
  84:	f9 e0       	ldi	r31, 0x09	; 9
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a4 30       	cpi	r26, 0x04	; 4
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	23 e0       	ldi	r18, 0x03	; 3
  94:	a4 e0       	ldi	r26, 0x04	; 4
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a3 33       	cpi	r26, 0x33	; 51
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 3c 03 	call	0x678	; 0x678 <main>
  a6:	0c 94 f8 04 	jmp	0x9f0	; 0x9f0 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <blink>:

void primes()
{
	long i = 25000;
	if (is_prime(prime) == 1){
		writeLong(i);
  ae:	c9 ef       	ldi	r28, 0xF9	; 249
  b0:	d0 e0       	ldi	r29, 0x00	; 0
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	0e 94 85 03 	call	0x70a	; 0x70a <getbTimer>
  b8:	0a 97       	sbiw	r24, 0x0a	; 10
  ba:	e4 f3       	brlt	.-8      	; 0xb4 <blink+0x6>
  bc:	88 81       	ld	r24, Y
  be:	81 27       	eor	r24, r17
  c0:	88 83       	st	Y, r24
  c2:	0e 94 8a 03 	call	0x714	; 0x714 <setbTimer>
  c6:	f6 cf       	rjmp	.-20     	; 0xb4 <blink+0x6>

000000c8 <LCD_Init>:
  c8:	e1 e6       	ldi	r30, 0x61	; 97
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 e8       	ldi	r24, 0x80	; 128
  ce:	80 83       	st	Z, r24
  d0:	10 82       	st	Z, r1
  d2:	87 eb       	ldi	r24, 0xB7	; 183
  d4:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
  d8:	87 e0       	ldi	r24, 0x07	; 7
  da:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
  de:	80 ec       	ldi	r24, 0xC0	; 192
  e0:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
  e4:	8f e0       	ldi	r24, 0x0F	; 15
  e6:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
  ea:	08 95       	ret

000000ec <caseNumbers>:
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	fc 01       	movw	r30, r24
  f0:	f0 97       	sbiw	r30, 0x30	; 48
  f2:	ea 30       	cpi	r30, 0x0A	; 10
  f4:	f1 05       	cpc	r31, r1
  f6:	08 f0       	brcs	.+2      	; 0xfa <caseNumbers+0xe>
  f8:	73 c0       	rjmp	.+230    	; 0x1e0 <caseNumbers+0xf4>
  fa:	e2 5d       	subi	r30, 0xD2	; 210
  fc:	ff 4f       	sbci	r31, 0xFF	; 255
  fe:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__tablejump2__>
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <reg1>
 108:	95 e0       	ldi	r25, 0x05	; 5
 10a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <reg2>
 10e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <reg3>
 112:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <reg4>
 116:	08 95       	ret
 118:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <reg1>
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <reg2>
 122:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <reg3>
 126:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <reg4>
 12a:	08 95       	ret
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <reg1>
 132:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <reg2>
 136:	9e e0       	ldi	r25, 0x0E	; 14
 138:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <reg3>
 13c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <reg4>
 140:	08 95       	ret
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <reg1>
 148:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <reg2>
 14c:	9b e0       	ldi	r25, 0x0B	; 11
 14e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <reg3>
 152:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <reg4>
 156:	08 95       	ret
 158:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <reg1>
 15c:	85 e0       	ldi	r24, 0x05	; 5
 15e:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <reg2>
 162:	8b e0       	ldi	r24, 0x0B	; 11
 164:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <reg3>
 168:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <reg4>
 16c:	08 95       	ret
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <reg1>
 174:	94 e0       	ldi	r25, 0x04	; 4
 176:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <reg2>
 17a:	9b e0       	ldi	r25, 0x0B	; 11
 17c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <reg3>
 180:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <reg4>
 184:	08 95       	ret
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <reg1>
 18c:	94 e0       	ldi	r25, 0x04	; 4
 18e:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <reg2>
 192:	9f e0       	ldi	r25, 0x0F	; 15
 194:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <reg3>
 198:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <reg4>
 19c:	08 95       	ret
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <reg1>
 1a4:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <reg2>
 1a8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <reg3>
 1ac:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <reg4>
 1b0:	08 95       	ret
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <reg1>
 1b8:	95 e0       	ldi	r25, 0x05	; 5
 1ba:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <reg2>
 1be:	9f e0       	ldi	r25, 0x0F	; 15
 1c0:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <reg3>
 1c4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <reg4>
 1c8:	08 95       	ret
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <reg1>
 1d0:	95 e0       	ldi	r25, 0x05	; 5
 1d2:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <reg2>
 1d6:	9b e0       	ldi	r25, 0x0B	; 11
 1d8:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <reg3>
 1dc:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <reg4>
 1e0:	08 95       	ret

000001e2 <casePosition>:
 1e2:	82 30       	cpi	r24, 0x02	; 2
 1e4:	91 05       	cpc	r25, r1
 1e6:	09 f4       	brne	.+2      	; 0x1ea <casePosition+0x8>
 1e8:	66 c0       	rjmp	.+204    	; 0x2b6 <casePosition+0xd4>
 1ea:	2c f4       	brge	.+10     	; 0x1f6 <casePosition+0x14>
 1ec:	00 97       	sbiw	r24, 0x00	; 0
 1ee:	69 f0       	breq	.+26     	; 0x20a <casePosition+0x28>
 1f0:	01 97       	sbiw	r24, 0x01	; 1
 1f2:	61 f1       	breq	.+88     	; 0x24c <casePosition+0x6a>
 1f4:	08 95       	ret
 1f6:	84 30       	cpi	r24, 0x04	; 4
 1f8:	91 05       	cpc	r25, r1
 1fa:	09 f4       	brne	.+2      	; 0x1fe <casePosition+0x1c>
 1fc:	b2 c0       	rjmp	.+356    	; 0x362 <casePosition+0x180>
 1fe:	0c f4       	brge	.+2      	; 0x202 <casePosition+0x20>
 200:	7b c0       	rjmp	.+246    	; 0x2f8 <casePosition+0x116>
 202:	05 97       	sbiw	r24, 0x05	; 5
 204:	09 f4       	brne	.+2      	; 0x208 <casePosition+0x26>
 206:	ce c0       	rjmp	.+412    	; 0x3a4 <casePosition+0x1c2>
 208:	08 95       	ret
 20a:	ec ee       	ldi	r30, 0xEC	; 236
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	80 7f       	andi	r24, 0xF0	; 240
 212:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <reg1>
 216:	89 2b       	or	r24, r25
 218:	80 83       	st	Z, r24
 21a:	e1 ef       	ldi	r30, 0xF1	; 241
 21c:	f0 e0       	ldi	r31, 0x00	; 0
 21e:	80 81       	ld	r24, Z
 220:	80 7f       	andi	r24, 0xF0	; 240
 222:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <reg2>
 226:	89 2b       	or	r24, r25
 228:	80 83       	st	Z, r24
 22a:	e6 ef       	ldi	r30, 0xF6	; 246
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	80 7f       	andi	r24, 0xF0	; 240
 232:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <reg3>
 236:	89 2b       	or	r24, r25
 238:	80 83       	st	Z, r24
 23a:	eb ef       	ldi	r30, 0xFB	; 251
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	80 81       	ld	r24, Z
 240:	80 7f       	andi	r24, 0xF0	; 240
 242:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <reg4>
 246:	89 2b       	or	r24, r25
 248:	80 83       	st	Z, r24
 24a:	08 95       	ret
 24c:	ec ee       	ldi	r30, 0xEC	; 236
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	20 81       	ld	r18, Z
 252:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <reg1>
 256:	30 e1       	ldi	r19, 0x10	; 16
 258:	93 9f       	mul	r25, r19
 25a:	c0 01       	movw	r24, r0
 25c:	11 24       	eor	r1, r1
 25e:	92 2f       	mov	r25, r18
 260:	9f 70       	andi	r25, 0x0F	; 15
 262:	89 2b       	or	r24, r25
 264:	80 83       	st	Z, r24
 266:	e1 ef       	ldi	r30, 0xF1	; 241
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	20 81       	ld	r18, Z
 26c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <reg2>
 270:	30 e1       	ldi	r19, 0x10	; 16
 272:	93 9f       	mul	r25, r19
 274:	c0 01       	movw	r24, r0
 276:	11 24       	eor	r1, r1
 278:	92 2f       	mov	r25, r18
 27a:	9f 70       	andi	r25, 0x0F	; 15
 27c:	89 2b       	or	r24, r25
 27e:	80 83       	st	Z, r24
 280:	e6 ef       	ldi	r30, 0xF6	; 246
 282:	f0 e0       	ldi	r31, 0x00	; 0
 284:	20 81       	ld	r18, Z
 286:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <reg3>
 28a:	30 e1       	ldi	r19, 0x10	; 16
 28c:	93 9f       	mul	r25, r19
 28e:	c0 01       	movw	r24, r0
 290:	11 24       	eor	r1, r1
 292:	92 2f       	mov	r25, r18
 294:	9f 70       	andi	r25, 0x0F	; 15
 296:	89 2b       	or	r24, r25
 298:	80 83       	st	Z, r24
 29a:	eb ef       	ldi	r30, 0xFB	; 251
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	20 81       	ld	r18, Z
 2a0:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <reg4>
 2a4:	30 e1       	ldi	r19, 0x10	; 16
 2a6:	93 9f       	mul	r25, r19
 2a8:	c0 01       	movw	r24, r0
 2aa:	11 24       	eor	r1, r1
 2ac:	92 2f       	mov	r25, r18
 2ae:	9f 70       	andi	r25, 0x0F	; 15
 2b0:	89 2b       	or	r24, r25
 2b2:	80 83       	st	Z, r24
 2b4:	08 95       	ret
 2b6:	ed ee       	ldi	r30, 0xED	; 237
 2b8:	f0 e0       	ldi	r31, 0x00	; 0
 2ba:	80 81       	ld	r24, Z
 2bc:	80 7f       	andi	r24, 0xF0	; 240
 2be:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <reg1>
 2c2:	89 2b       	or	r24, r25
 2c4:	80 83       	st	Z, r24
 2c6:	e2 ef       	ldi	r30, 0xF2	; 242
 2c8:	f0 e0       	ldi	r31, 0x00	; 0
 2ca:	80 81       	ld	r24, Z
 2cc:	80 7f       	andi	r24, 0xF0	; 240
 2ce:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <reg2>
 2d2:	89 2b       	or	r24, r25
 2d4:	80 83       	st	Z, r24
 2d6:	e7 ef       	ldi	r30, 0xF7	; 247
 2d8:	f0 e0       	ldi	r31, 0x00	; 0
 2da:	80 81       	ld	r24, Z
 2dc:	80 7f       	andi	r24, 0xF0	; 240
 2de:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <reg3>
 2e2:	89 2b       	or	r24, r25
 2e4:	80 83       	st	Z, r24
 2e6:	ec ef       	ldi	r30, 0xFC	; 252
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	80 81       	ld	r24, Z
 2ec:	80 7f       	andi	r24, 0xF0	; 240
 2ee:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <reg4>
 2f2:	89 2b       	or	r24, r25
 2f4:	80 83       	st	Z, r24
 2f6:	08 95       	ret
 2f8:	ed ee       	ldi	r30, 0xED	; 237
 2fa:	f0 e0       	ldi	r31, 0x00	; 0
 2fc:	20 81       	ld	r18, Z
 2fe:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <reg1>
 302:	30 e1       	ldi	r19, 0x10	; 16
 304:	93 9f       	mul	r25, r19
 306:	c0 01       	movw	r24, r0
 308:	11 24       	eor	r1, r1
 30a:	92 2f       	mov	r25, r18
 30c:	9f 70       	andi	r25, 0x0F	; 15
 30e:	89 2b       	or	r24, r25
 310:	80 83       	st	Z, r24
 312:	e2 ef       	ldi	r30, 0xF2	; 242
 314:	f0 e0       	ldi	r31, 0x00	; 0
 316:	20 81       	ld	r18, Z
 318:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <reg2>
 31c:	30 e1       	ldi	r19, 0x10	; 16
 31e:	93 9f       	mul	r25, r19
 320:	c0 01       	movw	r24, r0
 322:	11 24       	eor	r1, r1
 324:	92 2f       	mov	r25, r18
 326:	9f 70       	andi	r25, 0x0F	; 15
 328:	89 2b       	or	r24, r25
 32a:	80 83       	st	Z, r24
 32c:	e7 ef       	ldi	r30, 0xF7	; 247
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	20 81       	ld	r18, Z
 332:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <reg3>
 336:	30 e1       	ldi	r19, 0x10	; 16
 338:	93 9f       	mul	r25, r19
 33a:	c0 01       	movw	r24, r0
 33c:	11 24       	eor	r1, r1
 33e:	92 2f       	mov	r25, r18
 340:	9f 70       	andi	r25, 0x0F	; 15
 342:	89 2b       	or	r24, r25
 344:	80 83       	st	Z, r24
 346:	ec ef       	ldi	r30, 0xFC	; 252
 348:	f0 e0       	ldi	r31, 0x00	; 0
 34a:	20 81       	ld	r18, Z
 34c:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <reg4>
 350:	30 e1       	ldi	r19, 0x10	; 16
 352:	93 9f       	mul	r25, r19
 354:	c0 01       	movw	r24, r0
 356:	11 24       	eor	r1, r1
 358:	92 2f       	mov	r25, r18
 35a:	9f 70       	andi	r25, 0x0F	; 15
 35c:	89 2b       	or	r24, r25
 35e:	80 83       	st	Z, r24
 360:	08 95       	ret
 362:	ee ee       	ldi	r30, 0xEE	; 238
 364:	f0 e0       	ldi	r31, 0x00	; 0
 366:	80 81       	ld	r24, Z
 368:	80 7f       	andi	r24, 0xF0	; 240
 36a:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <reg1>
 36e:	89 2b       	or	r24, r25
 370:	80 83       	st	Z, r24
 372:	e3 ef       	ldi	r30, 0xF3	; 243
 374:	f0 e0       	ldi	r31, 0x00	; 0
 376:	80 81       	ld	r24, Z
 378:	80 7f       	andi	r24, 0xF0	; 240
 37a:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <reg2>
 37e:	89 2b       	or	r24, r25
 380:	80 83       	st	Z, r24
 382:	e8 ef       	ldi	r30, 0xF8	; 248
 384:	f0 e0       	ldi	r31, 0x00	; 0
 386:	80 81       	ld	r24, Z
 388:	80 7f       	andi	r24, 0xF0	; 240
 38a:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <reg3>
 38e:	89 2b       	or	r24, r25
 390:	80 83       	st	Z, r24
 392:	ed ef       	ldi	r30, 0xFD	; 253
 394:	f0 e0       	ldi	r31, 0x00	; 0
 396:	80 81       	ld	r24, Z
 398:	80 7f       	andi	r24, 0xF0	; 240
 39a:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <reg4>
 39e:	89 2b       	or	r24, r25
 3a0:	80 83       	st	Z, r24
 3a2:	08 95       	ret
 3a4:	ee ee       	ldi	r30, 0xEE	; 238
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	20 81       	ld	r18, Z
 3aa:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <reg1>
 3ae:	30 e1       	ldi	r19, 0x10	; 16
 3b0:	93 9f       	mul	r25, r19
 3b2:	c0 01       	movw	r24, r0
 3b4:	11 24       	eor	r1, r1
 3b6:	92 2f       	mov	r25, r18
 3b8:	9f 70       	andi	r25, 0x0F	; 15
 3ba:	89 2b       	or	r24, r25
 3bc:	80 83       	st	Z, r24
 3be:	e3 ef       	ldi	r30, 0xF3	; 243
 3c0:	f0 e0       	ldi	r31, 0x00	; 0
 3c2:	20 81       	ld	r18, Z
 3c4:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <reg2>
 3c8:	30 e1       	ldi	r19, 0x10	; 16
 3ca:	93 9f       	mul	r25, r19
 3cc:	c0 01       	movw	r24, r0
 3ce:	11 24       	eor	r1, r1
 3d0:	92 2f       	mov	r25, r18
 3d2:	9f 70       	andi	r25, 0x0F	; 15
 3d4:	89 2b       	or	r24, r25
 3d6:	80 83       	st	Z, r24
 3d8:	e8 ef       	ldi	r30, 0xF8	; 248
 3da:	f0 e0       	ldi	r31, 0x00	; 0
 3dc:	20 81       	ld	r18, Z
 3de:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <reg3>
 3e2:	30 e1       	ldi	r19, 0x10	; 16
 3e4:	93 9f       	mul	r25, r19
 3e6:	c0 01       	movw	r24, r0
 3e8:	11 24       	eor	r1, r1
 3ea:	92 2f       	mov	r25, r18
 3ec:	9f 70       	andi	r25, 0x0F	; 15
 3ee:	89 2b       	or	r24, r25
 3f0:	80 83       	st	Z, r24
 3f2:	ed ef       	ldi	r30, 0xFD	; 253
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	20 81       	ld	r18, Z
 3f8:	90 91 10 01 	lds	r25, 0x0110	; 0x800110 <reg4>
 3fc:	30 e1       	ldi	r19, 0x10	; 16
 3fe:	93 9f       	mul	r25, r19
 400:	c0 01       	movw	r24, r0
 402:	11 24       	eor	r1, r1
 404:	92 2f       	mov	r25, r18
 406:	9f 70       	andi	r25, 0x0F	; 15
 408:	89 2b       	or	r24, r25
 40a:	80 83       	st	Z, r24
 40c:	08 95       	ret

0000040e <writeChar>:
 40e:	cf 93       	push	r28
 410:	df 93       	push	r29
 412:	eb 01       	movw	r28, r22
 414:	0e 94 76 00 	call	0xec	; 0xec <caseNumbers>
 418:	ce 01       	movw	r24, r28
 41a:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <casePosition>
 41e:	df 91       	pop	r29
 420:	cf 91       	pop	r28
 422:	08 95       	ret

00000424 <is_prime>:
 424:	8f 92       	push	r8
 426:	9f 92       	push	r9
 428:	af 92       	push	r10
 42a:	bf 92       	push	r11
 42c:	cf 92       	push	r12
 42e:	df 92       	push	r13
 430:	ef 92       	push	r14
 432:	ff 92       	push	r15
 434:	4b 01       	movw	r8, r22
 436:	5c 01       	movw	r10, r24
 438:	83 e0       	ldi	r24, 0x03	; 3
 43a:	88 16       	cp	r8, r24
 43c:	91 04       	cpc	r9, r1
 43e:	a1 04       	cpc	r10, r1
 440:	b1 04       	cpc	r11, r1
 442:	ac f1       	brlt	.+106    	; 0x4ae <is_prime+0x8a>
 444:	d5 01       	movw	r26, r10
 446:	c4 01       	movw	r24, r8
 448:	81 70       	andi	r24, 0x01	; 1
 44a:	99 27       	eor	r25, r25
 44c:	aa 27       	eor	r26, r26
 44e:	b0 78       	andi	r27, 0x80	; 128
 450:	bb 23       	and	r27, r27
 452:	54 f4       	brge	.+20     	; 0x468 <is_prime+0x44>
 454:	01 97       	sbiw	r24, 0x01	; 1
 456:	a1 09       	sbc	r26, r1
 458:	b1 09       	sbc	r27, r1
 45a:	8e 6f       	ori	r24, 0xFE	; 254
 45c:	9f 6f       	ori	r25, 0xFF	; 255
 45e:	af 6f       	ori	r26, 0xFF	; 255
 460:	bf 6f       	ori	r27, 0xFF	; 255
 462:	01 96       	adiw	r24, 0x01	; 1
 464:	a1 1d       	adc	r26, r1
 466:	b1 1d       	adc	r27, r1
 468:	89 2b       	or	r24, r25
 46a:	8a 2b       	or	r24, r26
 46c:	8b 2b       	or	r24, r27
 46e:	21 f1       	breq	.+72     	; 0x4b8 <is_prime+0x94>
 470:	c1 2c       	mov	r12, r1
 472:	d1 2c       	mov	r13, r1
 474:	76 01       	movw	r14, r12
 476:	68 94       	set
 478:	c1 f8       	bld	r12, 1
 47a:	0a c0       	rjmp	.+20     	; 0x490 <is_prime+0x6c>
 47c:	c5 01       	movw	r24, r10
 47e:	b4 01       	movw	r22, r8
 480:	a7 01       	movw	r20, r14
 482:	96 01       	movw	r18, r12
 484:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__divmodsi4>
 488:	67 2b       	or	r22, r23
 48a:	68 2b       	or	r22, r24
 48c:	69 2b       	or	r22, r25
 48e:	c1 f0       	breq	.+48     	; 0x4c0 <is_prime+0x9c>
 490:	8f ef       	ldi	r24, 0xFF	; 255
 492:	c8 1a       	sub	r12, r24
 494:	d8 0a       	sbc	r13, r24
 496:	e8 0a       	sbc	r14, r24
 498:	f8 0a       	sbc	r15, r24
 49a:	c8 14       	cp	r12, r8
 49c:	d9 04       	cpc	r13, r9
 49e:	ea 04       	cpc	r14, r10
 4a0:	fb 04       	cpc	r15, r11
 4a2:	61 f7       	brne	.-40     	; 0x47c <is_prime+0x58>
 4a4:	61 e0       	ldi	r22, 0x01	; 1
 4a6:	70 e0       	ldi	r23, 0x00	; 0
 4a8:	80 e0       	ldi	r24, 0x00	; 0
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	0c c0       	rjmp	.+24     	; 0x4c6 <is_prime+0xa2>
 4ae:	61 e0       	ldi	r22, 0x01	; 1
 4b0:	70 e0       	ldi	r23, 0x00	; 0
 4b2:	80 e0       	ldi	r24, 0x00	; 0
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	07 c0       	rjmp	.+14     	; 0x4c6 <is_prime+0xa2>
 4b8:	60 e0       	ldi	r22, 0x00	; 0
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	cb 01       	movw	r24, r22
 4be:	03 c0       	rjmp	.+6      	; 0x4c6 <is_prime+0xa2>
 4c0:	60 e0       	ldi	r22, 0x00	; 0
 4c2:	70 e0       	ldi	r23, 0x00	; 0
 4c4:	cb 01       	movw	r24, r22
 4c6:	ff 90       	pop	r15
 4c8:	ef 90       	pop	r14
 4ca:	df 90       	pop	r13
 4cc:	cf 90       	pop	r12
 4ce:	bf 90       	pop	r11
 4d0:	af 90       	pop	r10
 4d2:	9f 90       	pop	r9
 4d4:	8f 90       	pop	r8
 4d6:	08 95       	ret

000004d8 <printAt>:
		}
	}

}

void printAt(long num, int pos) {
 4d8:	8f 92       	push	r8
 4da:	9f 92       	push	r9
 4dc:	af 92       	push	r10
 4de:	bf 92       	push	r11
 4e0:	cf 92       	push	r12
 4e2:	df 92       	push	r13
 4e4:	ef 92       	push	r14
 4e6:	ff 92       	push	r15
 4e8:	cf 93       	push	r28
 4ea:	df 93       	push	r29
 4ec:	4b 01       	movw	r8, r22
 4ee:	5c 01       	movw	r10, r24
 4f0:	ea 01       	movw	r28, r20
	//lock(&mute);
	int pp = pos;
	writeChar( (num % 100) / 10 + '0', pp);
 4f2:	24 e6       	ldi	r18, 0x64	; 100
 4f4:	30 e0       	ldi	r19, 0x00	; 0
 4f6:	40 e0       	ldi	r20, 0x00	; 0
 4f8:	50 e0       	ldi	r21, 0x00	; 0
 4fa:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__divmodsi4>
 4fe:	0f 2e       	mov	r0, r31
 500:	fa e0       	ldi	r31, 0x0A	; 10
 502:	cf 2e       	mov	r12, r31
 504:	d1 2c       	mov	r13, r1
 506:	e1 2c       	mov	r14, r1
 508:	f1 2c       	mov	r15, r1
 50a:	f0 2d       	mov	r31, r0
 50c:	a7 01       	movw	r20, r14
 50e:	96 01       	movw	r18, r12
 510:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__divmodsi4>
 514:	be 01       	movw	r22, r28
 516:	80 e3       	ldi	r24, 0x30	; 48
 518:	82 0f       	add	r24, r18
 51a:	0e 94 07 02 	call	0x40e	; 0x40e <writeChar>
	pp++;
 51e:	21 96       	adiw	r28, 0x01	; 1
	writeChar( num % 10 + '0', pp);
 520:	c5 01       	movw	r24, r10
 522:	b4 01       	movw	r22, r8
 524:	a7 01       	movw	r20, r14
 526:	96 01       	movw	r18, r12
 528:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__divmodsi4>
 52c:	86 2f       	mov	r24, r22
 52e:	be 01       	movw	r22, r28
 530:	80 5d       	subi	r24, 0xD0	; 208
 532:	0e 94 07 02 	call	0x40e	; 0x40e <writeChar>
	//unlock(&mute);
//	yield();
}
 536:	df 91       	pop	r29
 538:	cf 91       	pop	r28
 53a:	ff 90       	pop	r15
 53c:	ef 90       	pop	r14
 53e:	df 90       	pop	r13
 540:	cf 90       	pop	r12
 542:	bf 90       	pop	r11
 544:	af 90       	pop	r10
 546:	9f 90       	pop	r9
 548:	8f 90       	pop	r8
 54a:	08 95       	ret

0000054c <button>:
void button()
{
	int isPressed = 0;
 54c:	30 e0       	ldi	r19, 0x00	; 0
 54e:	20 e0       	ldi	r18, 0x00	; 0

	while(1){
		//"resets" the button when it has been pressed
		if (((1 << PINB) == 0) && (isPressed == 1)){
 550:	c1 e0       	ldi	r28, 0x01	; 1
 552:	d0 e0       	ldi	r29, 0x00	; 0
 554:	ec 2e       	mov	r14, r28
 556:	fd 2e       	mov	r15, r29
 558:	0c 2f       	mov	r16, r28
 55a:	1d 2f       	mov	r17, r29
 55c:	83 2f       	mov	r24, r19
 55e:	92 2f       	mov	r25, r18
 560:	02 c0       	rjmp	.+4      	; 0x566 <button+0x1a>
 562:	80 2f       	mov	r24, r16
 564:	91 2f       	mov	r25, r17
 566:	23 b1       	in	r18, 0x03	; 3
 568:	ae 01       	movw	r20, r28
 56a:	02 c0       	rjmp	.+4      	; 0x570 <button+0x24>
 56c:	44 0f       	add	r20, r20
 56e:	55 1f       	adc	r21, r21
 570:	2a 95       	dec	r18
 572:	e2 f7       	brpl	.-8      	; 0x56c <button+0x20>
 574:	45 2b       	or	r20, r21
 576:	19 f4       	brne	.+6      	; 0x57e <button+0x32>
 578:	81 30       	cpi	r24, 0x01	; 1
 57a:	91 05       	cpc	r25, r1
 57c:	59 f1       	breq	.+86     	; 0x5d4 <button+0x88>
			isPressed = 0;
		}
		//if the segment is on, turn it off, if segment is off turn it on
		if (((1 << PINB) == 1) && (isPressed == 0)){
 57e:	23 b1       	in	r18, 0x03	; 3
 580:	ae 01       	movw	r20, r28
 582:	02 c0       	rjmp	.+4      	; 0x588 <button+0x3c>
 584:	44 0f       	add	r20, r20
 586:	55 1f       	adc	r21, r21
 588:	2a 95       	dec	r18
 58a:	e2 f7       	brpl	.-8      	; 0x584 <button+0x38>
 58c:	41 30       	cpi	r20, 0x01	; 1
 58e:	51 05       	cpc	r21, r1
 590:	41 f7       	brne	.-48     	; 0x562 <button+0x16>
			count++;
			printAt(count, 3);
			}
			isPressed = 1;
 592:	3e 2d       	mov	r19, r14
 594:	2f 2d       	mov	r18, r15
		//"resets" the button when it has been pressed
		if (((1 << PINB) == 0) && (isPressed == 1)){
			isPressed = 0;
		}
		//if the segment is on, turn it off, if segment is off turn it on
		if (((1 << PINB) == 1) && (isPressed == 0)){
 596:	89 2b       	or	r24, r25
 598:	09 f7       	brne	.-62     	; 0x55c <button+0x10>
			count++;
 59a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <count>
 59e:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <count+0x1>
 5a2:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <count+0x2>
 5a6:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <count+0x3>
 5aa:	bc 01       	movw	r22, r24
 5ac:	cd 01       	movw	r24, r26
 5ae:	6f 5f       	subi	r22, 0xFF	; 255
 5b0:	7f 4f       	sbci	r23, 0xFF	; 255
 5b2:	8f 4f       	sbci	r24, 0xFF	; 255
 5b4:	9f 4f       	sbci	r25, 0xFF	; 255
 5b6:	60 93 0c 01 	sts	0x010C, r22	; 0x80010c <count>
 5ba:	70 93 0d 01 	sts	0x010D, r23	; 0x80010d <count+0x1>
 5be:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <count+0x2>
 5c2:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <count+0x3>
			printAt(count, 3);
 5c6:	43 e0       	ldi	r20, 0x03	; 3
 5c8:	50 e0       	ldi	r21, 0x00	; 0
 5ca:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <printAt>
			}
			isPressed = 1;
 5ce:	3c 2f       	mov	r19, r28
 5d0:	2d 2f       	mov	r18, r29
 5d2:	c4 cf       	rjmp	.-120    	; 0x55c <button+0x10>
		//"resets" the button when it has been pressed
		if (((1 << PINB) == 0) && (isPressed == 1)){
			isPressed = 0;
		}
		//if the segment is on, turn it off, if segment is off turn it on
		if (((1 << PINB) == 1) && (isPressed == 0)){
 5d4:	23 b1       	in	r18, 0x03	; 3
 5d6:	ae 01       	movw	r20, r28
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <button+0x92>
 5da:	44 0f       	add	r20, r20
 5dc:	55 1f       	adc	r21, r21
 5de:	2a 95       	dec	r18
 5e0:	e2 f7       	brpl	.-8      	; 0x5da <button+0x8e>
 5e2:	41 30       	cpi	r20, 0x01	; 1
 5e4:	51 05       	cpc	r21, r1
 5e6:	09 f0       	breq	.+2      	; 0x5ea <button+0x9e>
 5e8:	be cf       	rjmp	.-132    	; 0x566 <button+0x1a>
 5ea:	d7 cf       	rjmp	.-82     	; 0x59a <button+0x4e>

000005ec <computePrimes>:
			isPressed = 1;
		}
	
}

void computePrimes(int pos) {
 5ec:	ec 01       	movw	r28, r24
	long n;

	for(n = 1; ; n++) {
 5ee:	c1 2c       	mov	r12, r1
 5f0:	d1 2c       	mov	r13, r1
 5f2:	76 01       	movw	r14, r12
 5f4:	c3 94       	inc	r12
		if (is_prime(n)) {
 5f6:	c7 01       	movw	r24, r14
 5f8:	b6 01       	movw	r22, r12
 5fa:	0e 94 12 02 	call	0x424	; 0x424 <is_prime>
 5fe:	67 2b       	or	r22, r23
 600:	68 2b       	or	r22, r24
 602:	69 2b       	or	r22, r25
 604:	29 f0       	breq	.+10     	; 0x610 <computePrimes+0x24>
			printAt(n, pos);
 606:	ae 01       	movw	r20, r28
 608:	c7 01       	movw	r24, r14
 60a:	b6 01       	movw	r22, r12
 60c:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <printAt>
}

void computePrimes(int pos) {
	long n;

	for(n = 1; ; n++) {
 610:	8f ef       	ldi	r24, 0xFF	; 255
 612:	c8 1a       	sub	r12, r24
 614:	d8 0a       	sbc	r13, r24
 616:	e8 0a       	sbc	r14, r24
 618:	f8 0a       	sbc	r15, r24
		if (is_prime(n)) {
			printAt(n, pos);
		}
	}
 61a:	ed cf       	rjmp	.-38     	; 0x5f6 <computePrimes+0xa>

0000061c <__vector_3>:
}

ISR(PCINT1_vect){
 61c:	1f 92       	push	r1
 61e:	0f 92       	push	r0
 620:	0f b6       	in	r0, 0x3f	; 63
 622:	0f 92       	push	r0
 624:	11 24       	eor	r1, r1
 626:	2f 93       	push	r18
 628:	3f 93       	push	r19
 62a:	4f 93       	push	r20
 62c:	5f 93       	push	r21
 62e:	6f 93       	push	r22
 630:	7f 93       	push	r23
 632:	8f 93       	push	r24
 634:	9f 93       	push	r25
 636:	af 93       	push	r26
 638:	bf 93       	push	r27
 63a:	ef 93       	push	r30
 63c:	ff 93       	push	r31
	if ((1 << PINB) == 0){
 63e:	23 b1       	in	r18, 0x03	; 3
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	02 c0       	rjmp	.+4      	; 0x64a <__vector_3+0x2e>
 646:	88 0f       	add	r24, r24
 648:	99 1f       	adc	r25, r25
 64a:	2a 95       	dec	r18
 64c:	e2 f7       	brpl	.-8      	; 0x646 <__vector_3+0x2a>
 64e:	89 2b       	or	r24, r25
 650:	11 f4       	brne	.+4      	; 0x656 <__vector_3+0x3a>
		yield();
 652:	0e 94 28 04 	call	0x850	; 0x850 <yield>
	}
}
 656:	ff 91       	pop	r31
 658:	ef 91       	pop	r30
 65a:	bf 91       	pop	r27
 65c:	af 91       	pop	r26
 65e:	9f 91       	pop	r25
 660:	8f 91       	pop	r24
 662:	7f 91       	pop	r23
 664:	6f 91       	pop	r22
 666:	5f 91       	pop	r21
 668:	4f 91       	pop	r20
 66a:	3f 91       	pop	r19
 66c:	2f 91       	pop	r18
 66e:	0f 90       	pop	r0
 670:	0f be       	out	0x3f, r0	; 63
 672:	0f 90       	pop	r0
 674:	1f 90       	pop	r1
 676:	18 95       	reti

00000678 <main>:


int main() {
	LCD_Init();
 678:	0e 94 64 00 	call	0xc8	; 0xc8 <LCD_Init>
	spawn(button, 69);
 67c:	65 e4       	ldi	r22, 0x45	; 69
 67e:	70 e0       	ldi	r23, 0x00	; 0
 680:	86 ea       	ldi	r24, 0xA6	; 166
 682:	92 e0       	ldi	r25, 0x02	; 2
 684:	0e 94 8f 03 	call	0x71e	; 0x71e <spawn>
	spawn(blink, 88);
 688:	68 e5       	ldi	r22, 0x58	; 88
 68a:	70 e0       	ldi	r23, 0x00	; 0
 68c:	87 e5       	ldi	r24, 0x57	; 87
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	0e 94 8f 03 	call	0x71e	; 0x71e <spawn>
 	computePrimes(0);
 694:	80 e0       	ldi	r24, 0x00	; 0
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	0e 94 f6 02 	call	0x5ec	; 0x5ec <computePrimes>

0000069c <enqueue>:
	}
	else{
		m->locked = 0;
	}
	ENABLE();
}
 69c:	dc 01       	movw	r26, r24
 69e:	15 96       	adiw	r26, 0x05	; 5
 6a0:	1c 92       	st	X, r1
 6a2:	1e 92       	st	-X, r1
 6a4:	14 97       	sbiw	r26, 0x04	; 4
 6a6:	db 01       	movw	r26, r22
 6a8:	ed 91       	ld	r30, X+
 6aa:	fc 91       	ld	r31, X
 6ac:	11 97       	sbiw	r26, 0x01	; 1
 6ae:	30 97       	sbiw	r30, 0x00	; 0
 6b0:	21 f4       	brne	.+8      	; 0x6ba <enqueue+0x1e>
 6b2:	8d 93       	st	X+, r24
 6b4:	9c 93       	st	X, r25
 6b6:	08 95       	ret
 6b8:	f9 01       	movw	r30, r18
 6ba:	24 81       	ldd	r18, Z+4	; 0x04
 6bc:	35 81       	ldd	r19, Z+5	; 0x05
 6be:	21 15       	cp	r18, r1
 6c0:	31 05       	cpc	r19, r1
 6c2:	d1 f7       	brne	.-12     	; 0x6b8 <enqueue+0x1c>
 6c4:	95 83       	std	Z+5, r25	; 0x05
 6c6:	84 83       	std	Z+4, r24	; 0x04
 6c8:	08 95       	ret

000006ca <dispatch>:
 6ca:	cf 93       	push	r28
 6cc:	df 93       	push	r29
 6ce:	00 d0       	rcall	.+0      	; 0x6d0 <dispatch+0x6>
 6d0:	cd b7       	in	r28, 0x3d	; 61
 6d2:	de b7       	in	r29, 0x3e	; 62
 6d4:	9a 83       	std	Y+2, r25	; 0x02
 6d6:	89 83       	std	Y+1, r24	; 0x01
 6d8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 6dc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 6e0:	06 96       	adiw	r24, 0x06	; 6
 6e2:	0e 94 b7 04 	call	0x96e	; 0x96e <setjmp>
 6e6:	89 2b       	or	r24, r25
 6e8:	59 f4       	brne	.+22     	; 0x700 <dispatch+0x36>
 6ea:	89 81       	ldd	r24, Y+1	; 0x01
 6ec:	9a 81       	ldd	r25, Y+2	; 0x02
 6ee:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 6f2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 6f6:	61 e0       	ldi	r22, 0x01	; 1
 6f8:	70 e0       	ldi	r23, 0x00	; 0
 6fa:	06 96       	adiw	r24, 0x06	; 6
 6fc:	0e 94 d7 04 	call	0x9ae	; 0x9ae <longjmp>
 700:	0f 90       	pop	r0
 702:	0f 90       	pop	r0
 704:	df 91       	pop	r29
 706:	cf 91       	pop	r28
 708:	08 95       	ret

0000070a <getbTimer>:
 70a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <blinkTimer>
 70e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <blinkTimer+0x1>
 712:	08 95       	ret

00000714 <setbTimer>:
 714:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <blinkTimer+0x1>
 718:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <blinkTimer>
 71c:	08 95       	ret

0000071e <spawn>:
 71e:	cf 93       	push	r28
 720:	df 93       	push	r29
 722:	00 d0       	rcall	.+0      	; 0x724 <spawn+0x6>
 724:	cd b7       	in	r28, 0x3d	; 61
 726:	de b7       	in	r29, 0x3e	; 62
 728:	f8 94       	cli
 72a:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__data_end>
 72e:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__data_end+0x1>
 732:	23 2b       	or	r18, r19
 734:	89 f5       	brne	.+98     	; 0x798 <spawn+0x7a>
 736:	2c ee       	ldi	r18, 0xEC	; 236
 738:	31 e0       	ldi	r19, 0x01	; 1
 73a:	30 93 84 01 	sts	0x0184, r19	; 0x800184 <threads+0x5>
 73e:	20 93 83 01 	sts	0x0183, r18	; 0x800183 <threads+0x4>
 742:	29 e5       	ldi	r18, 0x59	; 89
 744:	32 e0       	ldi	r19, 0x02	; 2
 746:	30 93 f1 01 	sts	0x01F1, r19	; 0x8001f1 <threads+0x72>
 74a:	20 93 f0 01 	sts	0x01F0, r18	; 0x8001f0 <threads+0x71>
 74e:	26 ec       	ldi	r18, 0xC6	; 198
 750:	32 e0       	ldi	r19, 0x02	; 2
 752:	30 93 5e 02 	sts	0x025E, r19	; 0x80025e <threads+0xdf>
 756:	20 93 5d 02 	sts	0x025D, r18	; 0x80025d <threads+0xde>
 75a:	10 92 cb 02 	sts	0x02CB, r1	; 0x8002cb <threads+0x14c>
 75e:	10 92 ca 02 	sts	0x02CA, r1	; 0x8002ca <threads+0x14b>
 762:	20 e8       	ldi	r18, 0x80	; 128
 764:	2d bb       	out	0x1d, r18	; 29
 766:	20 93 6c 00 	sts	0x006C, r18	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 76a:	25 b9       	out	0x05, r18	; 5
 76c:	2d e0       	ldi	r18, 0x0D	; 13
 76e:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 772:	20 ee       	ldi	r18, 0xE0	; 224
 774:	30 e3       	ldi	r19, 0x30	; 48
 776:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 77a:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 77e:	22 e0       	ldi	r18, 0x02	; 2
 780:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 784:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 788:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 78c:	21 e0       	ldi	r18, 0x01	; 1
 78e:	30 e0       	ldi	r19, 0x00	; 0
 790:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <__data_end+0x1>
 794:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <__data_end>
 798:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <freeQ>
 79c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <freeQ+0x1>
 7a0:	3a 83       	std	Y+2, r19	; 0x02
 7a2:	29 83       	std	Y+1, r18	; 0x01
 7a4:	23 2b       	or	r18, r19
 7a6:	a9 f0       	breq	.+42     	; 0x7d2 <spawn+0xb4>
 7a8:	e9 81       	ldd	r30, Y+1	; 0x01
 7aa:	fa 81       	ldd	r31, Y+2	; 0x02
 7ac:	44 81       	ldd	r20, Z+4	; 0x04
 7ae:	55 81       	ldd	r21, Z+5	; 0x05
 7b0:	50 93 03 01 	sts	0x0103, r21	; 0x800103 <freeQ+0x1>
 7b4:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <freeQ>
 7b8:	91 83       	std	Z+1, r25	; 0x01
 7ba:	80 83       	st	Z, r24
 7bc:	73 83       	std	Z+3, r23	; 0x03
 7be:	62 83       	std	Z+2, r22	; 0x02
 7c0:	15 82       	std	Z+5, r1	; 0x05
 7c2:	14 82       	std	Z+4, r1	; 0x04
 7c4:	cf 01       	movw	r24, r30
 7c6:	06 96       	adiw	r24, 0x06	; 6
 7c8:	0e 94 b7 04 	call	0x96e	; 0x96e <setjmp>
 7cc:	01 97       	sbiw	r24, 0x01	; 1
 7ce:	49 f5       	brne	.+82     	; 0x822 <spawn+0x104>
 7d0:	01 c0       	rjmp	.+2      	; 0x7d4 <spawn+0xb6>
 7d2:	ff cf       	rjmp	.-2      	; 0x7d2 <spawn+0xb4>
 7d4:	78 94       	sei
 7d6:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__data_start>
 7da:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__data_start+0x1>
 7de:	ed 91       	ld	r30, X+
 7e0:	fc 91       	ld	r31, X
 7e2:	11 97       	sbiw	r26, 0x01	; 1
 7e4:	12 96       	adiw	r26, 0x02	; 2
 7e6:	8d 91       	ld	r24, X+
 7e8:	9c 91       	ld	r25, X
 7ea:	13 97       	sbiw	r26, 0x03	; 3
 7ec:	09 95       	icall
 7ee:	f8 94       	cli
 7f0:	62 e0       	ldi	r22, 0x02	; 2
 7f2:	71 e0       	ldi	r23, 0x01	; 1
 7f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 7f8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 7fc:	0e 94 4e 03 	call	0x69c	; 0x69c <enqueue>
 800:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <readyQ>
 804:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <readyQ+0x1>
 808:	00 97       	sbiw	r24, 0x00	; 0
 80a:	51 f0       	breq	.+20     	; 0x820 <spawn+0x102>
 80c:	fc 01       	movw	r30, r24
 80e:	24 81       	ldd	r18, Z+4	; 0x04
 810:	35 81       	ldd	r19, Z+5	; 0x05
 812:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <readyQ+0x1>
 816:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <readyQ>
 81a:	0e 94 65 03 	call	0x6ca	; 0x6ca <dispatch>
 81e:	01 c0       	rjmp	.+2      	; 0x822 <spawn+0x104>
 820:	ff cf       	rjmp	.-2      	; 0x820 <spawn+0x102>
 822:	e9 81       	ldd	r30, Y+1	; 0x01
 824:	fa 81       	ldd	r31, Y+2	; 0x02
 826:	36 96       	adiw	r30, 0x06	; 6
 828:	89 81       	ldd	r24, Y+1	; 0x01
 82a:	9a 81       	ldd	r25, Y+2	; 0x02
 82c:	87 59       	subi	r24, 0x97	; 151
 82e:	9f 4f       	sbci	r25, 0xFF	; 255
 830:	91 8b       	std	Z+17, r25	; 0x11
 832:	80 8b       	std	Z+16, r24	; 0x10
 834:	93 8b       	std	Z+19, r25	; 0x13
 836:	82 8b       	std	Z+18, r24	; 0x12
 838:	66 e0       	ldi	r22, 0x06	; 6
 83a:	71 e0       	ldi	r23, 0x01	; 1
 83c:	89 81       	ldd	r24, Y+1	; 0x01
 83e:	9a 81       	ldd	r25, Y+2	; 0x02
 840:	0e 94 4e 03 	call	0x69c	; 0x69c <enqueue>
 844:	78 94       	sei
 846:	0f 90       	pop	r0
 848:	0f 90       	pop	r0
 84a:	df 91       	pop	r29
 84c:	cf 91       	pop	r28
 84e:	08 95       	ret

00000850 <yield>:
 850:	f8 94       	cli
 852:	66 e0       	ldi	r22, 0x06	; 6
 854:	71 e0       	ldi	r23, 0x01	; 1
 856:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 85a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 85e:	0e 94 4e 03 	call	0x69c	; 0x69c <enqueue>
 862:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <readyQ>
 866:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <readyQ+0x1>
 86a:	00 97       	sbiw	r24, 0x00	; 0
 86c:	59 f0       	breq	.+22     	; 0x884 <yield+0x34>
 86e:	fc 01       	movw	r30, r24
 870:	24 81       	ldd	r18, Z+4	; 0x04
 872:	35 81       	ldd	r19, Z+5	; 0x05
 874:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <readyQ+0x1>
 878:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <readyQ>
 87c:	0e 94 65 03 	call	0x6ca	; 0x6ca <dispatch>
 880:	78 94       	sei
 882:	08 95       	ret
 884:	ff cf       	rjmp	.-2      	; 0x884 <yield+0x34>

00000886 <__vector_7>:
ISR(TIMER1_COMPA_vect){
 886:	1f 92       	push	r1
 888:	0f 92       	push	r0
 88a:	0f b6       	in	r0, 0x3f	; 63
 88c:	0f 92       	push	r0
 88e:	11 24       	eor	r1, r1
 890:	2f 93       	push	r18
 892:	3f 93       	push	r19
 894:	4f 93       	push	r20
 896:	5f 93       	push	r21
 898:	6f 93       	push	r22
 89a:	7f 93       	push	r23
 89c:	8f 93       	push	r24
 89e:	9f 93       	push	r25
 8a0:	af 93       	push	r26
 8a2:	bf 93       	push	r27
 8a4:	ef 93       	push	r30
 8a6:	ff 93       	push	r31
	blinkTimer++;
 8a8:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <blinkTimer>
 8ac:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <blinkTimer+0x1>
 8b0:	01 96       	adiw	r24, 0x01	; 1
 8b2:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <blinkTimer+0x1>
 8b6:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <blinkTimer>
	yield();
 8ba:	0e 94 28 04 	call	0x850	; 0x850 <yield>
}
 8be:	ff 91       	pop	r31
 8c0:	ef 91       	pop	r30
 8c2:	bf 91       	pop	r27
 8c4:	af 91       	pop	r26
 8c6:	9f 91       	pop	r25
 8c8:	8f 91       	pop	r24
 8ca:	7f 91       	pop	r23
 8cc:	6f 91       	pop	r22
 8ce:	5f 91       	pop	r21
 8d0:	4f 91       	pop	r20
 8d2:	3f 91       	pop	r19
 8d4:	2f 91       	pop	r18
 8d6:	0f 90       	pop	r0
 8d8:	0f be       	out	0x3f, r0	; 63
 8da:	0f 90       	pop	r0
 8dc:	1f 90       	pop	r1
 8de:	18 95       	reti

000008e0 <__divmodsi4>:
 8e0:	05 2e       	mov	r0, r21
 8e2:	97 fb       	bst	r25, 7
 8e4:	1e f4       	brtc	.+6      	; 0x8ec <__divmodsi4+0xc>
 8e6:	00 94       	com	r0
 8e8:	0e 94 87 04 	call	0x90e	; 0x90e <__negsi2>
 8ec:	57 fd       	sbrc	r21, 7
 8ee:	07 d0       	rcall	.+14     	; 0x8fe <__divmodsi4_neg2>
 8f0:	0e 94 95 04 	call	0x92a	; 0x92a <__udivmodsi4>
 8f4:	07 fc       	sbrc	r0, 7
 8f6:	03 d0       	rcall	.+6      	; 0x8fe <__divmodsi4_neg2>
 8f8:	4e f4       	brtc	.+18     	; 0x90c <__divmodsi4_exit>
 8fa:	0c 94 87 04 	jmp	0x90e	; 0x90e <__negsi2>

000008fe <__divmodsi4_neg2>:
 8fe:	50 95       	com	r21
 900:	40 95       	com	r20
 902:	30 95       	com	r19
 904:	21 95       	neg	r18
 906:	3f 4f       	sbci	r19, 0xFF	; 255
 908:	4f 4f       	sbci	r20, 0xFF	; 255
 90a:	5f 4f       	sbci	r21, 0xFF	; 255

0000090c <__divmodsi4_exit>:
 90c:	08 95       	ret

0000090e <__negsi2>:
 90e:	90 95       	com	r25
 910:	80 95       	com	r24
 912:	70 95       	com	r23
 914:	61 95       	neg	r22
 916:	7f 4f       	sbci	r23, 0xFF	; 255
 918:	8f 4f       	sbci	r24, 0xFF	; 255
 91a:	9f 4f       	sbci	r25, 0xFF	; 255
 91c:	08 95       	ret

0000091e <__tablejump2__>:
 91e:	ee 0f       	add	r30, r30
 920:	ff 1f       	adc	r31, r31
 922:	05 90       	lpm	r0, Z+
 924:	f4 91       	lpm	r31, Z
 926:	e0 2d       	mov	r30, r0
 928:	09 94       	ijmp

0000092a <__udivmodsi4>:
 92a:	a1 e2       	ldi	r26, 0x21	; 33
 92c:	1a 2e       	mov	r1, r26
 92e:	aa 1b       	sub	r26, r26
 930:	bb 1b       	sub	r27, r27
 932:	fd 01       	movw	r30, r26
 934:	0d c0       	rjmp	.+26     	; 0x950 <__udivmodsi4_ep>

00000936 <__udivmodsi4_loop>:
 936:	aa 1f       	adc	r26, r26
 938:	bb 1f       	adc	r27, r27
 93a:	ee 1f       	adc	r30, r30
 93c:	ff 1f       	adc	r31, r31
 93e:	a2 17       	cp	r26, r18
 940:	b3 07       	cpc	r27, r19
 942:	e4 07       	cpc	r30, r20
 944:	f5 07       	cpc	r31, r21
 946:	20 f0       	brcs	.+8      	; 0x950 <__udivmodsi4_ep>
 948:	a2 1b       	sub	r26, r18
 94a:	b3 0b       	sbc	r27, r19
 94c:	e4 0b       	sbc	r30, r20
 94e:	f5 0b       	sbc	r31, r21

00000950 <__udivmodsi4_ep>:
 950:	66 1f       	adc	r22, r22
 952:	77 1f       	adc	r23, r23
 954:	88 1f       	adc	r24, r24
 956:	99 1f       	adc	r25, r25
 958:	1a 94       	dec	r1
 95a:	69 f7       	brne	.-38     	; 0x936 <__udivmodsi4_loop>
 95c:	60 95       	com	r22
 95e:	70 95       	com	r23
 960:	80 95       	com	r24
 962:	90 95       	com	r25
 964:	9b 01       	movw	r18, r22
 966:	ac 01       	movw	r20, r24
 968:	bd 01       	movw	r22, r26
 96a:	cf 01       	movw	r24, r30
 96c:	08 95       	ret

0000096e <setjmp>:
 96e:	dc 01       	movw	r26, r24
 970:	2d 92       	st	X+, r2
 972:	3d 92       	st	X+, r3
 974:	4d 92       	st	X+, r4
 976:	5d 92       	st	X+, r5
 978:	6d 92       	st	X+, r6
 97a:	7d 92       	st	X+, r7
 97c:	8d 92       	st	X+, r8
 97e:	9d 92       	st	X+, r9
 980:	ad 92       	st	X+, r10
 982:	bd 92       	st	X+, r11
 984:	cd 92       	st	X+, r12
 986:	dd 92       	st	X+, r13
 988:	ed 92       	st	X+, r14
 98a:	fd 92       	st	X+, r15
 98c:	0d 93       	st	X+, r16
 98e:	1d 93       	st	X+, r17
 990:	cd 93       	st	X+, r28
 992:	dd 93       	st	X+, r29
 994:	ff 91       	pop	r31
 996:	ef 91       	pop	r30
 998:	8d b7       	in	r24, 0x3d	; 61
 99a:	8d 93       	st	X+, r24
 99c:	8e b7       	in	r24, 0x3e	; 62
 99e:	8d 93       	st	X+, r24
 9a0:	8f b7       	in	r24, 0x3f	; 63
 9a2:	8d 93       	st	X+, r24
 9a4:	ed 93       	st	X+, r30
 9a6:	fd 93       	st	X+, r31
 9a8:	88 27       	eor	r24, r24
 9aa:	99 27       	eor	r25, r25
 9ac:	09 94       	ijmp

000009ae <longjmp>:
 9ae:	dc 01       	movw	r26, r24
 9b0:	cb 01       	movw	r24, r22
 9b2:	81 30       	cpi	r24, 0x01	; 1
 9b4:	91 05       	cpc	r25, r1
 9b6:	81 1d       	adc	r24, r1
 9b8:	2d 90       	ld	r2, X+
 9ba:	3d 90       	ld	r3, X+
 9bc:	4d 90       	ld	r4, X+
 9be:	5d 90       	ld	r5, X+
 9c0:	6d 90       	ld	r6, X+
 9c2:	7d 90       	ld	r7, X+
 9c4:	8d 90       	ld	r8, X+
 9c6:	9d 90       	ld	r9, X+
 9c8:	ad 90       	ld	r10, X+
 9ca:	bd 90       	ld	r11, X+
 9cc:	cd 90       	ld	r12, X+
 9ce:	dd 90       	ld	r13, X+
 9d0:	ed 90       	ld	r14, X+
 9d2:	fd 90       	ld	r15, X+
 9d4:	0d 91       	ld	r16, X+
 9d6:	1d 91       	ld	r17, X+
 9d8:	cd 91       	ld	r28, X+
 9da:	dd 91       	ld	r29, X+
 9dc:	ed 91       	ld	r30, X+
 9de:	fd 91       	ld	r31, X+
 9e0:	0d 90       	ld	r0, X+
 9e2:	f8 94       	cli
 9e4:	fe bf       	out	0x3e, r31	; 62
 9e6:	0f be       	out	0x3f, r0	; 63
 9e8:	ed bf       	out	0x3d, r30	; 61
 9ea:	ed 91       	ld	r30, X+
 9ec:	fd 91       	ld	r31, X+
 9ee:	09 94       	ijmp

000009f0 <_exit>:
 9f0:	f8 94       	cli

000009f2 <__stop_program>:
 9f2:	ff cf       	rjmp	.-2      	; 0x9f2 <__stop_program>
